{
	"gitlens.displayName": "GitLens — Git supercharged",
	"gitlens.description": "Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more",
	"gitlens.license": "SEE LICENSE IN LICENSE",
	"gitlens.badges.joinUs.description": "Join us in the #gitlens channel",
	"gitlens.contributes.configuration.currentLineBlame.title": "Current Line Blame",
	"gitlens.currentLine.enabled.markdownDescription": "Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window",
	"gitlens.currentLine.pullRequests.enabled.markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the current line blame annotation. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.currentLine.format.markdownDescription": "Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting",
	"gitlens.currentLine.scrollable.markdownDescription": "Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.",
	"gitlens.currentLine.dateFormat.markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.contributes.configuration.gitCodeLens.title": "Git CodeLens",
	"gitlens.codeLens.enabled.markdownDescription": "Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window",
	"gitlens.codeLens.authors.enabled.markdownDescription": "Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)",
	"gitlens.codeLens.authors.command.disable.description": "Disables click interaction",
	"gitlens.codeLens.authors.command.toggleFileBlame.description": "Toggles file blame",
	"gitlens.codeLens.authors.command.toggleFileHeatmap.description": "Toggles file heatmap",
	"gitlens.codeLens.authors.command.toggleFileChanges.description": "Toggles file changes since before the commit",
	"gitlens.codeLens.authors.command.toggleFileChangesOnly.description": "Toggles file changes from the commit",
	"gitlens.codeLens.authors.command.diffWithPrevious.description": "Compares the current committed file with the previous commit",
	"gitlens.codeLens.authors.command.revealCommitInView.description": "Reveals the commit in the Side Bar",
	"gitlens.codeLens.authors.command.showCommitsInView.description": "Searches for commits within the range",
	"gitlens.codeLens.authors.command.showQuickCommitDetails.description": "Shows a commit details quick pick menu",
	"gitlens.codeLens.authors.command.showQuickCommitFileDetails.description": "Shows a commit file details quick pick menu",
	"gitlens.codeLens.authors.commandens.showQuickFileHistory.description": "Shows a file history quick pick menu",
	"gitlens.codeLens.authors.command.showQuickRepoHistory.description": "Shows a branch history quick pick menu",
	"gitlens.codeLens.authors.command.openCommitOnRemote.description": "Opens the commit on the remote service (when available)",
	"gitlens.codeLens.authors.command.copyRemoteCommitUrl.description": "Copies the remote commit url to the clipboard (when available)",
	"gitlens.codeLens.authors.command.openFileOnRemote.description": "Opens the file revision on the remote service (when available)",
	"gitlens.codeLens.authors.command.copyRemoteFileUrl.description": "Copies the remote file url to the clipboard (when available)",
	"gitlens.codeLens.authors.command.markdownDescription": "Specifies the command to be executed when an _authors_ CodeLens is clicked",
	"gitlens.codeLens.recentChange.enabled.markdownDescription": "Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block",
	"gitlens.codeLens.recentChange.command.disable.description": "Disables click interaction",
	"gitlens.codeLens.recentChange.command.toggleFileBlame.description": "Toggles file blame",
	"gitlens.codeLens.recentChange.command.toggleFileHeatmap.description": "Toggles file heatmap",
	"gitlens.codeLens.recentChange.command.toggleFileChanges.description": "Toggles file changes since before the commit",
	"gitlens.codeLens.recentChange.command.toggleFileChangesOnly.description": "Toggles file changes from the commit",
	"gitlens.codeLens.recentChange.command.diffWithPrevious.description": "Compares the current committed file with the previous commit",
	"gitlens.codeLens.recentChange.command.revealCommitInView.description": "Reveals the commit in the Side Bar",
	"gitlens.codeLens.recentChange.command.showQuickCommitDetails.description": "Shows a commit details quick pick menu",
	"gitlens.codeLens.recentChange.command.showQuickCommitFileDetails.description": "Shows a commit file details quick pick menu",
	"gitlens.codeLens.recentChange.command.showQuickFileHistory.description": "Shows a file history quick pick menu",
	"gitlens.codeLens.recentChange.command.showQuickRepoHistory.description": "Shows a branch history quick pick menu",
	"gitlens.codeLens.recentChange.command.openCommitOnRemote.description": "Opens the commit on the remote service (when available)",
	"gitlens.codeLens.recentChange.command.copyRemoteCommitUrl.description": "Copies the remote commit url to the clipboard (when available)",
	"gitlens.codeLens.recentChange.command.openFileOnRemote.description": "Opens the file revision on the remote service (when available)",
	"gitlens.codeLens.recentChange.command.copyRemoteFileUrl.description": "Copies the remote file url to the clipboard (when available)",
	"gitlens.codeLens.recentChange.command.markdownDescription": "Specifies the command to be executed when a _recent change_ CodeLens is clicked",
	"gitlens.codeLens.scopes.document.description": "Adds CodeLens at the top of the document",
	"gitlens.codeLens.scopes.containers.description": "Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)",
	"gitlens.codeLens.scopes.blocks.description": "Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines",
	"gitlens.codeLens.scopes.markdownDescription": "Specifies where Git CodeLens will be shown in the document",
	"gitlens.codeLens.symbolScopes.markdownDescription": "Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`",
	"gitlens.codeLens.includeSingleLineSymbols.markdownDescription": "Specifies whether to provide any Git CodeLens on symbols that span only a single line",
	"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors.markdownDescription": "Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes",
	"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly.markdownDescription": "Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes",
	"gitlens.strings.codeLens.unsavedChanges.authorsOnly.markdownDescription": "Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes",
	"gitlens.codeLens.dateFormat.markdownDescription": "Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.codeLens.scopesByLanguage.deprecationMessage": "Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead",
	"gitlens.codeLens.scopesByLanguage.markdownDeprecationMessage": "Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead",
	"gitlens.contributes.configuration.statusBarBlame.title": "Status Bar Blame",
	"gitlens.statusBar.enabled.markdownDescription": "Specifies whether to provide blame information in the status bar",
	"gitlens.statusBar.pullRequests.enabled.markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.statusBar.format.markdownDescription": "Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting",
	"gitlens.statusBar.alignment.left.description": "Aligns to the left",
	"gitlens.statusBar.alignment.right.description": "Aligns to the right",
	"gitlens.statusBar.alignment.markdownDescription": "Specifies the blame alignment in the status bar",
	"gitlens.statusBar.command.toggleFileBlame.description": "Toggles file blame",
	"gitlens.statusBar.command.toggleFileHeatmap.description": "Toggles file heatmap",
	"gitlens.statusBar.command.toggleFileChanges.description": "Toggles file changes since before the commit",
	"gitlens.statusBar.command.toggleFileChangesOnly.description": "Toggles file changes from the commit",
	"gitlens.statusBar.command.toggleCodeLens.description": "Toggles Git CodeLens",
	"gitlens.statusBar.command.diffWithPrevious.description": "Compares the current line commit with the previous",
	"gitlens.statusBar.command.diffWithWorking.description": "Compares the current line commit with the working tree",
	"gitlens.statusBar.command.revealCommitInView.description": "Reveals the commit in the Side Bar",
	"gitlens.statusBar.command.showCommitsInView.description": "Shows the commit details",
	"gitlens.statusBar.command.showQuickCommitDetails.description": "Shows a commit details quick pick menu",
	"gitlens.statusBar.command.showQuickCommitFileDetails.description": "Shows a commit file details quick pick menu",
	"gitlens.statusBar.command.showQuickFileHistory.description": "Shows a file history quick pick menu",
	"gitlens.statusBar.command.showQuickRepoHistory.description": "Shows a branch history quick pick menu",
	"gitlens.statusBar.command.openCommitOnRemote.description": "Opens the commit on the remote service (when available)",
	"gitlens.statusBar.command.copyRemoteCommitUrl.description": "Copies the remote commit url to the clipboard (when available)",
	"gitlens.statusBar.command.openFileOnRemote.description": "Opens the file revision on the remote service (when available)",
	"gitlens.statusBar.command.copyRemoteFileUrl.description": "Copies the remote file url to the clipboard (when available)",
	"gitlens.statusBar.command.markdownDescription": "Specifies the command to be executed when the blame status bar item is clicked",
	"gitlens.statusBar.tooltipFormat.markdownDescription": "Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.statusBar.reduceFlicker.markdownDescription": "Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"",
	"gitlens.statusBar.dateFormat.markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.contributes.configuration.hovers.title": "Hovers",
	"gitlens.hovers.enabled.markdownDescription": "Specifies whether to provide any hovers",
	"gitlens.hovers.avatars.markdownDescription": "Specifies whether to show avatar images in hovers",
	"gitlens.hovers.avatarSize.markdownDescription": "Specifies the size of the avatar images in hovers",
	"gitlens.hovers.pullRequests.enabled.markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.hovers.autolinks.enabled.markdownDescription": "Specifies whether to automatically link external resources in commit messages",
	"gitlens.hovers.autolinks.enhanced.markdownDescription": "Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.hovers.currentLine.enabled.markdownDescription": "Specifies whether to provide any hovers for the current line",
	"gitlens.hovers.currentLine.over.annotation.description": "Only shown when hovering over the line annotation",
	"gitlens.hovers.currentLine.over.line.description": "Shown when hovering anywhere over the line",
	"gitlens.hovers.currentLine.over.markdownDescription": "Specifies when to trigger hovers for the current line",
	"gitlens.hovers.currentLine.details.markdownDescription": "Specifies whether to provide a _commit details_ hover for the current line",
	"gitlens.hovers.currentLine.changes.markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for the current line",
	"gitlens.hovers.annotations.enabled.markdownDescription": "Specifies whether to provide any hovers when showing blame annotations",
	"gitlens.hovers.annotations.over.annotation.description": "Only shown when hovering over the line annotation",
	"gitlens.hovers.annotations.over.line.description": "Shown when hovering anywhere over the line",
	"gitlens.hovers.annotations.over.markdownDescription": "Specifies when to trigger hovers when showing blame annotations",
	"gitlens.hovers.annotations.details.markdownDescription": "Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations",
	"gitlens.hovers.annotations.changes.markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations",
	"gitlens.hovers.detailsMarkdownFormat.markdownDescription": "Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.hovers.changesDiff.line.description": "Shows only the changes to the line",
	"gitlens.hovers.changesDiff.hunk.description": "Shows the set of related changes",
	"gitlens.hovers.changesDiff.markdownDescription": "Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover",
	"gitlens.contributes.configuration.views.title": "Views",
	"gitlens.views.defaultItemLimit.markdownDescription": "Specifies the default number of items to show in a view list. Use 0 to specify no limit",
	"gitlens.views.pageItemLimit.markdownDescription": "Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit",
	"gitlens.views.showRelativeDateMarkers.markdownDescription": "Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views",
	"gitlens.views.formats.commits.label.markdownDescription": "Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.views.formats.commits.description.markdownDescription": "Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.views.formats.files.label.markdownDescription": "Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
	"gitlens.views.formats.files.description.markdownDescription": "Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
	"gitlens.views.formats.stashes.label.markdownDescription": "Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.views.formats.stashes.description.markdownDescription": "Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
	"gitlens.views.commitFileFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
	"gitlens.views.commitFileFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
	"gitlens.views.commitFileDescriptionFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
	"gitlens.views.commitFileDescriptionFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
	"gitlens.views.commitFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.label` instead",
	"gitlens.views.commitFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.commits.files.label#` instead",
	"gitlens.views.commitDescriptionFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.description` instead",
	"gitlens.views.commitDescriptionFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.commits.description#` instead",
	"gitlens.views.stashFileFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
	"gitlens.views.stashFileFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
	"gitlens.views.stashFileDescriptionFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
	"gitlens.views.stashFileDescriptionFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
	"gitlens.views.stashFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.label` instead",
	"gitlens.views.stashFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.stashes.files.label#` instead",
	"gitlens.views.stashDescriptionFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.description` instead",
	"gitlens.views.stashDescriptionFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.stashes.description#` instead",
	"gitlens.views.statusFileFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
	"gitlens.views.statusFileFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
	"gitlens.views.statusFileDescriptionFormat.deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
	"gitlens.views.statusFileDescriptionFormat.markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
	"gitlens.contributes.configuration.commitsView.title": "Commits View",
	"gitlens.views.commits.showBranchComparison.hide.description": "Hides the branch comparison",
	"gitlens.views.commits.showBranchComparison.branch.description": "Compares the current branch with a user-selected reference",
	"gitlens.views.commits.showBranchComparison.working.description": "Compares the working tree with a user-selected reference",
	"gitlens.views.commits.showBranchComparison.markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Commits_ view",
	"gitlens.views.commits.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.commits.pullRequests.showForBranches.markdownDescription": "Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.commits.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.commits.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.commits.files.layout.list.description": "Displays files as a list",
	"gitlens.views.commits.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.commits.files.layout.markdownDescription": "Specifies how the _Commits_ view will display files",
	"gitlens.views.commits.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`",
	"gitlens.views.commits.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.commits.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view",
	"gitlens.views.commits.reveal.markdownDescription": "Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.repositoriesView.title": "Repositories View",
	"gitlens.views.repositories.showBranchComparison.hide.description": "Hides the branch comparison",
	"gitlens.views.repositories.showBranchComparison.branch.description": "Compares the current branch with a user-selected reference",
	"gitlens.views.repositories.showBranchComparison.working.description": "Compares the working tree with a user-selected reference",
	"gitlens.views.repositories.showBranchComparison.markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Repositories_ view",
	"gitlens.views.repositories.showUpstreamStatus.markdownDescription": "Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view",
	"gitlens.views.repositories.includeWorkingTree.markdownDescription": "Specifies whether to include working tree file status for each repository in the _Repositories_ view",
	"gitlens.views.repositories.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.repositories.pullRequests.showForBranches.markdownDescription": "Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.repositories.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.repositories.showCommits.markdownDescription": "Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showBranches.markdownDescription": "Specifies whether to show the branches for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showRemotes.markdownDescription": "Specifies whether to show the remotes for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showStashes.markdownDescription": "Specifies whether to show the stashes for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showTags.markdownDescription": "Specifies whether to show the tags for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showContributors.markdownDescription": "Specifies whether to show the contributors for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showWorktrees.markdownDescription": "Specifies whether to show the worktrees for each repository in the _Repositories_ view",
	"gitlens.views.repositories.showIncomingActivity.markdownDescription": "Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view",
	"gitlens.views.repositories.autoRefresh.markdownDescription": "Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes",
	"gitlens.views.repositories.autoReveal.markdownDescription": "Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files",
	"gitlens.views.repositories.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view",
	"gitlens.views.repositories.branches.layout.list.description": "Displays branches as a list",
	"gitlens.views.repositories.branches.layout.tree.description": "Displays branches as a tree when branch names contain slashes `/`",
	"gitlens.views.repositories.branches.layout.markdownDescription": "Specifies how the _Repositories_ view will display branches",
	"gitlens.views.repositories.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.repositories.files.layout.list.description": "Displays files as a list",
	"gitlens.views.repositories.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.repositories.files.layout.markdownDescription": "Specifies how the _Repositories_ view will display files",
	"gitlens.views.repositories.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`",
	"gitlens.views.repositories.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.repositories.compact.markdownDescription": "Specifies whether to show the _Repositories_ view in a compact display density",
	"gitlens.views.repositories.branches.showBranchComparison.hide.description": "Hides the branch comparison",
	"gitlens.views.repositories.branches.showBranchComparison.branch.description": "Compares the branch with a user-selected reference",
	"gitlens.views.repositories.branches.showBranchComparison.markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _Repositories_ view",
	"gitlens.views.repositories.enabled.deprecationMessage": "Deprecated. This setting is no longer used",
	"gitlens.views.repositories.enabled.markdownDeprecationMessage": "Deprecated. This setting is no longer used",
	"gitlens.contributes.configuration.fileHistoryView.title": "File History View",
	"gitlens.views.fileHistory.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.fileHistory.files.layout.list.description": "Displays files as a list",
	"gitlens.views.fileHistory.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.fileHistory.files.layout.markdownDescription": "Specifies how the _File History_ view will display files when showing the history of a folder",
	"gitlens.views.fileHistory.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies to folder history and when `#gitlens.views.fileHistory.files.layout#` is set to `auto`",
	"gitlens.views.fileHistory.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies to folder history and when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.fileHistory.avatars.markdownDescription": "Specifies whether to show avatar images instead of status icons in the _File History_ view",
	"gitlens.advanced.fileHistoryFollowsRenames.markdownDescription": "Specifies whether file histories will follow renames — will affect how merge commits are shown in histories",
	"gitlens.advanced.fileHistoryShowAllBranches.markdownDescription": "Specifies whether file histories will show commits from all branches",
	"gitlens.contributes.configuration.lineHistoryView.title": "Line History View",
	"gitlens.views.lineHistory.avatars.markdownDescription": "Specifies whether to show avatar images instead of status icons in the _Line History_ view",
	"gitlens.views.lineHistory.enabled.deprecationMessage": "Deprecated. This setting is no longer used",
	"gitlens.views.lineHistory.enabled.markdownDeprecationMessage": "Deprecated. This setting is no longer used",
	"gitlens.contributes.configuration.branchesView.title": "Branches View",
	"gitlens.views.branches.showBranchComparison.hide.description": "Hides the branch comparison",
	"gitlens.views.branches.showBranchComparison.branch.description": "Compares the branch with a user-selected reference",
	"gitlens.views.branches.showBranchComparison.markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) in the _Branches_ view",
	"gitlens.views.branches.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.branches.pullRequests.showForBranches.markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.branches.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.branches.branches.layout.list.description": "Displays branches as a list",
	"gitlens.views.branches.branches.layout.tree.description": "Displays branches as a tree when branch names contain slashes `/`",
	"gitlens.views.branches.branches.layout.markdownDescription": "Specifies how the _Branches_ view will display branches",
	"gitlens.sortBranchesBy.dateDescending.description": "Sorts branches by the most recent commit date in descending order",
	"gitlens.sortBranchesBy.dateAscending.description": "Sorts branches by the most recent commit date in ascending order",
	"gitlens.sortBranchesBy.nameAscending.description": "Sorts branches by name in ascending order",
	"gitlens.sortBranchesBy.nameDescending.description": "Sorts branches by name in descending order",
	"gitlens.sortBranchesBy.markdownDescription": "Specifies how branches are sorted in quick pick menus and views",
	"gitlens.views.branches.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.branches.files.layout.list.description": "Displays files as a list",
	"gitlens.views.branches.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.branches.files.layout.markdownDescription": "Specifies how the _Branches_ view will display files",
	"gitlens.views.branches.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`",
	"gitlens.views.branches.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.branches.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view",
	"gitlens.views.branches.reveal.markdownDescription": "Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.remotesView.title": "Remotes View",
	"gitlens.views.remotes.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.remotes.pullRequests.showForBranches.markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.remotes.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.remotes.branches.layout.list.description": "Displays branches as a list",
	"gitlens.views.remotes.branches.layout.tree.description": "Displays branches as a tree when branch names contain slashes `/`",
	"gitlens.views.remotes.branches.layout.markdownDescription": "Specifies how the _Remotes_ view will display branches",
	"gitlens.views.remotes.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.remotes.files.layout.list.description": "Displays files as a list",
	"gitlens.views.remotes.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.remotes.files.layout.markdownDescription": "Specifies how the _Remotes_ view will display files",
	"gitlens.views.remotes.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`",
	"gitlens.views.remotes.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.remotes.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view",
	"gitlens.views.remotes.reveal.markdownDescription": "Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.views.stashes.title": "Stashes View",
	"gitlens.views.stashes.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.stashes.files.layout.list.description": "Displays files as a list",
	"gitlens.views.stashes.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.stashes.files.layout.markdownDescription": "Specifies how the _Stashes_ view will display files",
	"gitlens.views.stashes.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`",
	"gitlens.views.stashes.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.stashes.reveal.markdownDescription": "Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.tagsView.title": "Tags View",
	"gitlens.views.tags.branches.layout.list.description": "Displays tags as a list",
	"gitlens.views.tags.branches.layout.tree.description": "Displays tags as a tree when tags names contain slashes `/`",
	"gitlens.views.tags.branches.layout.markdownDescription": "Specifies how the _Tags_ view will display tags",
	"gitlens.sortTagsBy.dateDescending.description": "Sorts tags by date in descending order",
	"gitlens.sortTagsBy.dateAscending.description": "Sorts tags by date in ascending order",
	"gitlens.sortTagsBy.nameAscending.description": "Sorts tags by name in ascending order",
	"gitlens.sortTagsBy.nameDescending.description": "Sorts tags by name in descending order",
	"gitlens.sortTagsBy.markdownDescription": "Specifies how tags are sorted in quick pick menus and views",
	"gitlens.views.tags.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.tags.files.layout.list.description": "Displays files as a list",
	"gitlens.views.tags.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.tags.files.layout.markdownDescription": "Specifies how the _Tags_ view will display files",
	"gitlens.views.tags.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`",
	"gitlens.views.tags.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.tags.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view",
	"gitlens.views.tags.reveal.markdownDescription": "Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.worktreesView.title": "Worktrees View",
	"gitlens.worktrees.promptForLocation.markdownDescription": "Specifies whether to prompt for a path when creating new worktrees",
	"gitlens.worktrees.defaultLocation.markdownDescription": "Specifies the default path in which new worktrees will be created",
	"gitlens.views.worktrees.showBranchComparison.hide.description": "Hides the branch comparison",
	"gitlens.views.worktrees.showBranchComparison.branch.description": "Compares the worktree branch with a user-selected reference",
	"gitlens.views.worktrees.showBranchComparison.markdownDescription": "Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag. etc) in the _Worktrees_ view",
	"gitlens.views.worktrees.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.worktrees.pullRequests.showForBranches.markdownDescription": "Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.worktrees.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.worktrees.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.worktrees.files.layout.list.description": "Displays files as a list",
	"gitlens.views.worktrees.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.worktrees.files.layout.markdownDescription": "Specifies how the _Worktrees_ view will display files",
	"gitlens.views.worktrees.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`",
	"gitlens.views.worktrees.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.worktrees.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view",
	"gitlens.views.worktrees.reveal.markdownDescription": "Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.contributorsView.title": "Contributors View",
	"gitlens.views.contributors.showAllBranches.markdownDescription": "Specifies whether to show commits from all branches in the _Contributors_ view",
	"gitlens.views.contributors.showStatistics.markdownDescription": "Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size",
	"gitlens.views.contributors.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.contributors.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.sortContributorsBy.countDescending.description": "Sorts contributors by commit count in descending order",
	"gitlens.sortContributorsBy.countAscending.description": "Sorts contributors by commit count in ascending order",
	"gitlens.sortContributorsBy.dateDescending.description": "Sorts contributors by the most recent commit date in descending order",
	"gitlens.sortContributorsBy.dateAscending.description": "Sorts contributors by the most recent commit date in ascending order",
	"gitlens.sortContributorsBy.nameAscending.description": "Sorts contributors by name in ascending order",
	"gitlens.sortContributorsBy.nameDescending.description": "Sorts contributors by name in descending order",
	"gitlens.sortContributorsBy.markdownDescription": "Specifies how contributors are sorted in quick pick menus and views",
	"gitlens.views.contributors.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.contributors.files.layout.list.description": "Displays files as a list",
	"gitlens.views.contributors.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.contributors.files.layout.markdownDescription": "Specifies how the _Contributors_ view will display files",
	"gitlens.views.contributors.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`",
	"gitlens.views.contributors.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.contributors.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view",
	"gitlens.views.contributors.reveal.markdownDescription": "Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view",
	"gitlens.contributes.configuration.searchCompareView.title": "Search & Compare View",
	"gitlens.views.searchAndCompare.pullRequests.enabled.markdownDescription": "Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.searchAndCompare.pullRequests.showForCommits.markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
	"gitlens.views.searchAndCompare.files.layout.auto.description": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level",
	"gitlens.views.searchAndCompare.files.layout.list.description": "Displays files as a list",
	"gitlens.views.searchAndCompare.files.layout.tree.description": "Displays files as a tree",
	"gitlens.views.searchAndCompare.files.layout.markdownDescription": "Specifies how the _Search & Compare_ view will display files",
	"gitlens.views.searchAndCompare.files.threshold.markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`",
	"gitlens.views.searchAndCompare.files.compact.markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`",
	"gitlens.views.searchAndCompare.avatars.markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view",
	"gitlens.contributes.configuration.fileBlame.title": "File Blame",
	"gitlens.blame.toggleMode.file.description": "Toggles each file individually",
	"gitlens.blame.toggleMode.window.description": "Toggles the window, i.e. all files at once",
	"gitlens.blame.toggleMode.markdownDescription": "Specifies how the file blame annotations will be toggled",
	"gitlens.blame.format.markdownDescription": "Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting",
	"gitlens.blame.heatmap.enabled.markdownDescription": "Specifies whether to provide a heatmap indicator in the file blame annotations",
	"gitlens.blame.heatmap.location.left.description": "Adds a heatmap indicator on the left edge of the file blame annotations",
	"gitlens.blame.heatmap.location.right.description": "Adds a heatmap indicator on the right edge of the file blame annotations",
	"gitlens.blame.heatmap.location.markdownDescription": "Specifies where the heatmap indicators will be shown in the file blame annotations",
	"gitlens.blame.avatars.markdownDescription": "Specifies whether to show avatar images in the file blame annotations",
	"gitlens.blame.compact.markdownDescription": "Specifies whether to compact (deduplicate) matching adjacent file blame annotations",
	"gitlens.blame.highlight.enabled.markdownDescription": "Specifies whether to highlight lines associated with the current line",
	"gitlens.blame.highlight.locations.gutter.description": "Adds an indicator to the gutter",
	"gitlens.blame.highlight.locations.line.description": "Adds a full-line highlight background color",
	"gitlens.blame.highlight.locations.overview.description": "Adds an indicator to the scroll bar",
	"gitlens.blame.highlight.locations.markdownDescription": "Specifies where the associated line highlights will be shown",
	"gitlens.blame.separateLines.markdownDescription": "Specifies whether file blame annotations will be separated by a small gap",
	"gitlens.blame.dateFormat.markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.contributes.configuration.fileChanges.title": "File Changes",
	"gitlens.changes.toggleMode.file.description": "Toggles each file individually",
	"gitlens.changes.toggleMode.window.description": "Toggles the window, i.e. all files at once",
	"gitlens.changes.toggleMode.markdownDescription": "Specifies how the file changes annotations will be toggled",
	"gitlens.changes.locations.gutter.description": "Adds an indicator to the gutter",
	"gitlens.changes.locations.line.description": "Adds a full-line highlight background color",
	"gitlens.changes.locations.overview.description": "Adds an indicator to the scroll bar",
	"gitlens.changes.locations.markdownDescription": "Specifies where the indicators of the file changes annotations will be shown",
	"gitlens.contributes.configuration.fileHeatmap.title": "File Heatmap",
	"gitlens.heatmap.toggleMode.file.description": "Toggles each file individually",
	"gitlens.heatmap.toggleMode.window.description": "Toggles the window, i.e. all files at once",
	"gitlens.heatmap.toggleMode.markdownDescription": "Specifies how the file heatmap annotations will be toggled",
	"gitlens.heatmap.locations.gutter.description": "Adds an indicator to the gutter",
	"gitlens.heatmap.locations.line.description": "Adds a full-line highlight background color",
	"gitlens.heatmap.locations.overview.description": "Adds an indicator to the scroll bar",
	"gitlens.heatmap.locations.markdownDescription": "Specifies where the indicators of the file heatmap annotations will be shown",
	"gitlens.heatmap.ageThreshold.markdownDescription": "Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)",
	"gitlens.heatmap.coldColor.markdownDescription": "Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value",
	"gitlens.heatmap.hotColor.markdownDescription": "Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value",
	"gitlens.contributes.configuration.gitCommandPalette.title": "Git Command Palette",
	"gitlens.gitCommands.sortBy.name.description": "Sorts commands by name",
	"gitlens.gitCommands.sortBy.usage.description": "Sorts commands by last used date",
	"gitlens.gitCommands.sortBy.markdownDescription": "Specifies how Git commands are sorted in the _Git Command Palette_",
	"gitlens.gitCommands.skipConfirmations.branchCreateCommand.description": "Skips branch create confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.branchCreateMenu.description": "Skips branch create confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.coauthorsCommand.description": "Skips co-author confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.coauthorsMenu.description": "Skips co-author confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.fetchCommand.description": "Skips fetch confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.fetchMenu.description": "Skips fetch confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.pullCommand.description": "Skips pull confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.pullMenu.description": "Skips pull confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.pushCommand.description": "Skips push confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.pushMenu.description": "Skips push confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.stashApplyCommand.description": "Skips stash apply confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.stashApplyMenu.description": "Skips stash apply confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.stashPopCommand.description": "Skips stash pop confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.stashPopMenu.description": "Skips stash pop confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.stashPushCommand.description": "Skips stash push confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.stashPushMenu.description": "Skips stash push confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.switchCommand.description": "Skips switch confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.switchMenu.description": "Skips switch confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.tagCreateCommand.description": "Skips tag create confirmations when run from a command, e.g. a view action",
	"gitlens.gitCommands.skipConfirmations.tagCreateMenu.description": "Skips tag create confirmations when run from the Git Command Palette",
	"gitlens.gitCommands.skipConfirmations.markdownDescription": "Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`",
	"gitlens.gitCommands.closeOnFocusOut.markdownDescription": "Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)",
	"gitlens.gitCommands.search.showResultsInSideBar.markdownDescription": "Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context",
	"gitlens.gitCommands.search.matchAll.markdownDescription": "Specifies whether to match all or any commit message search patterns",
	"gitlens.gitCommands.search.matchCase.markdownDescription": "Specifies whether to match commit search patterns with or without regard to casing",
	"gitlens.gitCommands.search.matchRegex.markdownDescription": "Specifies whether to match commit search patterns using regular expressions",
	"gitlens.gitCommands.search.showResultsInView.deprecationMessage": "Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar",
	"gitlens.gitCommands.search.showResultsInView.markdownDeprecationMessage": "Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`",
	"gitlens.contributes.configuration.integrations.title": "Integrations",
	"gitlens.autolinks.prefix.description": "Specifies the short prefix to use to generate autolinks for the external resource",
	"gitlens.autolinks.title.description": "Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number",
	"gitlens.autolinks.url.description": "Specifies the url of the external resource you want to link to. Use `<num>` as the variable for the reference number",
	"gitlens.autolinks.alphanumeric.description": "Specifies whether alphanumeric characters should be allowed in `<num>`",
	"gitlens.autolinks.ignoreCase.description": "Specifies whether case should be ignored when matching the prefix",
	"gitlens.autolinks.markdownDescription": "Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number",
	"gitlens.integrations.enabled.markdownDescription": "Specifies whether to enable rich integrations with any supported remote services",
	"gitlens.remotes.type.description": "Specifies the type of the custom remote service",
	"gitlens.remotes.domain.description": "Specifies the domain name used to match this custom configuration to a Git remote",
	"gitlens.remotes.regex.description": "Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\"",
	"gitlens.remotes.name.description": "Specifies an optional friendly name for the custom remote service",
	"gitlens.remotes.protocol.description": "Specifies an optional url protocol for the custom remote service",
	"gitlens.remotes.urls.repository.markdownDescription": "Specifies the format of a repository url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path",
	"gitlens.remotes.urls.branches.markdownDescription": "Specifies the format of a branches url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch",
	"gitlens.remotes.urls.branch.markdownDescription": "Specifies the format of a branch url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch",
	"gitlens.remotes.urls.commit.markdownDescription": "Specifies the format of a commit url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA",
	"gitlens.remotes.urls.file.markdownDescription": "Specifies the format of a file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information",
	"gitlens.remotes.urls.fileInBranch.markdownDescription": "Specifies the format of a branch file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information",
	"gitlens.remotes.urls.fileInCommit.markdownDescription": "Specifies the format of a commit file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information",
	"gitlens.remotes.urls.fileLine.markdownDescription": "Specifies the format of a line in a file url for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line",
	"gitlens.remotes.urls.fileRange.markdownDescription": "Specifies the format of a range in a file url for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line",
	"gitlens.remotes.markdownDescription": "Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services",
	"gitlens.partners.additionalProperties.enabled.description": "Specifies whether the partner integration should be shown",
	"gitlens.partners.additionalProperties.description": "Specifies the configuration of a partner integration",
	"gitlens.partners.description": "Specifies the configuration of a partner integration",
	"gitlens.liveshare.allowGuestAccess.description": "Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share",
	"gitlens.contributes.configuration.terminal.title": "Terminal",
	"gitlens.terminalLinks.enabled.markdownDescription": "Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more",
	"gitlens.contributes.configuration.visualHistory.title": "Visual File History",
	"gitlens.contributes.configuration.rebaseEditor.title": "Interactive Rebase Editor",
	"gitlens.contributes.configuration.rebaseEditor.ordering.oldestFirst": "Shows oldest commit first",
	"gitlens.contributes.configuration.rebaseEditor.ordering.newestFirst": "Shows newest commit first",
	"gitlens.contributes.configuration.rebaseEditor.ordering.markdownDescription": "Specifies how Git commits are displayed in the _Interactive Rebase Editor_",
	"gitlens.visualHistory.queryLimit.markdownDescription": "Specifies the limit on the how many commits can be queried for statistics in the Visual File History, because of rate limits. Only applies to virtual workspaces.",
	"gitlens.contributes.configuration.dateTimes.title": "Date & Times",
	"gitlens.defaultDateStyle.relative.description": "e.g. 1 day ago",
	"gitlens.defaultDateStyle.absolute.description": "e.g. July 25th, 2018 7:18pm",
	"gitlens.defaultDateStyle.markdownDescription": "Specifies how dates will be displayed by default",
	"gitlens.defaultDateFormat.markdownDescription": "Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.defaultDateLocale.markdownDescription": "Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, 'ja-JP = Japanese, etc.",
	"gitlens.defaultDateShortFormat.markdownDescription": "Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.defaultTimeFormat.markdownDescription": "Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
	"gitlens.defaultDateSource.authored.description": "Uses the date when the changes were authored (i.e. originally written)",
	"gitlens.defaultDateSource.committed.description": "Uses the date when the changes were committed",
	"gitlens.defaultDateSource.markdownDescription": "Specifies whether commit dates should use the authored or committed date",
	"gitlens.contributes.configuration.menusToolbars.title": "Menus & Toolbars",
	"gitlens.menus.markdownDescription": "Specifies which commands will be added to which menus",
	"gitlens.contributes.configuration.keyboard.title": "Keyboard Shortcuts",
	"gitlens.keymap.alternate.description": "Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)",
	"gitlens.keymap.chorded.description": "Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)",
	"gitlens.keymap.none.description": "No shortcut keys will be added",
	"gitlens.keymap.markdownDescription": "Specifies the keymap to use for GitLens shortcut keys",
	"gitlens.contributes.configuration.modes.title": "Modes",
	"gitlens.mode.statusBar.enabled.markdownDescription": "Specifies whether to provide the active GitLens mode in the status bar",
	"gitlens.mode.statusBar.alignment.left.description": "Aligns to the left",
	"gitlens.mode.statusBar.alignment.right.description": "Aligns to the right",
	"gitlens.mode.statusBar.alignment.markdownDescription": "Specifies the active GitLens mode alignment in the status bar",
	"gitlens.mode.active.markdownDescription": "Specifies the active GitLens mode, if any",
	"gitlens.modes.zen.name.description": "Specifies the friendly name of this user-defined mode",
	"gitlens.modes.zen.statusBarItemName.description": "Specifies the name shown in the status bar when this user-defined mode is active",
	"gitlens.modes.zen.description.description": "Specifies the description of this user-defined mode",
	"gitlens.modes.zen.codeLens.description": "Specifies whether to show any Git CodeLens when this user-defined mode is active",
	"gitlens.modes.zen.currentLine.description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active",
	"gitlens.modes.zen.hovers.description": "Specifies whether to show any hovers when this user-defined mode is active",
	"gitlens.modes.zen.statusBar.description": "Specifies whether to show blame information in the status bar when this user-defined mode is active",
	"gitlens.modes.review.name.description": "Specifies the friendly name of this user-defined mode",
	"gitlens.modes.review.statusBarItemName.description": "Specifies the name shown in the status bar when this user-defined mode is active",
	"gitlens.modes.review.description.description": "Specifies the description of this user-defined mode",
	"gitlens.modes.review.codeLens.description": "Specifies whether to show any Git CodeLens when this user-defined mode is active",
	"gitlens.modes.review.currentLine.description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active",
	"gitlens.modes.review.hovers.description": "Specifies whether to show any hovers when this user-defined mode is active",
	"gitlens.modes.review.statusBar.description": "Specifies whether to show blame information in the status bar when this user-defined mode is active",
	"gitlens.modes.additionalProperties.name.description": "Specifies the friendly name of this user-defined mode",
	"gitlens.modes.additionalProperties.statusBarItemName.description": "Specifies the name shown in the status bar when this user-defined mode is active",
	"gitlens.modes.additionalProperties.description.description": "Specifies the description of this user-defined mode",
	"gitlens.modes.additionalProperties.annotations.blame.description": "Shows the file blame annotations",
	"gitlens.modes.additionalProperties.annotations.changes.description": "Shows the file changes annotations",
	"gitlens.modes.additionalProperties.annotations.heatmap.description": "Shows the file heatmap annotations",
	"gitlens.modes.additionalProperties.annotations.description": "Specifies which (if any) file annotations will be shown when this user-defined mode is active",
	"gitlens.modes.additionalProperties.codeLens.description": "Specifies whether to show any Git CodeLens when this user-defined mode is active",
	"gitlens.modes.additionalProperties.currentLine.description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active",
	"gitlens.modes.additionalProperties.hovers.description": "Specifies whether to show any hovers when this user-defined mode is active",
	"gitlens.modes.additionalProperties.statusBar.description": "Specifies whether to show blame information in the status bar when this user-defined mode is active",
	"gitlens.modes.default.zen.name": "Zen",
	"gitlens.modes.default.zen.statusBarItemName": "Zen",
	"gitlens.modes.default.zen.description": "for a zen-like experience, disables many visual features",
	"gitlens.modes.default.review.name": "Review",
	"gitlens.modes.default.review.statusBarItemName": "Reviewing",
	"gitlens.modes.default.review.description": "for reviewing code, enables many visual features",
	"gitlens.modes.markdownDescription": "Specifies the user-defined GitLens modes",
	"gitlens.contributes.configuration.advanced.title": "Advanced",
	"gitlens.detectNestedRepositories.markdownDescription": "Specifies whether to attempt to detect nested repositories when opening files",
	"gitlens.advanced.messages.suppressCommitHasNoPreviousCommitWarning.description": "Commit Has No Previous Commit Warning",
	"gitlens.advanced.messages.suppressCommitNotFoundWarning.description": "Commit Not Found Warning",
	"gitlens.advanced.messages.suppressCreatePullRequestPrompt.description": "Create Pull Request Prompt",
	"gitlens.advanced.messages.suppressDebugLoggingWarning.description": "Debug Logging Warning",
	"gitlens.advanced.messages.suppressFileNotUnderSourceControlWarning.description": "File Not Under Source Control Warning",
	"gitlens.advanced.messages.suppressGitDisabledWarning.description": "Git Disabled Warning",
	"gitlens.advanced.messages.suppressGitMissingWarning.description": "Git Missing Warning",
	"gitlens.advanced.messages.suppressGitVersionWarning.description": "Git Version Warning",
	"gitlens.advanced.messages.suppressLineUncommittedWarning.description": "Line Uncommitted Warning",
	"gitlens.advanced.messages.suppressNoRepositoryWarning.description": "No Repository Warning",
	"gitlens.advanced.messages.suppressRebaseSwitchToTextWarning.description": "Rebase Switch To Text Warning",
	"gitlens.advanced.messages.suppressIntegrationDisconnectedTooManyFailedRequestsWarning.description": "Integration Disconnected; Too Many Failed Requests Warning",
	"gitlens.advanced.messages.suppressIntegrationRequestFailed500Warning.description": "Integration Request Failed (500 status code) Warning",
	"gitlens.advanced.messages.suppressIntegrationRequestTimedOutWarning.description": "Integration Request Timed Out Warning",
	"gitlens.advanced.messages.markdownDescription": "Specifies which messages should be suppressed",
	"gitlens.advanced.repositorySearchDepth.markdownDescription": "Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`",
	"gitlens.advanced.abbreviatedShaLength.markdownDescription": "Specifies the length of abbreviated commit SHAs",
	"gitlens.advanced.abbreviateShaOnCopy.markdownDescription": "Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.",
	"gitlens.advanced.commitOrdering.unspecified.description": "Shows commits in reverse chronological order",
	"gitlens.advanced.commitOrdering.date.description": "Shows commits in reverse chronological order of the commit timestamp",
	"gitlens.advanced.commitOrdering.authorDate.description": "Shows commits in reverse chronological order of the author timestamp",
	"gitlens.advanced.commitOrdering.topo.description": "Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history",
	"gitlens.advanced.commitOrdering.markdownDescription": "Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order",
	"gitlens.blame.ignoreWhitespace.markdownDescription": "Specifies whether to ignore whitespace when comparing revisions during blame operations",
	"gitlens.advanced.blame.customArguments.markdownDescription": "Specifies additional arguments to pass to the `git blame` command",
	"gitlens.advanced.blame.delayAfterEdit.markdownDescription": "Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait",
	"gitlens.advanced.blame.sizeThresholdAfterEdit.markdownDescription": "Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum",
	"gitlens.advanced.similarityThreshold.markdownDescription": "Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename",
	"gitlens.advanced.externalDiffTool.markdownDescription": "Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
	"gitlens.advanced.externalDirectoryDiffTool.markdownDescription": "Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
	"gitlens.advanced.quickPick.closeOnFocusOut.markdownDescription": "Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)",
	"gitlens.advanced.maxListItems.markdownDescription": "Specifies the maximum number of items to show in a list. Use 0 to specify no maximum",
	"gitlens.advanced.maxSearchItems.markdownDescription": "Specifies the maximum number of items to show in a search. Use 0 to specify no maximum",
	"gitlens.advanced.caching.enabled.markdownDescription": "Specifies whether git output will be cached — changing the default is not recommended",
	"gitlens.debug.markdownDescription": "Specifies debug mode",
	"gitlens.advanced.useSymmetricDifferenceNotation.deprecationMessage": "Deprecated. This setting is no longer used",
	"gitlens.advanced.useSymmetricDifferenceNotation.markdownDescription": "Deprecated. This setting is no longer used",
	"gitlens.contributes.configuration.general.title": "General",
	"gitlens.showWelcomeOnInstall.markdownDescription": "Specifies whether to show the Welcome (Quick Setup) experience on first install",
	"gitlens.showWhatsNewAfterUpgrades.markdownDescription": "Specifies whether to show the What's New notification after upgrading to new feature releases",
	"gitlens.outputLevel.silent.description": "Logs nothing",
	"gitlens.outputLevel.errors.description": "Logs only errors",
	"gitlens.outputLevel.verbose.description": "Logs all errors, warnings, and messages",
	"gitlens.outputLevel.debug.description": "Logs all errors, warnings, and messages with extra context useful for debugging",
	"gitlens.outputLevel.markdownDescription": "Specifies how much (if any) output will be sent to the GitLens output channel",
	"gitlens.defaultGravatarsStyle.identicon.description": "A geometric pattern",
	"gitlens.defaultGravatarsStyle.mp.description": "A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)",
	"gitlens.defaultGravatarsStyle.monsterid.description": "A monster with different colors, faces, etc",
	"gitlens.defaultGravatarsStyle.retro.description": "8-bit arcade-style pixelated faces",
	"gitlens.defaultGravatarsStyle.robohash.description": "A robot with different colors, faces, etc",
	"gitlens.defaultGravatarsStyle.wavatar.description": "A face with differing features and backgrounds",
	"gitlens.defaultGravatarsStyle.markdownDescription": "Specifies the style of the gravatar default (fallback) images",
	"gitlens.fileAnnotations.command.unspecified.description": "Shows a menu to choose which file annotations to toggle",
	"gitlens.fileAnnotations.command.blame.description": "Toggles file blame annotations",
	"gitlens.fileAnnotations.command.heatmap.description": "Toggles file heatmap annotations",
	"gitlens.fileAnnotations.command.changes.description": "Toggles file changes annotations",
	"gitlens.fileAnnotations.command.markdownDescription": "Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations",
	"gitlens.proxy.url.description": "Specifies the url of the proxy server to use",
	"gitlens.proxy.strictSsl.description": "Specifies whether the proxy server certificate should be verified against the list of supplied CAs",
	"gitlens.proxy.description": "Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings",
	"gitlens.plusFeatures.enabled.markdownDescription": "Specifies whether to enable GitLens+ features",
	"gitlens.virtualRepositories.enabled.markdownDescription": "Specifies whether to enable virtual repositories support",
	"gitlens.insiders.deprecationMessage": "Deprecated. Use the Insiders edition of GitLens instead",
	"gitlens.insiders.markdownDeprecationMessage": "Deprecated. Use the [Insiders edition](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens-insiders) of GitLens instead",
	"gitlens.gutterBackgroundColor.description": "Specifies the background color of the file blame annotations",
	"gitlens.gutterForegroundColor.description": "Specifies the foreground color of the file blame annotations",
	"gitlens.gutterUncommittedForegroundColor.description": "Specifies the foreground color of an uncommitted line in the file blame annotations",
	"gitlens.trailingLineBackgroundColor.description": "Specifies the background color of the blame annotation for the current line",
	"gitlens.trailingLineForegroundColor.description": "Specifies the foreground color of the blame annotation for the current line",
	"gitlens.lineHighlightBackgroundColor.description": "Specifies the background color of the associated line highlights in blame annotations",
	"gitlens.lineHighlightOverviewRulerColor.description": "Specifies the scroll bar color of the associated line highlights in blame annotations",
	"gitlens.openAutolinkedIssueIconColor.description": "Specifies the icon color of open issues in the GitLens views",
	"gitlens.closedAutolinkedIssueIconColor.description": "Specifies the icon color of closed issues in the GitLens views",
	"gitlens.closedPullRequestIconColor.description": "Specifies the icon color of closed pull requests in the GitLens views",
	"gitlens.openPullRequestIconColor.description": "Specifies the icon color of open pull requests in the GitLens views",
	"gitlens.mergedPullRequestIconColor.description": "Specifies the icon color of merged pull requests in the GitLens views",
	"gitlens.unpublishedChangesIconColor.description": "Specifies the icon color of unpublished changes in the GitLens views",
	"gitlens.unpublishedCommitIconColor.description": "Specifies the icon color of unpublished commits in the GitLens views",
	"gitlens.unpulledChangesIconColor.description": "Specifies the icon color of unpulled changes in the GitLens views",
	"gitlens.decorations.addedForegroundColor.description": "Specifies the decoration foreground color of added files",
	"gitlens.decorations.copiedForegroundColor.description": "Specifies the decoration foreground color of copied files",
	"gitlens.decorations.deletedForegroundColor.description": "Specifies the decoration foreground color of deleted files",
	"gitlens.decorations.ignoredForegroundColor.description": "Specifies the decoration foreground color of ignored files",
	"gitlens.decorations.modifiedForegroundColor.description": "Specifies the decoration foreground color of modified files",
	"gitlens.decorations.untrackedForegroundColor.description": "Specifies the decoration foreground color of untracked files",
	"gitlens.decorations.renamedForegroundColor.description": "Specifies the decoration foreground color of renamed files",
	"gitlens.decorations.branchAheadForegroundColor.description": "Specifies the decoration foreground color of branches that are ahead of their upstream",
	"gitlens.decorations.branchBehindForegroundColor.description": "Specifies the decoration foreground color of branches that are behind their upstream",
	"gitlens.decorations.branchDivergedForegroundColor.description": "Specifies the decoration foreground color of branches that are both ahead and behind their upstream",
	"gitlens.decorations.branchUpToDateForegroundColor.description": "Specifies the decoration foreground color of branches that are up to date with their upstream",
	"gitlens.decorations.branchUnpublishedForegroundColor.description": "Specifies the decoration foreground color of branches that are not yet published to an upstream",
	"gitlens.decorations.branchMissingUpstreamForegroundColor.description": "Specifies the decoration foreground color of branches that have a missing upstream",
	"gitlens.decorations.worktreeView.hasUncommittedChangesForegroundColor.description": "Specifies the decoration foreground color for worktrees that have uncommitted changes",
	"gitlens.commands.category.gitlens.title": "GitLens",
	"gitlens.commands.category.gitlensPlus.title": "GitLens+",
	"gitlens.plus.learn.title": "Learn about GitLens+ Features",
	"gitlens.plus.loginOrSignUp.title": "Sign In to GitLens+...",
	"gitlens.plus.logout.title": "Sign out of GitLens+",
	"gitlens.plus.startPreviewTrial.title": "Try GitLens+ Features Now",
	"gitlens.plus.manage.title": "Manage Your GitLens+ Account...",
	"gitlens.plus.purchase.title": "Upgrade Your GitLens+ Account...",
	"gitlens.plus.hide.title": "Hide GitLens+ Features",
	"gitlens.plus.restore.title": "Restore GitLens+ Features",
	"gitlens.plus.reset.title": "Reset",
	"gitlens.getStarted.title": "Get Started",
	"gitlens.showSettingsPage.title": "Open Settings",
	"gitlens.showSettingsPage.views.title": "Open Settings",
	"gitlens.showSettingsPage.branchesView.title": "Open View Settings",
	"gitlens.showSettingsPage.commitsView.title": "Open View Settings",
	"gitlens.showSettingsPage.contributorsView.title": "Open View Settings",
	"gitlens.showSettingsPage.fileHistoryView.title": "Open View Settings",
	"gitlens.showSettingsPage.lineHistoryView.title": "Open View Settings",
	"gitlens.showSettingsPage.remotesView.title": "Open View Settings",
	"gitlens.showSettingsPage.repositoriesView.title": "Open View Settings",
	"gitlens.showSettingsPage.searchCompareView.title": "Open View Settings",
	"gitlens.showSettingsPage.stashesView.title": "Open View Settings",
	"gitlens.showSettingsPage.tagsView.title": "Open View Settings",
	"gitlens.showSettingsPage.worktreesView.title": "Open View Settings",
	"gitlens.showTimelinePage.title": "Open Visual File History of Active File",
	"gitlens.refreshTimelinePage.title": "Refresh",
	"gitlens.showWelcomePage.title": "Welcome (Quick Setup)",
	"gitlens.showBranchesView.title": "Show Branches View",
	"gitlens.showCommitsView.title": "Show Commits View",
	"gitlens.showContributorsView.title": "Show Contributors View",
	"gitlens.showFileHistoryView.title": "Show File History View",
	"gitlens.showHomeView.title": "Show Home View",
	"gitlens.showLineHistoryView.title": "Show Line History View",
	"gitlens.showRemotesView.title": "Show Remotes View",
	"gitlens.showRepositoriesView.title": "Show Repositories View",
	"gitlens.showSearchAndCompareView.title": "Show Search And Compare Commits View",
	"gitlens.showStashesView.title": "Show Stashes View",
	"gitlens.showTagsView.title": "Show Tags View",
	"gitlens.showTimelineView.title": "Show Visual File History View",
	"gitlens.showWorktreesView.title": "Show Worktrees View",
	"gitlens.compareWith.title": "Compare References...",
	"gitlens.compareHeadWith.title": "Compare HEAD with...",
	"gitlens.compareWorkingWith.title": "Compare Working Tree with...",
	"gitlens.diffDirectory.title": "Open Directory Compare (difftool) with...",
	"gitlens.diffDirectoryWithHead.title": "Open Directory Compare (difftool)",
	"gitlens.diffWithNext.title": "Open Changes with Next Revision",
	"gitlens.diffWithNextInDiffLeft.title": "Open Changes with Next Revision",
	"gitlens.diffWithNextInDiffRight.title": "Open Changes with Next Revision",
	"gitlens.diffWithPrevious.title": "Open Changes with Previous Revision",
	"gitlens.diffWithPreviousInDiffLeft.title": "Open Changes with Previous Revision",
	"gitlens.diffWithPreviousInDiffRight.title": "Open Changes with Previous Revision",
	"gitlens.diffLineWithPrevious.title": "Open Line Changes with Previous Revision",
	"gitlens.diffWithRevision.title": "Open Changes with Revision...",
	"gitlens.diffWithRevisionFrom.title": "Open Changes with Branch or Tag...",
	"gitlens.diffWithWorking.title": "Open Changes with Working File",
	"gitlens.diffWithWorkingInDiffLeft.title": "Open Changes with Working File",
	"gitlens.diffWithWorkingInDiffRight.title": "Open Changes with Working File",
	"gitlens.diffLineWithWorking.title": "Open Line Changes with Working File",
	"gitlens.disableRebaseEditor.title": "Disable Interactive Rebase Editor",
	"gitlens.enableRebaseEditor.title": "Enable Interactive Rebase Editor",
	"gitlens.toggleFileBlame.title": "Toggle File Blame",
	"gitlens.toggleFileBlameInDiffLeft.title": "Toggle File Blame",
	"gitlens.toggleFileBlameInDiffRight.title": "Toggle File Blame",
	"gitlens.clearFileAnnotations.title": "Clear File Annotations",
	"gitlens.computingFileAnnotations.title": "Computing File Annotations...",
	"gitlens.toggleFileHeatmap.title": "Toggle File Heatmap",
	"gitlens.toggleFileHeatmapInDiffLeft.title": "Toggle File Heatmap",
	"gitlens.toggleFileHeatmapInDiffRight.title": "Toggle File Heatmap",
	"gitlens.toggleFileChanges.title": "Toggle File Changes",
	"gitlens.toggleFileChangesOnly.title": "Toggle File Changes",
	"gitlens.toggleLineBlame.title": "Toggle Line Blame",
	"gitlens.toggleCodeLens.title": "Toggle Git CodeLens",
	"gitlens.gitCommands.title": "Git Command Palette",
	"gitlens.gitCommands.branch.title": "Git Branch...",
	"gitlens.gitCommands.cherryPick.title": "Git Cherry Pick...",
	"gitlens.gitCommands.merge.title": "Git Merge...",
	"gitlens.gitCommands.rebase.title": "Git Rebase...",
	"gitlens.gitCommands.reset.title": "Git Reset...",
	"gitlens.gitCommands.revert.title": "Git Revert...",
	"gitlens.gitCommands.switch.title": "Git Switch...",
	"gitlens.gitCommands.tag.title": "Git Tag...",
	"gitlens.gitCommands.worktree.title": "Git Worktree...",
	"gitlens.switchMode.title": "Switch Mode",
	"gitlens.toggleReviewMode.title": "Toggle Review Mode",
	"gitlens.toggleZenMode.title": "Toggle Zen Mode",
	"gitlens.setViewsLayout.title": "Set Views Layout",
	"gitlens.showCommitSearch.title": "Search Commits",
	"gitlens.showLastQuickPick.title": "Show Last Opened Quick Pick",
	"gitlens.revealCommitInView.title": "Reveal Commit in Side Bar",
	"gitlens.showCommitInView.title": "Open Commit Details",
	"gitlens.showInDetailsView.title": "Open Details",
	"gitlens.showCommitsInView.title": "Search for Commits within Selection",
	"gitlens.showFileHistoryInView.title": "Open File History",
	"gitlens.openFileHistory.title": "Open File History",
	"gitlens.openFolderHistory.title": "Open Folder History",
	"gitlens.showQuickCommitDetails.title": "Show Commit",
	"gitlens.showQuickCommitFileDetails.title": "Show Line Commit",
	"gitlens.showQuickRevisionDetails.title": "Show Revision Commit",
	"gitlens.showQuickRevisionDetailsInDiffLeft.title": "Show Revision Commit",
	"gitlens.showQuickRevisionDetailsInDiffRight.title": "Show Revision Commit",
	"gitlens.showQuickFileHistory.title": "Show File History",
	"gitlens.quickOpenFileHistory.title": "Quick Open File History",
	"gitlens.showQuickBranchHistory.title": "Show Branch History",
	"gitlens.showQuickRepoHistory.title": "Show Current Branch History",
	"gitlens.showQuickRepoStatus.title": "Show Repository Status",
	"gitlens.showQuickStashList.title": "Show Stashes",
	"gitlens.addAuthors.title": "Add Co-authors",
	"gitlens.connectRemoteProvider.title": "Connect to Remote",
	"gitlens.disconnectRemoteProvider.title": "Disconnect from Remote",
	"gitlens.copyCurrentBranch.title": "Copy Current Branch Name",
	"gitlens.copyMessageToClipboard.title": "Copy Message",
	"gitlens.copyShaToClipboard.title": "Copy SHA",
	"gitlens.closeUnchangedFiles.title": "Close Unchanged Files",
	"gitlens.openChangedFiles.title": "Open Changed Files",
	"gitlens.openBranchesOnRemote.title": "Open Branches on Remote",
	"gitlens.copyRemoteBranchesUrl.title": "Copy Remote Branches Url",
	"gitlens.openBranchOnRemote.title": "Open Branch on Remote",
	"gitlens.copyRemoteBranchUrl.title": "Copy Remote Branch Url",
	"gitlens.openCommitOnRemote.title": "Open Commit on Remote",
	"gitlens.copyRemoteCommitUrl.title": "Copy Remote Commit Url",
	"gitlens.openComparisonOnRemote.title": "Open Comparison on Remote",
	"gitlens.copyRemoteComparisonUrl.title": "Copy Remote Comparison Url",
	"gitlens.openFileFromRemote.title": "Open File from Remote",
	"gitlens.openFileOnRemote.title": "Open File on Remote",
	"gitlens.copyRemoteFileUrlToClipboard.title": "Copy Remote File Url",
	"gitlens.copyRemoteFileUrlWithoutRange.title": "Copy Remote File Url",
	"gitlens.openFileOnRemoteFrom.title": "Open File on Remote From...",
	"gitlens.copyRemoteFileUrlFrom.title": "Copy Remote File Url From...",
	"gitlens.openBlamePriorToChange.title": "Open Blame Prior to Change",
	"gitlens.openFileRevision.title": "Open File at Revision...",
	"gitlens.openFileRevisionFrom.title": "Open File at Revision from...",
	"gitlens.openIssueOnRemote.title": "Open Issue on Remote",
	"gitlens.copyRemoteIssueUrl.title": "Copy Issue Url",
	"gitlens.openPullRequestOnRemote.title": "Open Pull Request on Remote",
	"gitlens.copyRemotePullRequestUrl.title": "Copy Pull Request Url",
	"gitlens.openAssociatedPullRequestOnRemote.title": "Open Associated Pull Request",
	"gitlens.openRepoOnRemote.title": "Open Repository on Remote",
	"gitlens.copyRemoteRepositoryUrl.title": "Copy Remote Repository Url",
	"gitlens.openRevisionFile.title": "Open File at Revision",
	"gitlens.openRevisionFileInDiffLeft.title": "Open File at Revision",
	"gitlens.openRevisionFileInDiffRight.title": "Open File at Revision",
	"gitlens.openWorkingFile.title": "Open File",
	"gitlens.openWorkingFileInDiffLeft.title": "Open File",
	"gitlens.openWorkingFileInDiffRight.title": "Open File",
	"gitlens.stashApply.title": "Apply Stash",
	"gitlens.views.deleteStash.title": "Delete Stash...",
	"gitlens.stashSave.title": "Stash All Changes",
	"gitlens.stashSaveFiles.title": "Stash Changes",
	"gitlens.externalDiff.title": "Open Changes (difftool)",
	"gitlens.externalDiffAll.title": "Open All Changes (difftool)",
	"gitlens.resetAvatarCache.title": "Reset Avatar Cache",
	"gitlens.resetSuppressedWarnings.title": "Reset Suppressed Warnings",
	"gitlens.inviteToLiveShare.title": "Invite to Live Share",
	"gitlens.browseRepoAtRevision.title": "Browse Repository from Revision",
	"gitlens.browseRepoAtRevisionInNewWindow.title": "Browse Repository from Revision in New Window",
	"gitlens.browseRepoBeforeRevision.title": "Browse Repository from Before Revision",
	"gitlens.browseRepoBeforeRevisionInNewWindow.title": "Browse Repository from Before Revision in New Window",
	"gitlens.views.browseRepoAtRevision.title": "Repository from Here",
	"gitlens.views.browseRepoAtRevisionInNewWindow.title": "Repository from Here in New Window",
	"gitlens.views.browseRepoBeforeRevision.title": "Repository from Before Here",
	"gitlens.views.browseRepoBeforeRevisionInNewWindow.title": "Repository from Before Here in New Window",
	"gitlens.fetchRepositories.title": "Fetch",
	"gitlens.pullRepositories.title": "Pull",
	"gitlens.pushRepositories.title": "Push",
	"gitlens.views.addRemote.title": "Add Remote",
	"gitlens.views.highlightChanges.title": "Highlight All Changes Since Before this Commit",
	"gitlens.views.highlightRevisionChanges.title": "Highlight Changes from this Commit",
	"gitlens.views.restore.title": "Restore (Checkout)",
	"gitlens.views.switchToAnotherBranch.title": "Switch to Another Branch...",
	"gitlens.views.switchToBranch.title": "Switch to Branch...",
	"gitlens.views.switchToCommit.title": "Switch to Commit...",
	"gitlens.views.switchToTag.title": "Switch to Tag...",
	"gitlens.views.copy.title": "Copy",
	"gitlens.views.pruneRemote.title": "Prune",
	"gitlens.views.fetch.title": "Fetch",
	"gitlens.views.publishBranch.title": "Publish Branch",
	"gitlens.views.publishRepository.title": "Publish Repository",
	"gitlens.views.pull.title": "Pull",
	"gitlens.views.push.title": "Push",
	"gitlens.views.pushWithForce.title": "Push (force)",
	"gitlens.views.openInTerminal.title": "Open in Terminal",
	"gitlens.views.setAsDefault.title": "Set as Default",
	"gitlens.views.unsetAsDefault.title": "Unset as Default",
	"gitlens.views.stageDirectory.title": "Stage All Changes",
	"gitlens.views.stageFile.title": "Stage Changes",
	"gitlens.views.unstageDirectory.title": "Unstage All Changes",
	"gitlens.views.unstageFile.title": "Unstage Changes",
	"gitlens.views.star.title": "Add to Favorites",
	"gitlens.views.unstar.title": "Remove from Favorites",
	"gitlens.views.openDirectoryDiff.title": "Open Directory Compare",
	"gitlens.views.openDirectoryDiffWithWorking.title": "Open Directory Compare with Working Tree",
	"gitlens.views.openChanges.title": "Open Changes",
	"gitlens.views.openChangesWithWorking.title": "Open Changes with Working File",
	"gitlens.views.openPreviousChangesWithWorking.title": "Open Previous Changes with Working File",
	"gitlens.views.openFile.title": "Open File",
	"gitlens.views.openFileRevision.title": "Open File at Revision",
	"gitlens.views.openChangedFiles.title": "Open Files",
	"gitlens.views.openChangedFileDiffs.title": "Open All Changes",
	"gitlens.views.openChangedFileDiffsWithWorking.title": "Open All Changes with Working Tree",
	"gitlens.views.openChangedFileRevisions.title": "Open Files at Revision",
	"gitlens.views.applyChanges.title": "Apply Changes",
	"gitlens.views.closeRepository.title": "Close Repository",
	"gitlens.views.compareAncestryWithWorking.title": "Compare Ancestry with Working Tree",
	"gitlens.views.compareWithHead.title": "Compare with HEAD",
	"gitlens.views.compareWithUpstream.title": "Compare with Upstream",
	"gitlens.views.compareWithSelected.title": "Compare with Selected",
	"gitlens.views.selectForCompare.title": "Select for Compare",
	"gitlens.views.compareFileWithSelected.title": "Compare with Selected",
	"gitlens.views.selectFileForCompare.title": "Select for Compare",
	"gitlens.views.compareWithWorking.title": "Compare with Working Tree",
	"gitlens.views.addAuthors.title": "Add Co-authors",
	"gitlens.views.addAuthor.title": "Add as Co-author",
	"gitlens.views.createWorktree.title": "Create Worktree...",
	"gitlens.views.deleteWorktree.title": "Delete Worktree...",
	"gitlens.views.openWorktree.title": "Open Worktree",
	"gitlens.views.openWorktreeInNewWindow.title": "Open Worktree in New Window",
	"gitlens.views.revealWorktreeInExplorer.title": "Reveal Worktree in File Explorer",
	"gitlens.views.cherryPick.title": "Cherry Pick Commit...",
	"gitlens.views.createBranch.title": "Create Branch...",
	"gitlens.views.deleteBranch.title": "Delete Branch...",
	"gitlens.views.renameBranch.title": "Rename Branch...",
	"gitlens.views.createTag.title": "Create Tag...",
	"gitlens.views.deleteTag.title": "Delete Tag...",
	"gitlens.views.mergeBranchInto.title": "Merge Branch into Current Branch...",
	"gitlens.views.pushToCommit.title": "Push to Commit...",
	"gitlens.views.rebaseOntoBranch.title": "Rebase Current Branch onto Branch...",
	"gitlens.views.rebaseOntoCommit.title": "Rebase Current Branch onto Commit...",
	"gitlens.views.rebaseOntoUpstream.title": "Rebase Current Branch onto Upstream...",
	"gitlens.views.resetCommit.title": "Reset Current Branch to Previous Commit...",
	"gitlens.views.resetToCommit.title": "Reset Current Branch to Commit...",
	"gitlens.views.revert.title": "Revert Commit...",
	"gitlens.views.undoCommit.title": "Undo Commit",
	"gitlens.views.terminalRemoveRemote.title": "Remove Remote (via Terminal)",
	"gitlens.views.setBranchComparisonToWorking.title": "Toggle Compare with: Branch",
	"gitlens.views.setBranchComparisonToBranch.title": "Toggle Compare with: Working Tree",
	"gitlens.views.createPullRequest.title": "Create Pull Request...",
	"gitlens.views.openPullRequest.title": "Open Pull Request",
	"gitlens.views.clearNode.title": "Clear",
	"gitlens.views.dismissNode.title": "Dismiss",
	"gitlens.views.editNode.title": "Edit...",
	"gitlens.views.expandNode.title": "Expand",
	"gitlens.views.refreshNode.title": "Refresh",
	"gitlens.views.loadMoreChildren.title": "Load More",
	"gitlens.views.loadAllChildren.title": "Load All",
	"gitlens.views.setShowRelativeDateMarkersOn.title": "Show Date Markers",
	"gitlens.views.setShowRelativeDateMarkersOff.title": "Hide Date Markers",
	"gitlens.views.branches.copy.title": "Copy",
	"gitlens.views.branches.refresh.title": "Refresh",
	"gitlens.views.branches.setLayoutToList.title": "Toggle View: Tree",
	"gitlens.views.branches.setLayoutToTree.title": "Toggle View: List",
	"gitlens.views.branches.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.branches.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.branches.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.branches.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.branches.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.branches.setShowBranchComparisonOn.title": "Show Branch Comparisons",
	"gitlens.views.branches.setShowBranchComparisonOff.title": "Hide Branch Comparisons",
	"gitlens.views.branches.setShowBranchPullRequestOn.title": "Show Branch Pull Requests",
	"gitlens.views.branches.setShowBranchPullRequestOff.title": "Hide Branch Pull Requests",
	"gitlens.views.commits.copy.title": "Copy",
	"gitlens.views.commits.refresh.title": "Refresh",
	"gitlens.views.commits.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.commits.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.commits.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.commits.setMyCommitsOnlyOn.title": "Toggle Filter: All Commits",
	"gitlens.views.commits.setMyCommitsOnlyOff.title": "Toggle Filter: Only My Commits",
	"gitlens.views.commits.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.commits.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.commits.setShowBranchComparisonOn.title": "Show Branch Comparison",
	"gitlens.views.commits.setShowBranchComparisonOff.title": "Hide Branch Comparison",
	"gitlens.views.commits.setShowBranchPullRequestOn.title": "Show Current Branch Pull Request",
	"gitlens.views.commits.setShowBranchPullRequestOff.title": "Hide Current Branch Pull Request",
	"gitlens.views.contributors.copy.title": "Copy",
	"gitlens.views.contributors.refresh.title": "Refresh",
	"gitlens.views.contributors.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.contributors.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.contributors.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.contributors.setShowAllBranchesOn.title": "Toggle Filter: Only Current Branch",
	"gitlens.views.contributors.setShowAllBranchesOff.title": "Toggle Filter: All Branches",
	"gitlens.views.contributors.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.contributors.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.contributors.setShowStatisticsOn.title": "Show Statistics",
	"gitlens.views.contributors.setShowStatisticsOff.title": "Hide Statistics",
	"gitlens.views.fileHistory.changeBase.title": "Change Base...",
	"gitlens.views.fileHistory.copy.title": "Copy",
	"gitlens.views.fileHistory.refresh.title": "Refresh",
	"gitlens.views.fileHistory.setCursorFollowingOn.title": "Toggle History by: File",
	"gitlens.views.fileHistory.setCursorFollowingOff.title": "Toggle History by: Selected Line(s)",
	"gitlens.views.fileHistory.setEditorFollowingOn.title": "Unpin the Current History",
	"gitlens.views.fileHistory.setEditorFollowingOff.title": "Pin the Current History",
	"gitlens.views.fileHistory.setRenameFollowingOn.title": "Toggle Follow Renames: Off",
	"gitlens.views.fileHistory.setRenameFollowingOff.title": "Toggle Follow Renames: On",
	"gitlens.views.fileHistory.setShowAllBranchesOn.title": "Toggle Filter: Only Current Branch",
	"gitlens.views.fileHistory.setShowAllBranchesOff.title": "Toggle Filter: All Branches",
	"gitlens.views.fileHistory.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.fileHistory.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.home.refresh.title": "Refresh",
	"gitlens.views.lineHistory.changeBase.title": "Change Base...",
	"gitlens.views.lineHistory.copy.title": "Copy",
	"gitlens.views.lineHistory.refresh.title": "Refresh",
	"gitlens.views.lineHistory.setEditorFollowingOn.title": "Unpin the Current History",
	"gitlens.views.lineHistory.setEditorFollowingOff.title": "Pin the Current History",
	"gitlens.views.lineHistory.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.lineHistory.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.remotes.copy.title": "Copy",
	"gitlens.views.remotes.refresh.title": "Refresh",
	"gitlens.views.remotes.setLayoutToList.title": "Toggle View: Tree",
	"gitlens.views.remotes.setLayoutToTree.title": "Toggle View: List",
	"gitlens.views.remotes.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.remotes.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.remotes.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.remotes.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.remotes.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.remotes.setShowBranchPullRequestOn.title": "Show Branch Pull Requests",
	"gitlens.views.remotes.setShowBranchPullRequestOff.title": "Hide Branch Pull Requests",
	"gitlens.views.repositories.copy.title": "Copy",
	"gitlens.views.repositories.refresh.title": "Refresh",
	"gitlens.views.repositories.setAutoRefreshToOn.title": "Enable Automatic Refresh",
	"gitlens.views.repositories.setAutoRefreshToOff.title": "Disable Automatic Refresh",
	"gitlens.views.repositories.setBranchesLayoutToList.title": "Toggle Branches View: Tree",
	"gitlens.views.repositories.setBranchesLayoutToTree.title": "Toggle Branches View: List",
	"gitlens.views.repositories.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.repositories.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.repositories.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.repositories.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.repositories.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.repositories.setShowBranchComparisonOn.title": "Show Branch Comparison",
	"gitlens.views.repositories.setShowBranchComparisonOff.title": "Hide Branch Comparison",
	"gitlens.views.repositories.setBranchesShowBranchComparisonOn.title": "Show Branch Comparisons",
	"gitlens.views.repositories.setBranchesShowBranchComparisonOff.title": "Hide Branch Comparisons",
	"gitlens.views.repositories.setShowBranchesOn.title": "Show Branches",
	"gitlens.views.repositories.setShowBranchesOff.title": "Hide Branches",
	"gitlens.views.repositories.setShowCommitsOn.title": "Show Commits",
	"gitlens.views.repositories.setShowCommitsOff.title": "Hide Commits",
	"gitlens.views.repositories.setShowContributorsOn.title": "Show Contributors",
	"gitlens.views.repositories.setShowContributorsOff.title": "Hide Contributors",
	"gitlens.views.repositories.setShowRemotesOn.title": "Show Remotes",
	"gitlens.views.repositories.setShowRemotesOff.title": "Hide Remotes",
	"gitlens.views.repositories.setShowStashesOn.title": "Show Stashes",
	"gitlens.views.repositories.setShowStashesOff.title": "Hide Stashes",
	"gitlens.views.repositories.setShowTagsOn.title": "Show Tags",
	"gitlens.views.repositories.setShowTagsOff.title": "Hide Tags",
	"gitlens.views.repositories.setShowWorktreesOn.title": "Show Worktrees",
	"gitlens.views.repositories.setShowWorktreesOff.title": "Hide Worktrees",
	"gitlens.views.repositories.setShowUpstreamStatusOn.title": "Show Current Branch Status",
	"gitlens.views.repositories.setShowUpstreamStatusOff.title": "Hide Current Branch Status",
	"gitlens.views.repositories.setShowSectionOff.title": "Hide",
	"gitlens.views.searchAndCompare.clear.title": "Clear Results",
	"gitlens.views.searchAndCompare.copy.title": "Copy",
	"gitlens.views.searchAndCompare.pin.title": "Pin",
	"gitlens.views.searchAndCompare.unpin.title": "Unpin",
	"gitlens.views.searchAndCompare.refresh.title": "Refresh",
	"gitlens.views.searchAndCompare.searchCommits.title": "Search Commits...",
	"gitlens.views.searchAndCompare.selectForCompare.title": "Compare References...",
	"gitlens.views.searchAndCompare.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.searchAndCompare.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.searchAndCompare.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.searchAndCompare.setKeepResultsToOn.title": "Keep Results",
	"gitlens.views.searchAndCompare.setKeepResultsToOff.title": "Keep Results",
	"gitlens.views.searchAndCompare.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.searchAndCompare.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.searchAndCompare.swapComparison.title": "Swap Comparison",
	"gitlens.views.searchAndCompare.setFilesFilterOnLeft.title": "Show Left-side Files Only",
	"gitlens.views.searchAndCompare.setFilesFilterOnRight.title": "Show Right-side Files Only",
	"gitlens.views.searchAndCompare.setFilesFilterOff.title": "Clear Filter",
	"gitlens.views.stashes.copy.title": "Copy",
	"gitlens.views.stashes.refresh.title": "Refresh",
	"gitlens.views.stashes.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.stashes.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.stashes.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.tags.copy.title": "Copy",
	"gitlens.views.tags.refresh.title": "Refresh",
	"gitlens.views.tags.setLayoutToList.title": "Toggle View: Tree",
	"gitlens.views.tags.setLayoutToTree.title": "Toggle View: List",
	"gitlens.views.tags.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.tags.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.tags.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.tags.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.tags.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.timeline.openInTab.title": "Open in Editor Area",
	"gitlens.views.timeline.refresh.title": "Refresh",
	"gitlens.views.worktrees.copy.title": "Copy",
	"gitlens.views.worktrees.refresh.title": "Refresh",
	"gitlens.views.worktrees.setFilesLayoutToAuto.title": "Toggle Files View: Tree",
	"gitlens.views.worktrees.setFilesLayoutToList.title": "Toggle Files View: Auto",
	"gitlens.views.worktrees.setFilesLayoutToTree.title": "Toggle Files View: List",
	"gitlens.views.worktrees.setShowAvatarsOn.title": "Show Avatars",
	"gitlens.views.worktrees.setShowAvatarsOff.title": "Hide Avatars",
	"gitlens.views.worktrees.setShowBranchComparisonOn.title": "Show Branch Comparison",
	"gitlens.views.worktrees.setShowBranchComparisonOff.title": "Hide Branch Comparison",
	"gitlens.views.worktrees.setShowBranchPullRequestOn.title": "Show Branch Pull Requests",
	"gitlens.views.worktrees.setShowBranchPullRequestOff.title": "Hide Branch Pull Requests",
	"gitlens.enableDebugLogging.title": "Enable Debug Logging",
	"gitlens.disableDebugLogging.title": "Disable Debug Logging",
	"gitlens.graph.push.title": "Push",
	"gitlens.graph.pull.title": "Pull",
	"gitlens.graph.fetch.title": "Fetch",
	"gitlens.graph.switchToAnotherBranch": "Switch to Another Branch...",
	"gitlens.graph.refresh.title": "Refresh",
	"gitlens.graph.copyRemoteBranchUrl.title": "Copy Remote Branch Url",
	"gitlens.graph.createBranch.title": "Create Branch...",
	"gitlens.graph.deleteBranch.title": "Delete Branch...",
	"gitlens.graph.openBranchOnRemote.title": "Open Branch on Remote",
	"gitlens.graph.mergeBranchInto.title": "Merge Branch into Current Branch...",
	"gitlens.graph.rebaseOntoBranch.title": "Rebase Current Branch onto Branch...",
	"gitlens.graph.rebaseOntoUpstream.title": "Rebase Current Branch onto Upstream...",
	"gitlens.graph.renameBranch.title": "Rename Branch...",
	"gitlens.graph.switchToBranch.title": "Switch to Branch...",
	"gitlens.graph.hideLocalBranch.title": "Hide Local Branch",
	"gitlens.graph.hideRemoteBranch.title": "Hide Remote Branch",
	"gitlens.graph.hideRemote.title": "Hide Remote",
	"gitlens.graph.hideTag.title": "Hide Tag",
	"gitlens.graph.hideRefGroup.title": "Hide",
	"gitlens.graph.cherryPick.cherryPick": "Cherry Pick Commit...",
	"gitlens.graph.copyMessage.title": "Copy Message",
	"gitlens.graph.copySha.title": "Copy SHA",
	"gitlens.graph.copyRemoteCommitUrl.title": "Copy Remote Commit Url",
	"gitlens.graph.showInDetailsView.title": "Open Details",
	"gitlens.graph.openCommitOnRemote.title": "Open Commit on Remote",
	"gitlens.graph.rebaseOntoCommit.title": "Rebase Current Branch onto Commit...",
	"gitlens.graph.resetCommit.title": "Reset Current Branch to Previous Commit...",
	"gitlens.graph.resetToCommit.title": "Reset Current Branch to Commit...",
	"gitlens.graph.revert.title": "Revert Commit...",
	"gitlens.graph.switchToCommit.title": "Switch to Commit...",
	"gitlens.graph.undoCommit.title": "Undo Commit",
	"gitlens.graph.applyStash.title": "Apply Stash",
	"gitlens.graph.deleteStash.title": "Delete Stash...",
	"gitlens.graph.createTag.title": "Create Tag...",
	"gitlens.graph.deleteTag.title": "Delete Tag...",
	"gitlens.graph.switchToTag.title": "Switch to Tag...",
	"gitlens.graph.createWorktree.title": "Create Worktree...",
	"gitlens.graph.createPullRequest.title": "Create Pull Request...",
	"gitlens.graph.openPullRequestOnRemote.title": "Open Pull Request on Remote",
	"gitlens.graph.compareAncestryWithWorking.title": "Compare Ancestry with Working Tree",
	"gitlens.graph.compareWithHead.title": "Compare with HEAD",
	"gitlens.graph.compareWithUpstream.title": "Compare with Upstream",
	"gitlens.graph.compareWithWorking.title": "Compare with Working Tree",
	"gitlens.graph.addAuthor.title": "Add as Co-author",
	"gitlens.graph.copy.title": "Copy",
	"gitlens.graph.columnAuthorOn.title": "Show Author",
	"gitlens.graph.columnAuthorOff.title": "Hide Author",
	"gitlens.graph.columnDateTimeOn.title": "Show Date",
	"gitlens.graph.columnDateTimeOff.title": "Hide Date",
	"gitlens.graph.columnShaOn.title": "Show SHA",
	"gitlens.graph.columnShaOff.title": "Hide SHA",
	"gitlens.submenus.gitlensCommitBrowse.label": "Browse",
	"gitlens.submenus.gitlensCommitCopy.label": "Copy As",
	"gitlens.submenus.gitlensCommitChanges.label": "Open Changes",
	"gitlens.submenus.gitlensCommitFileCopy.label": "Copy As",
	"gitlens.submenus.gitlensCommitFileCommit.label": "Commit",
	"gitlens.submenus.gitlensCommitFileChanges.label": "Open Changes",
	"gitlens.submenus.gitlensEditorAnnotations.label": "File Annotations",
	"gitlens.submenus.gitlensEditorContextChanges.label": "Commit Changes",
	"gitlens.submenus.gitlensEditorChanges.label": "Commit Changes",
	"gitlens.submenus.gitlensExplorerChanges.label": "Commit Changes",
	"gitlens.submenus.gitlensScmResourceGroupChanges.label": "Open Changes",
	"gitlens.submenus.gitlensScmResourceStateChanges.label": "Open Changes",
	"gitlens.submenus.gitlensViewRepositoriesSections.label": "Sections",
	"gitlens.submenus.gitlensViewSearchAndCompareNew.label": "New Search or Compare",
	"gitlens.submenus.gitlensViewSearchAndCompareComparisonFilter.label": "Filter",
	"gitlens.rebase.displayName": "GitLens Interactive Rebase Editor",
	"gitlens.contributes.activitybar.gitlens.title": "GitLens",
	"gitlens.contributes.panel.gitlensPanel.title": "GitLens",
	"gitlens.views.searchAndCompare.welcome.search.noVirtualFolders.contents": "Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)",
	"gitlens.views.searchAndCompare.welcome.search.hasVirtualFolders.contents": "Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22pattern%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)",
	"gitlens.views.searchAndCompare.welcome.compare.noVirtualFolders.contents": "Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)",
	"gitlens.views.worktrees.welcome.contents": "Worktrees allow you to easily work on different branches of a repository simultaneously. You can create multiple working trees, each of which can be opened in individual windows or all together in a single workspace.",
	"gitlens.views.worktrees.welcome.plusAllowed.contents": "Create Worktree...",
	"gitlens.views.worktrees.welcome.verifyEmail.contents": "Please verify your email\n\nTo use Worktrees, please verify the email for the account you created.\n\n[Resend verification email](command:gitlens.plus.resendVerification)\n\n[Refresh verification status](command:gitlens.plus.validate)",
	"gitlens.views.worktrees.welcome.tryNow.contents": "Try worktrees now, without an account, for 3 days on public and private repos, or [sign in](command:gitlens.plus.loginOrSignUp \"Sign in to GitLens+\") for use on public repos.\n\n[Try worktrees now](command:gitlens.plus.startPreviewTrial)",
	"gitlens.views.worktrees.welcome.signIn.contents": "Sign in to use worktrees and other GitLens+ features on public repos and get a free 7-day trial for both public and private repos.\n\n[Sign in to GitLens+](command:gitlens.plus.loginOrSignUp)",
	"gitlens.views.worktrees.welcome.purchasePlan.contents": "[Upgrade your account](command:gitlens.plus.purchase)",
	"gitlens.views.worktrees.welcome.plusFeature.contents": "Worktrees are a [GitLens+ feature](command:gitlens.plus.learn) which can be used on public repos with a [free account](command:gitlens.plus.loginOrSignUp) and private repos with a [paid account](command:gitlens.plus.purchase).\n\n🛈 All other GitLens features can always be used on any repo, without an account.\n◴ GitLens+ [introductory pricing](command:gitlens.plus.purchase) will end with the next release (late Sept, early Oct).",
	"gitlens.views.contextualTitle": "GitLens",
	"gitlens.views.home.name": "Home",
	"gitlens.views.timeline.name": "Visual File History",
	"gitlens.views.commits.name": "Commits",
	"gitlens.views.commitDetails.name": "Commit Details",
	"gitlens.views.repositories.name": "Repositories",
	"gitlens.views.fileHistory.name": "File History",
	"gitlens.views.lineHistory.name": "Line History",
	"gitlens.views.branches.name": "Branches",
	"gitlens.views.remotes.name": "Remotes",
	"gitlens.views.stashes.name": "Stashes",
	"gitlens.views.tags.name": "Tags",
	"gitlens.views.worktrees.name": "Worktrees",
	"gitlens.views.contributors.name": "Contributors",
	"gitlens.views.searchAndCompare.name": "Search & Compare",
	"gitlens.welcome.title": "Get Started with GitLens",
	"gitlens.welcome.description": "Discover and personalize features that supercharge your Git experience",
	"gitlens.welcome.experience.title": "Get setup quickly",
	"gitlens.welcome.experience.description": "Use the Quick Setup to easily configure frequently used GitLens features.\n\n[Open Quick Setup](command:gitlens.showWelcomePage?%22quick-setup%22 \"Opens the GitLens Quick Setup\")",
	"gitlens.welcome.settings.title": "Easily customize every aspect of GitLens",
	"gitlens.welcome.settings.description": "A rich, interactive settings editor enables seemingly endless customization possibilities.\n\n[Open Settings](command:gitlens.showSettingsPage \"Opens the GitLens Interactive Settings\")",
	"gitlens.welcome.currentLineBlame.title": "See who made what changes at a glance",
	"gitlens.welcome.currentLineBlame.description": "Current line and status bar blame provide historical context about line changes.",
	"gitlens.welcome.gitCodeLens.title": "View Git authorship via CodeLens",
	"gitlens.welcome.gitCodeLens.description": "CodeLens adds contextual authorship information and links at the top of each file and at the beginning of each block of code.",
	"gitlens.welcome.revisionHistory.title": "Easily navigate revision history",
	"gitlens.welcome.fileAnnotations.title": "See more context with file annotations",
	"gitlens.welcome.fileAnnotations.description": "Whole file annotations place visual indicators in the gutter and scroll bar that provide additional context about changes.",
	"gitlens.welcome.gitSideBarViews.title": "Explore repositories from the side bar",
	"gitlens.welcome.gitSideBarViews.description": "Rich views expose even more Git functionality in your side bar.\n\n[Set Views Layout](command:gitlens.setViewsLayout)",
	"gitlens.welcome.hostingServiceIntegrations.title": "Integrate with Git hosting services",
	"gitlens.welcome.hostingServiceIntegrations.description": "Quickly gain insights from pull requests and issues without leaving your editor.",
	"gitlens.welcome.gitCommandPalette.title": "Work faster with Git Command Palette",
	"gitlens.welcome.gitCommandPalette.description": "Now you don't have to remember all those Git commands.\n\n[Open Git Command Palette](command:gitlens.gitCommands)",
	"gitlens.welcome.interactiveRebaseEditor.title": "Visualize interactive rebase operations",
	"gitlens.welcome.interactiveRebaseEditor.description": "A user-friendly interactive rebase editor to easily configure an interactive rebase session",
	"gitlens.welcome.terminal.title": "Jump to git details from the terminal",
	"gitlens.welcome.terminal.description": "Using ctrl/cmd+click on autolinks in the integrated terminal will quickly jump to more details for commits, branches, tags, and more.",
	"gitlens.welcome.plus.title": "Introducing GitLens+ Features",
	"gitlens.welcome.plus.description": "Check out the powerfull, all-new, and completely optional, GitLens+ features.\n\n[Learn about GitLens+ features](command:gitlens.plus.learn?false \"Open the GitLens+ features walkthrough\")",
	"gitlens.plus.title": "Introducing GitLens+ Features",
	"gitlens.plus.description": "Get even more out of GitLens in VS Code!",
	"gitlens.plus.intro.tryNow.title": "Introducing GitLens+ Features",
	"gitlens.plus.intro.tryNow.description": "Try GitLens+ features on private repos, free for 3 days, without an account.\n\n[Start a GitLens Pro Trial](command:gitlens.plus.startPreviewTrial)",
	"gitlens.plus.intro.trial.title": "Introducing GitLens+ Features",
	"gitlens.plus.intro.trial.description": "During your GitLens Pro trial, you have additional access to GitLens+ features on private repos.",
	"gitlens.plus.intro.extend.title": "Introducing GitLens+ Features",
	"gitlens.plus.intro.extend.description": "Do you want to continue to use GitLens+ features on private repos, free for an additional 7-days?\n\n[Extend Trial](command:gitlens.plus.loginOrSignUp)",
	"gitlens.plus.intro.signIn.title": "Introducing GitLens+ Features",
	"gitlens.plus.intro.signIn.description": "Do you want to continue to use GitLens+ features on private repos?\n\n[Upgrade to Pro](command:gitlens.plus.command:gitlens.plus.purchase)",
	"gitlens.plus.intro.title": "Introducing GitLens+ Features",
	"gitlens.plus.commitGraph.title": "Commit Graph (new)",
	"gitlens.plus.commitGraph.description": "The Commit Graph helps you to easily visualize branch structure and commit history.\n\n[Open Commit Graph](command:gitlens.showGraphPage)",
	"gitlens.plus.visualFileHistory.title": "Visualize file history",
	"gitlens.plus.visualFileHistory.description": "A more visual way to analyze and explore changes made to a file.\n\n[Open Visual File History view](command:gitlens.showTimelineView)",
	"gitlens.plus.worktrees.title": "Worktrees",
	"gitlens.plus.worktrees.description": "Create worktrees to have multiple branches checked-out at once on the same repository.\n\n[Open Worktrees view](command:gitlens.showWorktreesView)",
	"gitlens.plus.richIntegrations.title": "Rich self-hosted Git integrations",
	"gitlens.plus.tryNow.title": "Try GitLens Pro",
	"gitlens.plus.tryNow.description": "Try GitLens+ features on private repos, free for 3 days, without an account.\n\n[Start a GitLens Pro Trial](command:gitlens.plus.startPreviewTrial)",
	"gitlens.plus.extend.title": "Extend Your GitLens Pro Trial",
	"gitlens.plus.extend.description": "Extend your trial to get an additional 7-days of GitLens+ features on private repos for free.\n\n[Extend Trial](command:gitlens.plus.loginOrSignUp)",
	"gitlens.plus.walkthroughs.purchase.title": "Upgrade to GitLens Pro",
	"gitlens.plus.walkthroughs.purchase.description": "Want to use GitLens+ features on private repos?\n\n[Upgrade to Pro](command:gitlens.plus.purchase)"
}
