{
  "ext.configuration.blame.avatars": "Specifies whether to show avatar images in the gutter blame annotations",
  "ext.configuration.blame.compact": "Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations",
  "ext.configuration.blame.dateFormat": "Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats",
  "ext.configuration.blame.format": "Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.blame.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.blame.heatmap.enabled": "Specifies whether to provide a heatmap indicator in the gutter blame annotations",
  "ext.configuration.blame.heatmap.location": "Specifies where the heatmap indicators will be shown in the gutter blame annotations",
  "ext.configuration.blame.heatmap.location-left": "Adds a heatmap indicator on the left edge of the gutter blame annotations",
  "ext.configuration.blame.heatmap.location-right": "Adds a heatmap indicator on the left edge of the gutter blame annotations",
  "ext.configuration.blame.highlight.enabled": "Specifies whether to highlight lines associated with the current line",
  "ext.configuration.blame.highlight.locations": "Specifies where the associated line highlights will be shown",
  "ext.configuration.blame.highlight.locations-gutter": "Adds a gutter glyph",
  "ext.configuration.blame.highlight.locations-line": "Adds a full-line highlight background color",
  "ext.configuration.blame.highlight.locations-overview": "Adds a decoration to the overview ruler (scroll bar)",
  "ext.configuration.blame.ignoreWhitespace": "Specifies whether to ignore whitespace when comparing revisions during blame operations",
  "ext.configuration.blame.separateLines": "Specifies whether gutter blame annotations will be separated by a small gap",
  "ext.configuration.blame.toggleMode": "Specifies how the gutter blame annotations will be toggled",
  "ext.configuration.blame.toggleMode-file": "Toggles each file individually",
  "ext.configuration.blame.toggleMode-window": "Toggles the window, i.e. all files at once",
  "ext.configuration.codeLens.authors.command": "Specifies the command to be executed when an _authors_ code lens is clicked",
  "ext.configuration.codeLens.authors.command-toggleFileBlame": "Toggles file blame annotations",
  "ext.configuration.codeLens.authors.command-diffWithPrevious": "Compares the current committed file with the previous commit",
  "ext.configuration.codeLens.authors.command-showQuickCommitDetails": "Shows a commit details quick pick",
  "ext.configuration.codeLens.authors.command-showQuickCommitFileDetails": "Shows a commit file details quick pick",
  "ext.configuration.codeLens.authors.command-showQuickFileHistory": "Shows a file history quick pick",
  "ext.configuration.codeLens.authors.command-showQuickRepoHistory": "Shows a branch history quick pick",
  "ext.configuration.codeLens.authors.enabled": "Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)",
  "ext.configuration.codeLens.enabled": "Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window",
  "ext.configuration.codeLens.includeSingleLineSymbols": "Specifies whether to provide any Git code lens on symbols that span only a single line",
  "ext.configuration.codeLens.recentChange.command": "Specifies the command to be executed when a _recent change_ code lens is clicked",
  "ext.configuration.codeLens.recentChange.command-toggleFileBlame": "Toggles file blame annotations",
  "ext.configuration.codeLens.recentChange.command-diffWithPrevious": "Compares the current committed file with the previous commit",
  "ext.configuration.codeLens.recentChange.command-showQuickCommitDetails": "Shows a commit details quick pick",
  "ext.configuration.codeLens.recentChange.command-showQuickCommitFileDetails": "Shows a commit file details quick pick",
  "ext.configuration.codeLens.recentChange.command-showQuickFileHistory": "Shows a file history quick pick",
  "ext.configuration.codeLens.recentChange.command-showQuickRepoHistory": "Shows a branch history quick pick",
  "ext.configuration.codeLens.recentChange.enabled": "Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block",
  "ext.configuration.codeLens.scopes": "Specifies where Git code lens will be shown in the document",
  "ext.configuration.codeLens.scopes-document": "Adds code lens at the top of the document",
  "ext.configuration.codeLens.scopes-containers": "Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)",
  "ext.configuration.codeLens.scopes-blocks": "Adds code lens at the start of block-like symbols (functions, methods, etc) lines",
  "ext.configuration.codeLens.scopesByLanguage": "Specifies where Git code lens will be shown in the document for the specified languages",
  "ext.configuration.codeLens.scopesByLanguage-language": "Specifies the language to which this code lens override applies",
  "ext.configuration.codeLens.scopesByLanguage-scopes": "Specifies where Git code lens will be shown in the document for the specified language",
  "ext.configuration.codeLens.scopesByLanguage-scopes-document": "Adds code lens at the top of the document",
  "ext.configuration.codeLens.scopesByLanguage-scopes-containers": "Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)",
  "ext.configuration.codeLens.scopesByLanguage-scopes-blocks": "Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines",
  "ext.configuration.codeLens.scopesByLanguage-scopes-custom": "Adds code lens at the start of symbols contained in `symbolScopes`",
  "ext.configuration.codeLens.scopesByLanguage-symbolScopes": "Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`",
  "ext.configuration.codeLens.symbolScopes": "Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`",
  "ext.configuration.currentLine.dateFormat": "Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats",
  "ext.configuration.currentLine.enabled": "Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window",
  "ext.configuration.currentLine.format": "Specifies the format of the current line blame annotation. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.currentLine.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.currentLine.scrollable": "Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport",
  "ext.configuration.debug": "Specifies debug mode",
  "ext.configuration.defaultDateFormat": "Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats",
  "ext.configuration.defaultDateShortFormat": "Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats",
  "ext.configuration.defaultDateStyle": "Specifies how dates will be displayed by default",
  "ext.configuration.defaultGravatarsStyle": "Specifies the style of the gravatar default (fallback) images",
  "ext.configuration.defaultGravatarsStyle-identicon": "A geometric pattern",
  "ext.configuration.defaultGravatarsStyle-mp": "A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)",
  "ext.configuration.defaultGravatarsStyle-monsterid": "A monster with different colors, faces, etc",
  "ext.configuration.defaultGravatarsStyle-retro": "8-bit arcade-style pixelated faces",
  "ext.configuration.defaultGravatarsStyle-robohash": "A robot with different colors, faces, etc",
  "ext.configuration.defaultGravatarsStyle-wavatar": "A face with differing features and backgrounds",
  "ext.configuration.heatmap.ageThreshold": "Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)",
  "ext.configuration.heatmap.coldColor": "Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value",
  "ext.configuration.heatmap.hotColor": "Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value",
  "ext.configuration.heatmap.toggleMode": "Specifies how the gutter heatmap annotations will be toggled",
  "ext.configuration.heatmap.toggleMode-file": "Toggles each file individually",
  "ext.configuration.heatmap.toggleMode-window": "Toggles the window, i.e. all files at once",
  "ext.configuration.hovers.annotations.changes": "Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations",
  "ext.configuration.hovers.annotations.details": "Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations",
  "ext.configuration.hovers.annotations.enabled": "Specifies whether to provide any hovers when showing blame annotations",
  "ext.configuration.hovers.annotations.over": "Specifies when to trigger hovers when showing blame annotations",
  "ext.configuration.hovers.annotations.over-annotation": "Only shown when hovering over the line annotation",
  "ext.configuration.hovers.annotations.over-line": "Shown when hovering anywhere over the line",
  "ext.configuration.hovers.currentLine.changes": "Specifies whether to provide a _changes (diff)_ hover for the current line",
  "ext.configuration.hovers.currentLine.details": "Specifies whether to provide a _commit details_ hover for the current line",
  "ext.configuration.hovers.currentLine.enabled": "Specifies whether to provide any hovers for the current line",
  "ext.configuration.hovers.currentLine.over": "Specifies when to trigger hovers for the current line",
  "ext.configuration.hovers.currentLine.over-annotation": "Only shown when hovering over the line annotation",
  "ext.configuration.hovers.currentLine.over-line": "Shown when hovering anywhere over the line",
  "ext.configuration.hovers.avatars": "Specifies whether to show avatar images in hovers",
  "ext.configuration.hovers.detailsMarkdownFormat": "Specifies the format (in markdown) of the _commit details_ hover. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`\n - `${avatar}` &mdash; commit author avatar\n - `${commands}` &mdash; a set of commit commands",
  "ext.configuration.hovers.enabled": "Specifies whether to provide any hovers",
  "ext.configuration.insiders": "Specifies whether to enable experimental features",
  "ext.configuration.keymap": "Specifies the keymap to use for GitLens shortcut keys",
  "ext.configuration.keymap-alternate": "Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)",
  "ext.configuration.keymap-chorded": "Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)",
  "ext.configuration.keymap-none": "No shortcut keys will be added",
  "ext.configuration.liveshare.allowGuestAccess": "Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share",
  "ext.configuration.menus": "Specifies which commands will be added to which menus",
  "ext.configuration.mode.active": "Specifies the active GitLens mode, if any",
  "ext.configuration.mode.statusBar.enabled": "Specifies whether to provide the active GitLens mode in the status bar",
  "ext.configuration.mode.statusBar.alignment": "Specifies the active GitLens mode alignment in the status bar",
  "ext.configuration.mode.statusBar.alignment-left": "Aligns to the left",
  "ext.configuration.mode.statusBar.alignment-right": "Aligns to the right",
  "ext.configuration.modes.zen.name": "Specifies the friendly name of this user-defined mode",
  "ext.configuration.modes.zen.statusBarItemName": "Specifies the name shown in the status bar when this user-defined mode is active",
  "ext.configuration.modes.zen.description": "Specifies the description of this user-defined mode",
  "ext.configuration.modes.zen.codeLens": "Specifies whether to show any Git code lens when this user-defined mode is active",
  "ext.configuration.modes.zen.currentLine": "Specifies whether to show any Git code lens when this user-defined mode is active",
  "ext.configuration.modes.zen.hovers": "Specifies whether to show any hovers when this user-defined mode is active",
  "ext.configuration.modes.zen.statusBar": "Specifies whether to show blame information in the status bar when this user-defined mode is active",
  "ext.configuration.modes.zen.views": "Specifies whether to show any GitLens views when this user-defined mode is active",
  "ext.configuration.modes.review.name": "Specifies the friendly name of this user-defined mode",
  "ext.configuration.modes.review.statusBarItemName": "Specifies the name shown in the status bar when this user-defined mode is active",
  "ext.configuration.modes.review.description": "Specifies the description of this user-defined mode",
  "ext.configuration.modes.review.codeLens": "Specifies whether to show any Git code lens when this user-defined mode is active",
  "ext.configuration.modes.review.currentLine": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active",
  "ext.configuration.modes.review.hovers": "Specifies whether to show any hovers when this user-defined mode is active",
  "ext.configuration.modes.review.statusBar": "Specifies whether to show blame information in the status bar when this user-defined mode is active",
  "ext.configuration.modes.review.views": "Specifies whether to show any GitLens views when this user-defined mode is active",
  "ext.configuration.outputLevel": "Specifies how much (if any) output will be sent to the GitLens output channel",
  "ext.configuration.outputLevel-silent": "Logs nothing",
  "ext.configuration.outputLevel-errors": "Logs only errors",
  "ext.configuration.outputLevel-verbose": "Logs all errors, warnings, and messages",
  "ext.configuration.outputLevel-debug": "Logs all errors, warnings, and messages with extra context useful for debugging",
  "ext.configuration.recentChanges.highlight.locations": "Specifies where the highlights of the recently changed lines will be shown",
  "ext.configuration.recentChanges.highlight.locations-gutter": "Adds a gutter glyph",
  "ext.configuration.recentChanges.highlight.locations-line": "Adds a full-line highlight background color",
  "ext.configuration.recentChanges.highlight.locations-overview": "Adds a decoration to the overview ruler (scroll bar)",
  "ext.configuration.recentChanges.toggleMode": "Specifies how the recently changed lines annotations will be toggled",
  "ext.configuration.recentChanges.toggleMode-file": "Toggles each file individually",
  "ext.configuration.remotes": "Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services",
  "ext.configuration.remotes.type": "Specifies the type of the custom remote service",
  "ext.configuration.remotes.domain": "Specifies the domain name of the custom remote service",
  "ext.configuration.remotes.name": "Specifies an optional friendly name for the custom remote service",
  "ext.configuration.remotes.protocol": "Specifies an optional url protocol for the custom remote service",
  "ext.configuration.remotes.urls": "Specifies the url formats of the custom remote service",
  "ext.configuration.remotes.urls.repository": "Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path",
  "ext.configuration.remotes.urls.branches": "Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path",
  "ext.configuration.remotes.urls.branch": "Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch",
  "ext.configuration.remotes.urls.commit": "Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id",
  "ext.configuration.remotes.urls.file": "Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information",
  "ext.configuration.remotes.urls.fileInBranch": "Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information",
  "ext.configuration.remotes.urls.fileInCommit": "Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information",
  "ext.configuration.remotes.urls.fileLine": "Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line",
  "ext.configuration.remotes.urls.fileRange": "Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line",
  "ext.configuration.settings.mode": "Specifies the display mode of the interactive settings editor",
  "ext.configuration.settings.mode-simple": "Only displays common settings",
  "ext.configuration.settings.mode-advanced": "Displays all settings",
  "ext.configuration.showWhatsNewAfterUpgrades": "Specifies whether to show What's New after upgrading to new feature releases",
  "ext.configuration.statusBar.alignment": "Specifies the blame alignment in the status bar",
  "ext.configuration.statusBar.alignment-left": "Aligns to the left",
  "ext.configuration.statusBar.alignment-right": "Aligns to the right",
  "ext.configuration.statusBar.command": "Specifies the command to be executed when the blame status bar item is clicked",
  "ext.configuration.statusBar.command-toggleFileBlame": "Toggles file blame annotations",
  "ext.configuration.statusBar.command-diffWithPrevious": "Compares the current line commit with the previous",
  "ext.configuration.statusBar.command-diffWithWorking": "Compares the current line commit with the working tree",
  "ext.configuration.statusBar.command-toggleCodeLens": "Toggles Git code lens",
  "ext.configuration.statusBar.command-showQuickCommitDetails": "Shows a commit details quick pick",
  "ext.configuration.statusBar.command-showQuickCommitFileDetails": "Shows a commit file details quick pick",
  "ext.configuration.statusBar.command-showQuickFileHistory": "Shows a file history quick pick",
  "ext.configuration.statusBar.command-showQuickRepoHistory": "Shows a branch history quick pick",
  "ext.configuration.statusBar.dateFormat": "Specifies the date format of absolute dates shown in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats",
  "ext.configuration.statusBar.enabled": "Specifies whether to provide blame information in the status bar",
  "ext.configuration.statusBar.format": "Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.statusBar.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.statusBar.reduceFlicker": "Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"",
  "ext.configuration.strings.codeLens.unsavedChanges.recentChangeAndAuthors": "Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes",
  "ext.configuration.strings.codeLens.unsavedChanges.recentChangeOnly": "Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes",
  "ext.configuration.strings.codeLens.unsavedChanges.authorsOnly": "Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes",
  "ext.configuration.views.commitFileFormat": "Specifies the format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path",
  "ext.configuration.views.commitFileDescriptionFormat": "Specifies the description format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path",
  "ext.configuration.views.commitFormat": "Specifies the format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.views.commitDescriptionFormat": "Specifies the description format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.views.compare.avatars": "Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view",
  "ext.configuration.views.compare.enabled": "Specifies whether to show the _Compare_ view",
  "ext.configuration.views.compare.files.compact": "Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`",
  "ext.configuration.views.compare.files.layout": "Specifies how the _Compare_ view will display files",
  "ext.configuration.views.compare.files.layout-auto": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level",
  "ext.configuration.views.compare.files.layout-list": "Displays files as a list",
  "ext.configuration.views.compare.files.layout-tree": "Displays files as a tree",
  "ext.configuration.views.compare.files.threshold": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`",
  "ext.configuration.views.compare.location": "Specifies where to show the _Compare_ view",
  "ext.configuration.views.compare.location-gitlens": "Adds to the GitLens side bar",
  "ext.configuration.views.compare.location-explorer": "Adds to the Explorer side bar",
  "ext.configuration.views.compare.location-scm": "Adds to the Source Control side bar",
  "ext.configuration.views.defaultItemLimit": "Specifies the default number of items to show in a view list. Use 0 to specify no limit",
  "ext.configuration.views.fileHistory.avatars": "Specifies whether to show avatar images instead of status icons in the _File History_ view",
  "ext.configuration.views.fileHistory.enabled": "Specifies whether to show the _File History_ view",
  "ext.configuration.views.fileHistory.location": "Specifies where to show the _File History_ view",
  "ext.configuration.views.fileHistory.location-gitlens": "Adds to the GitLens side bar",
  "ext.configuration.views.fileHistory.location-explorer": "Adds to the Explorer side bar",
  "ext.configuration.views.fileHistory.location-scm": "Adds to the Source Control side bar",
  "ext.configuration.views.lineHistory.avatars": "Specifies whether to show avatar images instead of status icons in the _Line History_ view",
  "ext.configuration.views.lineHistory.enabled": "Specifies whether to show the _Line History_ view",
  "ext.configuration.views.lineHistory.location": "Specifies where to show the _Line History_ view",
  "ext.configuration.views.lineHistory.location-gitlens": "Adds to the GitLens side bar",
  "ext.configuration.views.lineHistory.location-explorer": "Adds to the Explorer side bar",
  "ext.configuration.views.lineHistory.location-scm": "Adds to the Source Control side bar",
  "ext.configuration.views.repositories.autoRefresh": "Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes",
  "ext.configuration.views.repositories.autoReveal": "Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files",
  "ext.configuration.views.repositories.avatars": "Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view",
  "ext.configuration.views.repositories.branches.layout": "Specifies how the _Repositories_ view will display branches",
  "ext.configuration.views.repositories.branches.layout-list": "Displays branches as a list",
  "ext.configuration.views.repositories.branches.layout-tree": "Displays branches as a tree when branch names contain slashes `/`",
  "ext.configuration.views.repositories.compact": "Specifies whether to show the _Repositories_ view in a compact display density",
  "ext.configuration.views.repositories.enabled": "Specifies whether to show the _Repositories_ view",
  "ext.configuration.views.repositories.files.compact": "Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`",
  "ext.configuration.views.repositories.files.layout": "Specifies how the _Repositories_ view will display files",
  "ext.configuration.views.repositories.files.layout-auto": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level",
  "ext.configuration.views.repositories.files.layout-list": "Displays files as a list",
  "ext.configuration.views.repositories.files.layout-tree": "Displays files as a tree",
  "ext.configuration.views.repositories.files.threshold": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`",
  "ext.configuration.views.repositories.includeWorkingTree": "Specifies whether to include working tree file status for each repository in the _Repositories_ view",
  "ext.configuration.views.repositories.location": "Specifies where to show the _Repositories_ view",
  "ext.configuration.views.repositories.location-gitlens": "Adds to the GitLens side bar",
  "ext.configuration.views.repositories.location-explorer": "Adds to the Explorer side bar",
  "ext.configuration.views.repositories.location-scm": "Adds to the Source Control side bar",
  "ext.configuration.views.repositories.showTrackingBranch": "Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view",
  "ext.configuration.views.search.avatars": "Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view",
  "ext.configuration.views.search.enabled": "Specifies whether to show the _Search Commits_ view",
  "ext.configuration.views.search.files.compact": "Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`",
  "ext.configuration.views.search.files.layout": "Specifies how the _Search Commits_ view will display files",
  "ext.configuration.views.search.files.layout-auto": "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level",
  "ext.configuration.views.search.files.layout-list": "Displays files as a list",
  "ext.configuration.views.search.files.layout-tree": "Displays files as a tree",
  "ext.configuration.views.search.files.threshold": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`",
  "ext.configuration.views.search.location": "Specifies where to show the _Search Commits_ view",
  "ext.configuration.views.search.location-gitlens": "Adds to the GitLens side bar",
  "ext.configuration.views.search.location-explorer": "Adds to the Explorer side bar",
  "ext.configuration.views.search.location-scm": "Adds to the Source Control side bar",
  "ext.configuration.views.showRelativeDateMarkers": "Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views",
  "ext.configuration.views.stashFileFormat": "Specifies the format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path",
  "ext.configuration.views.stashFileDescriptionFormat": "Specifies the description format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path",
  "ext.configuration.views.stashFormat": "Specifies the format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.views.stashDescriptionFormat": "Specifies the description format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`",
  "ext.configuration.views.statusFileFormat": "Specifies the format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted",
  "ext.configuration.views.statusFileDescriptionFormat": "Specifies the description format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted",
  "ext.configuration.advanced.abbreviatedShaLength": "Specifies the length of abbreviated commit ids (shas)",
  "ext.configuration.advanced.blame.customArguments": "Specifies additional arguments to pass to the `git blame` command",
  "ext.configuration.advanced.blame.delayAfterEdit": "Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait",
  "ext.configuration.advanced.blame.sizeThresholdAfterEdit": "Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum",
  "ext.configuration.advanced.caching.enabled": "Specifies whether git output will be cached — changing the default is not recommended",
  "ext.configuration.advanced.fileHistoryFollowsRenames": "Specifies whether file histories will follow renames — will affect how merge commits are shown in histories",
  "ext.configuration.advanced.maxListItems": "Specifies the maximum number of items to show in a list. Use 0 to specify no maximum",
  "ext.configuration.advanced.messages": "Specifies which messages should be suppressed",
  "ext.configuration.advanced.quickPick.closeOnFocusOut": "Specifies whether to close QuickPick menus when focus is lost",
  "ext.configuration.advanced.repositorySearchDepth": "Specifies how many folders deep to search for repositories",
  "ext.configuration.advanced.telemetry.enabled": "Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting",
  "ext.colors.gutterBackgroundColor": "Specifies the background color of the gutter blame annotations",
  "ext.colors.gutterForegroundColor": "Specifies the foreground color of the gutter blame annotations",
  "ext.colors.gutterUncommittedForegroundColor": "Specifies the foreground color of an uncommitted line in the gutter blame annotations",
  "ext.colors.trailingLineBackgroundColor": "Specifies the background color of the blame annotation for the current line",
  "ext.colors.trailingLineForegroundColor": "Specifies the foreground color of the blame annotation for the current line",
  "ext.colors.lineHighlightBackgroundColor": "Specifies the background color of the associated line highlights in blame annotations",
  "ext.colors.lineHighlightOverviewRulerColor": "Specifies the overview ruler color of the associated line highlights in blame annotations",
  "ext.commands.supportGitLens": "Support GitLens ❤",
  "ext.commands.showSettingsPage": "Open Settings",
  "ext.commands.showWelcomePage": "Welcome",
  "ext.commands.showCompareView": "Show Compare View",
  "ext.commands.showFileHistoryView": "Show File History View",
  "ext.commands.showLineHistoryView": "Show Line History View",
  "ext.commands.showRepositoriesView": "Show Repositories View",
  "ext.commands.showSearchView": "Show Search Commits View",
  "ext.commands.diffDirectory": "Directory Compare Working Tree with...",
  "ext.commands.diffDirectoryWithHead": "Directory Compare All Changes",
  "ext.commands.diffHeadWithBranch": "Compare HEAD with Branch or Tag...",
  "ext.commands.diffWorkingWithBranch": "Compare Working Tree with Branch or Tag...",
  "ext.commands.diffWithBranch": "Open Changes with Branch or Tag...",
  "ext.commands.diffWithNext": "Open Changes with Next Revision",
  "ext.commands.diffWithPrevious": "Open Changes with Previous Revision",
  "ext.commands.diffWithPreviousInDiff": "Open Changes with Previous Revision",
  "ext.commands.diffLineWithPrevious": "Open Line Changes with Previous Revision",
  "ext.commands.diffWithRevision": "Open Changes with Revision...",
  "ext.commands.diffWithWorking": "Open Changes with Working File",
  "ext.commands.diffLineWithWorking": "Open Line Changes with Working File",
  "ext.commands.toggleFileBlame": "Toggle File Blame Annotations",
  "ext.commands.clearFileAnnotations": "Clear File Annotations",
  "ext.commands.computingFileAnnotations": "Computing File Annotations...",
  "ext.commands.toggleFileHeatmap": "Toggle File Heatmap Annotations",
  "ext.commands.toggleFileRecentChanges": "Toggle Recent File Changes Annotations",
  "ext.commands.toggleLineBlame": "Toggle Line Blame Annotations",
  "ext.commands.toggleCodeLens": "Toggle Git Code Lens",
  "ext.commands.switchMode": "Switch Mode",
  "ext.commands.toggleReviewMode": "Toggle Review Mode",
  "ext.commands.toggleZenMode": "Toggle Zen Mode",
  "ext.commands.showCommitSearch": "Search Commits",
  "ext.commands.showLastQuickPick": "Show Last Opened Quick Pick",
  "ext.commands.showCommitInView": "Show Commit in View",
  "ext.commands.showFileHistoryInView": "Show File History in View",
  "ext.commands.showQuickCommitDetails": "Show Commit Details",
  "ext.commands.showQuickCommitFileDetails": "Show Commit Details",
  "ext.commands.showQuickRevisionDetails": "Show Revision Details",
  "ext.commands.showQuickFileHistory": "Show File History",
  "ext.commands.showQuickBranchHistory": "Show Branch History",
  "ext.commands.showQuickRepoHistory": "Show Current Branch History",
  "ext.commands.showQuickRepoStatus": "Show Repository Status",
  "ext.commands.showQuickStashList": "Show Stashed Changes",
  "ext.commands.copyMessageToClipboard": "Copy Commit Message to Clipboard",
  "ext.commands.copyRemoteFileUrlToClipboard": "Copy Remote Url to Clipboard",
  "ext.commands.copyShaToClipboard": "Copy Commit ID to Clipboard",
  "ext.commands.closeUnchangedFiles": "Close Unchanged Files",
  "ext.commands.openChangedFiles": "Open Changed Files",
  "ext.commands.openBranchesInRemote": "Open Branches on Remote",
  "ext.commands.openBranchInRemote": "Open Branch on Remote",
  "ext.commands.openCommitInRemote": "Open Commit on Remote",
  "ext.commands.openFileInRemote": "Open File on Remote",
  "ext.commands.openFileRevision": "Open Revision...",
  "ext.commands.openFileRevisionFromBranch": "Open Revision from Branch or Tag...",
  "ext.commands.openRepoInRemote": "Open Repository on Remote",
  "ext.commands.openWorkingFile": "Open Working File",
  "ext.commands.stashApply": "Apply Stashed Changes",
  "ext.commands.stashDelete": "Delete Stashed Changes",
  "ext.commands.stashSave": "Stash All Changes",
  "ext.commands.stashSaveFiles": "Stash Changes",
  "ext.commands.externalDiff": "Open Changes (with difftool)",
  "ext.commands.externalDiffAll": "Open All Changes (with difftool)",
  "ext.commands.resetSuppressedWarnings": "Reset Suppressed Warnings",
  "ext.commands.exploreRepoRevision": "Explore Repository from Here",
  "ext.commands.fetchRepositories": "Fetch Repositories",
  "ext.commands.pullRepositories": "Pull Repositories",
  "ext.commands.pushRepositories": "Push Repositories",
  "ext.views.checkout": "Checkout",
  "ext.views.fetch": "Fetch",
  "ext.views.pull": "Pull",
  "ext.views.push": "Push",
  "ext.views.pushWithForce": "Push (force)",
  "ext.views.openInTerminal": "Open in Terminal",
  "ext.views.setAsDefault": "Set as Default",
  "ext.views.unsetAsDefault": "Unset as Default",
  "ext.views.stageDirectory": "Stage All Changes",
  "ext.views.stageFile": "Stage Changes",
  "ext.views.unstageDirectory": "Unstage All Changes",
  "ext.views.unstageFile": "Unstage Changes",
  "ext.views.star": "Add to Favorites",
  "ext.views.unstar": "Remove from Favorites",
  "ext.views.openDirectoryDiff": "Open Directory Compare",
  "ext.views.openDirectoryDiffWithWorking": "Open Directory Compare with Working Tree",
  "ext.views.openChanges": "Open Changes",
  "ext.views.openChangesWithWorking": "Open Changes with Working File",
  "ext.views.openFile": "Open File",
  "ext.views.openFileRevision": "Open Revision",
  "ext.views.openFileRevisionInRemote": "Open Revision on Remote",
  "ext.views.openChangedFiles": "Open Files",
  "ext.views.openChangedFileChanges": "Open All Changes",
  "ext.views.openChangedFileChangesWithWorking": "Open All Changes with Working Tree",
  "ext.views.openChangedFileRevisions": "Open Revisions",
  "ext.views.applyChanges": "Apply Changes",
  "ext.views.closeRepository": "Close Repository",
  "ext.views.compareAncestryWithWorking": "Compare Ancestry with Working Tree",
  "ext.views.compareWithHead": "Compare with HEAD",
  "ext.views.compareWithRemote": "Compare with Remote",
  "ext.views.compareWithSelected": "Compare with Selected",
  "ext.views.selectForCompare": "Select for Compare",
  "ext.views.compareFileWithSelected": "Compare with Selected",
  "ext.views.selectFileForCompare": "Select for Compare",
  "ext.views.compareWithWorking": "Compare with Working Tree",
  "ext.views.terminalCheckoutBranch": "Checkout Branch (via Terminal)",
  "ext.views.terminalCreateBranch": "Create Branch (via Terminal)...",
  "ext.views.terminalDeleteBranch": "Delete Branch (via Terminal)",
  "ext.views.terminalMergeBranch": "Merge Branch (via Terminal)",
  "ext.views.terminalRebaseBranch": "Rebase (Interactive) Branch (via Terminal)",
  "ext.views.terminalRebaseBranchToRemote": "Rebase (Interactive) Branch to Remote (via Terminal)",
  "ext.views.terminalSquashBranchIntoCommit": "Squash Branch into Commit (via Terminal)",
  "ext.views.terminalCheckoutCommit": "Checkout Commit (via Terminal)",
  "ext.views.terminalCherryPickCommit": "Cherry Pick Commit (via Terminal)",
  "ext.views.terminalPushCommit": "Push to Commit (via Terminal)",
  "ext.views.terminalRebaseCommit": "Rebase to Commit (via Terminal)",
  "ext.views.terminalResetCommit": "Reset to Commit (via Terminal)",
  "ext.views.terminalRevertCommit": "Revert Commit (via Terminal)",
  "ext.views.terminalRemoveRemote": "Remove Remote (via Terminal)",
  "ext.views.terminalCreateTag": "Create Tag (via Terminal)...",
  "ext.views.terminalDeleteTag": "Delete Tag (via Terminal)",
  "ext.views.repositories.refresh": "Refresh",
  "ext.views.repositories.setFilesLayoutToAuto": "Automatic Layout",
  "ext.views.repositories.setFilesLayoutToList": "List Layout",
  "ext.views.repositories.setFilesLayoutToTree": "Tree Layout",
  "ext.views.repositories.setAutoRefreshToOn": "Enable Automatic Refresh",
  "ext.views.repositories.setAutoRefreshToOff": "Disable Automatic Refresh",
  "ext.views.fileHistory.refresh": "Refresh",
  "ext.views.fileHistory.changeBase": "Change Base...",
  "ext.views.fileHistory.setEditorFollowingOn": "Resume File Tracking",
  "ext.views.fileHistory.setEditorFollowingOff": "Pause File Tracking",
  "ext.views.fileHistory.setRenameFollowingOn": "Follow Renames",
  "ext.views.fileHistory.setRenameFollowingOff": "Don't Follow Renames",
  "ext.views.lineHistory.refresh": "Refresh",
  "ext.views.lineHistory.changeBase": "Change Base...",
  "ext.views.lineHistory.setEditorFollowingOn": "Resume Line Tracking",
  "ext.views.lineHistory.setEditorFollowingOff": "Pause Line Tracking",
  "ext.views.lineHistory.setRenameFollowingOn": "Follow Renames",
  "ext.views.lineHistory.setRenameFollowingOff": "Don't Follow Renames",
  "ext.views.compare.selectForCompare": "Compare Branch or Tag with...",
  "ext.views.compare.clear": "Clear Results",
  "ext.views.compare.refresh": "Refresh",
  "ext.views.compare.setFilesLayoutToAuto": "Automatic Layout",
  "ext.views.compare.setFilesLayoutToList": "List Layout",
  "ext.views.compare.setFilesLayoutToTree": "Tree Layout",
  "ext.views.compare.setKeepResultsToOn": "Keep Results",
  "ext.views.compare.setKeepResultsToOff": "Keep Results",
  "ext.views.compare.pinComparison": "Pin Comparison",
  "ext.views.compare.unpinComparison": "Unpin Comparison",
  "ext.views.compare.swapComparison": "Swap Comparison",
  "ext.views.search.searchCommits": "Search Commits",
  "ext.views.search.clear": "Clear Results",
  "ext.views.search.refresh": "Refresh",
  "ext.views.search.setFilesLayoutToAuto": "Automatic Layout",
  "ext.views.search.setFilesLayoutToList": "List Layout",
  "ext.views.search.setFilesLayoutToTree": "Tree Layout",
  "ext.views.search.setKeepResultsToOn": "Keep Results",
  "ext.views.search.setKeepResultsToOff": "Keep Results",
  "ext.views.dismissNode": "Dismiss",
  "ext.views.expandNode": "Expand",
  "ext.views.refreshNode": "Refresh",
  "ext.views.scm.repositories": "GitLens: Repositories",
  "ext.views.scm.fileHistory": "GitLens: File History",
  "ext.views.scm.lineHistory": "GitLens: Line History",
  "ext.views.scm.compare": "GitLens: Compare",
  "ext.views.scm.search": "GitLens: Search Commits"
}