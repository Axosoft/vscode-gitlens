{
	"name": "gitlens",
	"displayName": "GitLens — Git supercharged",
	"description": "%description%",
	"version": "10.2.2",
	"author": {
		"name": "Eric Amodio",
		"email": "eamodio@gmail.com"
	},
	"publisher": "eamodio",
	"license": "SEE LICENSE IN LICENSE",
	"homepage": "https://github.com/eamodio/vscode-gitlens/blob/master/README.md",
	"bugs": {
		"url": "https://github.com/eamodio/vscode-gitlens/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/eamodio/vscode-gitlens.git"
	},
	"engines": {
		"vscode": "^1.37.0"
	},
	"main": "./dist/extension",
	"icon": "images/gitlens-icon.png",
	"preview": false,
	"badges": [
		{
			"url": "https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack&labelColor=555555",
			"href": "https://vscode-slack.amod.io",
			"description": "Join us in the #gitlens channel"
		}
	],
	"categories": [
		"Other"
	],
	"galleryBanner": {
		"color": "#8647ae",
		"theme": "dark"
	},
	"keywords": [
		"gitlens",
		"git",
		"blame",
		"log",
		"annotation",
		"multi-root ready"
	],
	"activationEvents": [
		"*"
	],
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "%configuration.title%",
			"properties": {
				"gitlens.autolinks": {
					"type": [
						"array",
						"null"
					],
					"default": null,
					"items": {
						"type": "object",
						"required": [
							"prefix",
							"url"
						],
						"properties": {
							"prefix": {
								"type": "string",
								"description": "%gitlens.autolinks.items.properties.prefix.description%"
							},
							"ignoreCase": {
								"type": "boolean",
								"description": "%gitlens.autolinks.items.properties.ignoreCase.description%",
								"default": false
							},
							"title": {
								"type": [
									"string",
									"null"
								],
								"default": null,
								"description": "%gitlens.autolinks.items.properties.title.description%"
							},
							"url": {
								"type": "string",
								"description": "%gitlens.autolinks.items.properties.url.description%"
							}
						}
					},
					"uniqueItems": true,
					"markdownDescription": "%gitlens.autolinks.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.blame.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.compact": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.blame.compact.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.dateFormat": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.blame.dateFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.format": {
					"type": "string",
					"default": "${message|40?} ${agoOrDate|14-}",
					"markdownDescription": "%gitlens.blame.format.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.heatmap.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.blame.heatmap.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.heatmap.location": {
					"type": "string",
					"default": "right",
					"enum": [
						"left",
						"right"
					],
					"enumDescriptions": [
						"%gitlens.blame.heatmap.location.enumDescriptions.left%",
						"%gitlens.blame.heatmap.location.enumDescriptions.right%"
					],
					"markdownDescription": "%gitlens.blame.heatmap.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.highlight.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.blame.highlight.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.highlight.locations": {
					"type": "array",
					"default": [
						"gutter",
						"line",
						"overview"
					],
					"items": {
						"type": "string",
						"enum": [
							"gutter",
							"line",
							"overview"
						],
						"enumDescriptions": [
							"%gitlens.blame.highlight.locations.items.enumDescriptions.gutter%",
							"%gitlens.blame.highlight.locations.items.enumDescriptions.line%",
							"%gitlens.blame.highlight.locations.items.enumDescriptions.overview%"
						]
					},
					"minItems": 1,
					"maxItems": 3,
					"uniqueItems": true,
					"markdownDescription": "%gitlens.blame.highlight.locations.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.ignoreWhitespace": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.blame.ignoreWhitespace.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.blame.separateLines": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.blame.separateLines.markdownDescription%",
					"scope": "window"
				},
				"gitlens.blame.toggleMode": {
					"type": "string",
					"default": "file",
					"enum": [
						"file",
						"window"
					],
					"enumDescriptions": [
						"%gitlens.blame.toggleMode.enumDescriptions.file%",
						"%gitlens.blame.toggleMode.enumDescriptions.window%"
					],
					"markdownDescription": "%gitlens.blame.toggleMode.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.authors.command": {
					"type": "string",
					"default": "gitlens.toggleFileBlame",
					"enum": [
						"gitlens.toggleFileBlame",
						"gitlens.diffWithPrevious",
						"gitlens.revealCommitInView",
						"gitlens.showCommitsInView",
						"gitlens.showQuickCommitDetails",
						"gitlens.showQuickCommitFileDetails",
						"gitlens.showQuickFileHistory",
						"gitlens.showQuickRepoHistory"
					],
					"enumDescriptions": [
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.toggleFileBlame%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.diffWithPrevious%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.revealCommitInView%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.showCommitsInView%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.showQuickCommitDetails%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.showQuickCommitFileDetails%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.showQuickFileHistory%",
						"%gitlens.codeLens.authors.command.enumDescriptions.gitlens.showQuickRepoHistory%"
					],
					"markdownDescription": "%gitlens.codeLens.authors.command.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.authors.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.codeLens.authors.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.codeLens.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.includeSingleLineSymbols": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.codeLens.includeSingleLineSymbols.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.recentChange.command": {
					"type": "string",
					"default": "gitlens.showQuickCommitFileDetails",
					"enum": [
						"gitlens.toggleFileBlame",
						"gitlens.diffWithPrevious",
						"gitlens.revealCommitInView",
						"gitlens.showCommitsInView",
						"gitlens.showQuickCommitDetails",
						"gitlens.showQuickCommitFileDetails",
						"gitlens.showQuickFileHistory",
						"gitlens.showQuickRepoHistory"
					],
					"enumDescriptions": [
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.toggleFileBlame%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.diffWithPrevious%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.revealCommitInView%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.showCommitsInView%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.showQuickCommitDetails%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.showQuickCommitFileDetails%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.showQuickFileHistory%",
						"%gitlens.codeLens.recentChange.command.enumDescriptions.gitlens.showQuickRepoHistory%"
					],
					"markdownDescription": "%gitlens.codeLens.recentChange.command.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.recentChange.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.codeLens.recentChange.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.codeLens.scopes": {
					"type": "array",
					"default": [
						"document",
						"containers"
					],
					"items": {
						"type": "string",
						"enum": [
							"document",
							"containers",
							"blocks"
						],
						"enumDescriptions": [
							"%gitlens.codeLens.scopes.items.enumDescriptions.document%",
							"%gitlens.codeLens.scopes.items.enumDescriptions.containers%",
							"%gitlens.codeLens.scopes.items.enumDescriptions.blocks%"
						]
					},
					"minItems": 1,
					"maxItems": 4,
					"uniqueItems": true,
					"markdownDescription": "%gitlens.codeLens.scopes.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.codeLens.scopesByLanguage": {
					"type": "array",
					"default": [
						{
							"language": "azure-pipelines",
							"scopes": [
								"document"
							]
						},
						{
							"language": "ansible",
							"scopes": [
								"document"
							]
						},
						{
							"language": "css",
							"scopes": [
								"document"
							]
						},
						{
							"language": "html",
							"scopes": [
								"document"
							]
						},
						{
							"language": "json",
							"scopes": [
								"document"
							]
						},
						{
							"language": "jsonc",
							"scopes": [
								"document"
							]
						},
						{
							"language": "less",
							"scopes": [
								"document"
							]
						},
						{
							"language": "postcss",
							"scopes": [
								"document"
							]
						},
						{
							"language": "python",
							"symbolScopes": [
								"!Module"
							]
						},
						{
							"language": "scss",
							"scopes": [
								"document"
							]
						},
						{
							"language": "stylus",
							"scopes": [
								"document"
							]
						},
						{
							"language": "vue",
							"scopes": [
								"document"
							]
						},
						{
							"language": "yaml",
							"scopes": [
								"document"
							]
						}
					],
					"items": {
						"type": "object",
						"required": [
							"language"
						],
						"properties": {
							"language": {
								"type": "string",
								"description": "%gitlens.codeLens.scopesByLanguage.items.properties.language.description%"
							},
							"scopes": {
								"type": "array",
								"default": [
									"document",
									"containers"
								],
								"items": {
									"type": "string",
									"enum": [
										"document",
										"containers",
										"blocks",
										"custom"
									],
									"enumDescriptions": [
										"%gitlens.codeLens.scopesByLanguage.items.properties.scopes.items.enumDescriptions.document%",
										"%gitlens.codeLens.scopesByLanguage.items.properties.scopes.items.enumDescriptions.containers%",
										"%gitlens.codeLens.scopesByLanguage.items.properties.scopes.items.enumDescriptions.blocks%",
										"%gitlens.codeLens.scopesByLanguage.items.properties.scopes.items.enumDescriptions.custom%"
									]
								},
								"minItems": 1,
								"maxItems": 4,
								"uniqueItems": true,
								"description": "%gitlens.codeLens.scopesByLanguage.items.properties.scopes.description%"
							},
							"symbolScopes": {
								"type": "array",
								"items": {
									"type": "string"
								},
								"uniqueItems": true,
								"description": "%gitlens.codeLens.scopesByLanguage.items.properties.symbolScopes.description%"
							}
						}
					},
					"uniqueItems": true,
					"markdownDescription": "%gitlens.codeLens.scopesByLanguage.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.codeLens.symbolScopes": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"uniqueItems": true,
					"markdownDescription": "%gitlens.codeLens.symbolScopes.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.currentLine.dateFormat": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.currentLine.dateFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.currentLine.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.currentLine.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.currentLine.format": {
					"type": "string",
					"default": "${author}, ${agoOrDate} • ${message}",
					"markdownDescription": "%gitlens.currentLine.format.markdownDescription%",
					"scope": "window"
				},
				"gitlens.currentLine.scrollable": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.currentLine.scrollable.markdownDescription%",
					"scope": "window"
				},
				"gitlens.debug": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.debug.markdownDescription%",
					"scope": "window"
				},
				"gitlens.defaultDateFormat": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.defaultDateFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.defaultDateShortFormat": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.defaultDateShortFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.defaultDateSource": {
					"type": "string",
					"default": "authored",
					"enum": [
						"authored",
						"committed"
					],
					"enumDescriptions": [
						"%gitlens.defaultDateSource.enumDescriptions.authored%",
						"%gitlens.defaultDateSource.enumDescriptions.committed%"
					],
					"markdownDescription": "%gitlens.defaultDateSource.markdownDescription%",
					"scope": "window"
				},
				"gitlens.defaultDateStyle": {
					"type": "string",
					"default": "relative",
					"enum": [
						"relative",
						"absolute"
					],
					"enumDescriptions": [
						"%gitlens.defaultDateStyle.enumDescriptions.relative%",
						"%gitlens.defaultDateStyle.enumDescriptions.absolute%"
					],
					"markdownDescription": "%gitlens.defaultDateStyle.markdownDescription%",
					"scope": "window"
				},
				"gitlens.defaultGravatarsStyle": {
					"type": "string",
					"default": "robohash",
					"enum": [
						"identicon",
						"mp",
						"monsterid",
						"retro",
						"robohash",
						"wavatar"
					],
					"enumDescriptions": [
						"%gitlens.defaultGravatarsStyle.enumDescriptions.identicon%",
						"%gitlens.defaultGravatarsStyle.enumDescriptions.mp%",
						"%gitlens.defaultGravatarsStyle.enumDescriptions.monsterid%",
						"%gitlens.defaultGravatarsStyle.enumDescriptions.retro%",
						"%gitlens.defaultGravatarsStyle.enumDescriptions.robohash%",
						"%gitlens.defaultGravatarsStyle.enumDescriptions.wavatar%"
					],
					"markdownDescription": "%gitlens.defaultGravatarsStyle.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.closeOnFocusOut": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.gitCommands.closeOnFocusOut.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.search.matchAll": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.gitCommands.search.matchAll.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.search.matchCase": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.gitCommands.search.matchCase.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.search.matchRegex": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.gitCommands.search.matchRegex.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.search.showResultsInView": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.gitCommands.search.showResultsInView.markdownDescription%",
					"scope": "window"
				},
				"gitlens.gitCommands.skipConfirmations": {
					"type": "array",
					"default": [
						"fetch:command",
						"stash-push:command",
						"switch:command"
					],
					"items": {
						"type": "string",
						"enum": [
							"branch-create:command",
							"branch-create:menu",
							"co-authors:command",
							"co-authors:menu",
							"fetch:command",
							"fetch:menu",
							"pull:command",
							"pull:menu",
							"push:command",
							"push:menu",
							"stash-apply:command",
							"stash-apply:menu",
							"stash-pop:command",
							"stash-pop:menu",
							"stash-push:command",
							"stash-push:menu",
							"switch:command",
							"switch:menu",
							"tag-create:command",
							"tag-create:menu"
						],
						"enumDescriptions": [
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.branch-create:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.branch-create:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.co-authors:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.co-authors:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.fetch:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.fetch:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.pull:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.pull:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.push:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.push:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-apply:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-apply:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-pop:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-pop:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-push:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.stash-push:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.switch:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.switch:menu%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.tag-create:command%",
							"%gitlens.gitCommands.skipConfirmations.items.enumDescriptions.tag-create:menu%"
						]
					},
					"minItems": 0,
					"maxItems": 14,
					"uniqueItems": true,
					"markdownDescription": "%gitlens.gitCommands.skipConfirmations.markdownDescription%",
					"scope": "window"
				},
				"gitlens.heatmap.ageThreshold": {
					"type": "string",
					"default": "90",
					"markdownDescription": "%gitlens.heatmap.ageThreshold.markdownDescription%",
					"scope": "window"
				},
				"gitlens.heatmap.coldColor": {
					"type": "string",
					"default": "#0a60f6",
					"markdownDescription": "%gitlens.heatmap.coldColor.markdownDescription%",
					"scope": "window"
				},
				"gitlens.heatmap.hotColor": {
					"type": "string",
					"default": "#f66a0a",
					"markdownDescription": "%gitlens.heatmap.hotColor.markdownDescription%",
					"scope": "window"
				},
				"gitlens.heatmap.toggleMode": {
					"type": "string",
					"default": "file",
					"enum": [
						"file",
						"window"
					],
					"enumDescriptions": [
						"%gitlens.heatmap.toggleMode.enumDescriptions.file%",
						"%gitlens.heatmap.toggleMode.enumDescriptions.window%"
					],
					"markdownDescription": "%gitlens.heatmap.toggleMode.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.annotations.changes": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.annotations.changes.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.annotations.details": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.annotations.details.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.annotations.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.annotations.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.annotations.over": {
					"type": "string",
					"default": "line",
					"enum": [
						"annotation",
						"line"
					],
					"enumDescriptions": [
						"%gitlens.hovers.annotations.over.enumDescriptions.annotation%",
						"%gitlens.hovers.annotations.over.enumDescriptions.line%"
					],
					"markdownDescription": "%gitlens.hovers.annotations.over.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.currentLine.changes": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.currentLine.changes.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.currentLine.details": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.currentLine.details.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.currentLine.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.currentLine.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.currentLine.over": {
					"type": "string",
					"default": "annotation",
					"enum": [
						"annotation",
						"line"
					],
					"enumDescriptions": [
						"%gitlens.hovers.currentLine.over.enumDescriptions.annotation%",
						"%gitlens.hovers.currentLine.over.enumDescriptions.line%"
					],
					"markdownDescription": "%gitlens.hovers.currentLine.over.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.changesDiff": {
					"type": "string",
					"default": "line",
					"enum": [
						"line",
						"hunk"
					],
					"enumDescriptions": [
						"%gitlens.hovers.changesDiff.enumDescriptions.line%",
						"%gitlens.hovers.changesDiff.enumDescriptions.hunk%"
					],
					"markdownDescription": "%gitlens.hovers.changesDiff.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.detailsMarkdownFormat": {
					"type": "string",
					"default": "${avatar} &nbsp;__${author}__, ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}",
					"markdownDescription": "%gitlens.hovers.detailsMarkdownFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.hovers.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.hovers.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.insiders": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.insiders.markdownDescription%",
					"scope": "window"
				},
				"gitlens.keymap": {
					"type": "string",
					"default": "chorded",
					"enum": [
						"alternate",
						"chorded",
						"none"
					],
					"enumDescriptions": [
						"%gitlens.keymap.enumDescriptions.alternate%",
						"%gitlens.keymap.enumDescriptions.chorded%",
						"%gitlens.keymap.enumDescriptions.none%"
					],
					"markdownDescription": "%gitlens.keymap.markdownDescription%",
					"scope": "window"
				},
				"gitlens.liveshare.allowGuestAccess": {
					"type": "boolean",
					"default": true,
					"description": "%gitlens.liveshare.allowGuestAccess.description%",
					"scope": "window"
				},
				"gitlens.menus": {
					"anyOf": [
						{
							"enum": [
								false
							]
						},
						{
							"type": "object",
							"properties": {
								"editor": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"blame": {
													"type": "boolean"
												},
												"clipboard": {
													"type": "boolean"
												},
												"compare": {
													"type": "boolean"
												},
												"details": {
													"type": "boolean"
												},
												"history": {
													"type": "boolean"
												},
												"remote": {
													"type": "boolean"
												}
											}
										}
									]
								},
								"editorGroup": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"blame": {
													"type": "boolean"
												},
												"compare": {
													"type": "boolean"
												}
											}
										}
									]
								},
								"editorTab": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"clipboard": {
													"type": "boolean"
												},
												"compare": {
													"type": "boolean"
												},
												"history": {
													"type": "boolean"
												},
												"remote": {
													"type": "boolean"
												}
											}
										}
									]
								},
								"explorer": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"clipboard": {
													"type": "boolean"
												},
												"compare": {
													"type": "boolean"
												},
												"history": {
													"type": "boolean"
												},
												"remote": {
													"type": "boolean"
												}
											}
										}
									]
								},
								"scmGroup": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"compare": {
													"type": "boolean"
												},
												"openClose": {
													"type": "boolean"
												},
												"stash": {
													"type": "boolean"
												},
												"stashInline": {
													"type": "boolean"
												}
											}
										}
									]
								},
								"scmItem": {
									"anyOf": [
										{
											"enum": [
												false
											]
										},
										{
											"type": "object",
											"properties": {
												"clipboard": {
													"type": "boolean"
												},
												"compare": {
													"type": "boolean"
												},
												"history": {
													"type": "boolean"
												},
												"remote": {
													"type": "boolean"
												},
												"stash": {
													"type": "boolean"
												}
											}
										}
									]
								}
							}
						}
					],
					"default": {
						"editor": {
							"blame": false,
							"clipboard": true,
							"compare": true,
							"details": false,
							"history": false,
							"remote": false
						},
						"editorGroup": {
							"blame": true,
							"compare": true
						},
						"editorTab": {
							"clipboard": true,
							"compare": true,
							"history": true,
							"remote": true
						},
						"explorer": {
							"clipboard": true,
							"compare": true,
							"history": true,
							"remote": true
						},
						"scmGroup": {
							"compare": true,
							"openClose": true,
							"stash": true,
							"stashInline": true
						},
						"scmItem": {
							"clipboard": true,
							"compare": true,
							"history": true,
							"remote": true,
							"stash": true
						}
					},
					"markdownDescription": "%gitlens.menus.markdownDescription%",
					"scope": "window"
				},
				"gitlens.mode.active": {
					"type": "string",
					"markdownDescription": "%gitlens.mode.active.markdownDescription%",
					"scope": "window"
				},
				"gitlens.mode.statusBar.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.mode.statusBar.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.mode.statusBar.alignment": {
					"type": "string",
					"default": "right",
					"enum": [
						"left",
						"right"
					],
					"enumDescriptions": [
						"%gitlens.mode.statusBar.alignment.enumDescriptions.left%",
						"%gitlens.mode.statusBar.alignment.enumDescriptions.right%"
					],
					"markdownDescription": "%gitlens.mode.statusBar.alignment.markdownDescription%",
					"scope": "window"
				},
				"gitlens.modes": {
					"type": "object",
					"properties": {
						"zen": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "%gitlens.modes.properties.zen.properties.name.description%"
								},
								"statusBarItemName": {
									"type": "string",
									"description": "%gitlens.modes.properties.zen.properties.statusBarItemName.description%"
								},
								"description": {
									"type": "string",
									"description": "%gitlens.modes.properties.zen.properties.description.description%"
								},
								"codeLens": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.zen.properties.codeLens.description%"
								},
								"currentLine": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.zen.properties.currentLine.description%"
								},
								"hovers": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.zen.properties.hovers.description%"
								},
								"statusBar": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.zen.properties.statusBar.description%"
								},
								"views": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.zen.properties.views.description%"
								}
							}
						},
						"review": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "%gitlens.modes.properties.review.properties.name.description%"
								},
								"statusBarItemName": {
									"type": "string",
									"description": "%gitlens.modes.properties.review.properties.statusBarItemName.description%"
								},
								"description": {
									"type": "string",
									"description": "%gitlens.modes.properties.review.properties.description.description%"
								},
								"codeLens": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.review.properties.codeLens.description%"
								},
								"currentLine": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.review.properties.currentLine.description%"
								},
								"hovers": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.review.properties.hovers.description%"
								},
								"statusBar": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.review.properties.statusBar.description%"
								},
								"views": {
									"type": "boolean",
									"description": "%gitlens.modes.properties.review.properties.views.description%"
								}
							}
						}
					},
					"additionalProperties": {
						"type": "object",
						"required": [
							"name"
						],
						"properties": {
							"name": {
								"type": "string",
								"description": "%gitlens.modes.additionalProperties.properties.name.description%"
							},
							"statusBarItemName": {
								"type": "string",
								"description": "%gitlens.modes.additionalProperties.properties.statusBarItemName.description%"
							},
							"description": {
								"type": "string",
								"description": "%gitlens.modes.additionalProperties.properties.description.description%"
							},
							"annotations": {
								"type": "string",
								"enum": [
									"blame",
									"heatmap",
									"recentChanges"
								],
								"enumDescriptions": [
									"%gitlens.modes.additionalProperties.properties.annotations.enumDescriptions.blame%",
									"%gitlens.modes.additionalProperties.properties.annotations.enumDescriptions.heatmap%",
									"%gitlens.modes.additionalProperties.properties.annotations.enumDescriptions.recentChanges%"
								],
								"description": "%gitlens.modes.additionalProperties.properties.annotations.description%"
							},
							"codeLens": {
								"type": "boolean",
								"description": "%gitlens.modes.additionalProperties.properties.codeLens.description%"
							},
							"currentLine": {
								"type": "boolean",
								"description": "%gitlens.modes.additionalProperties.properties.currentLine.description%"
							},
							"hovers": {
								"type": "boolean",
								"description": "%gitlens.modes.additionalProperties.properties.hovers.description%"
							},
							"statusBar": {
								"type": "boolean",
								"description": "%gitlens.modes.additionalProperties.properties.statusBar.description%"
							},
							"views": {
								"type": "boolean",
								"description": "%gitlens.modes.additionalProperties.properties.views.description%"
							}
						}
					},
					"default": {
						"zen": {
							"name": "Zen",
							"statusBarItemName": "Zen",
							"description": "%gitlens.modes.default.zen.description%",
							"codeLens": false,
							"currentLine": false,
							"hovers": false,
							"statusBar": false
						},
						"review": {
							"name": "Review",
							"statusBarItemName": "Reviewing",
							"description": "%gitlens.modes.default.review.description%",
							"codeLens": true,
							"currentLine": true,
							"hovers": true
						}
					},
					"markdownDescription": "%gitlens.modes.markdownDescription%",
					"scope": "window"
				},
				"gitlens.outputLevel": {
					"type": "string",
					"default": "errors",
					"enum": [
						"silent",
						"errors",
						"verbose",
						"debug"
					],
					"enumDescriptions": [
						"%gitlens.outputLevel.enumDescriptions.silent%",
						"%gitlens.outputLevel.enumDescriptions.errors%",
						"%gitlens.outputLevel.enumDescriptions.verbose%",
						"%gitlens.outputLevel.enumDescriptions.debug%"
					],
					"markdownDescription": "%gitlens.outputLevel.markdownDescription%",
					"scope": "window"
				},
				"gitlens.recentChanges.highlight.locations": {
					"type": "array",
					"default": [
						"gutter",
						"line",
						"overview"
					],
					"items": {
						"type": "string",
						"enum": [
							"gutter",
							"line",
							"overview"
						],
						"enumDescriptions": [
							"%gitlens.recentChanges.highlight.locations.items.enumDescriptions.gutter%",
							"%gitlens.recentChanges.highlight.locations.items.enumDescriptions.line%",
							"%gitlens.recentChanges.highlight.locations.items.enumDescriptions.overview%"
						]
					},
					"minItems": 1,
					"maxItems": 3,
					"uniqueItems": true,
					"markdownDescription": "%gitlens.recentChanges.highlight.locations.markdownDescription%",
					"scope": "window"
				},
				"gitlens.recentChanges.toggleMode": {
					"type": "string",
					"default": "file",
					"enum": [
						"file",
						"window"
					],
					"enumDescriptions": [
						"%gitlens.recentChanges.toggleMode.enumDescriptions.file%",
						"%gitlens.recentChanges.toggleMode.enumDescriptions.window%"
					],
					"markdownDescription": "%gitlens.recentChanges.toggleMode.markdownDescription%",
					"scope": "window"
				},
				"gitlens.remotes": {
					"type": [
						"array",
						"null"
					],
					"default": null,
					"items": {
						"type": "object",
						"required": [
							"type",
							"domain"
						],
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"Bitbucket",
									"BitbucketServer",
									"Custom",
									"GitHub",
									"GitLab"
								],
								"description": "%gitlens.remotes.items.properties.type.description%"
							},
							"domain": {
								"type": "string",
								"description": "%gitlens.remotes.items.properties.domain.description%"
							},
							"name": {
								"type": "string",
								"description": "%gitlens.remotes.items.properties.name.description%"
							},
							"protocol": {
								"type": "string",
								"default": "https",
								"description": "%gitlens.remotes.items.properties.protocol.description%"
							},
							"urls": {
								"type": "object",
								"required": [
									"repository",
									"branches",
									"branch",
									"commit",
									"file",
									"fileInCommit",
									"fileInBranch",
									"fileLine",
									"fileRange"
								],
								"properties": {
									"repository": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.repository.description%"
									},
									"branches": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.branches.description%"
									},
									"branch": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.branch.description%"
									},
									"commit": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.commit.description%"
									},
									"file": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.file.description%"
									},
									"fileInBranch": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.fileInBranch.description%"
									},
									"fileInCommit": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.fileInCommit.description%"
									},
									"fileLine": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.fileLine.description%"
									},
									"fileRange": {
										"type": "string",
										"description": "%gitlens.remotes.items.properties.urls.properties.fileRange.description%"
									}
								}
							},
							"description": "%gitlens.remotes.items.properties.description%"
						}
					},
					"uniqueItems": true,
					"markdownDescription": "%gitlens.remotes.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.showWhatsNewAfterUpgrades": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.showWhatsNewAfterUpgrades.markdownDescription%",
					"scope": "window"
				},
				"gitlens.sortBranchesBy": {
					"type": "string",
					"default": "name:desc",
					"enum": [
						"name:desc",
						"name:asc",
						"date:desc",
						"date:asc"
					],
					"enumDescriptions": [
						"%gitlens.sortBranchesBy.enumDescriptions.name:desc%",
						"%gitlens.sortBranchesBy.enumDescriptions.name:asc%",
						"%gitlens.sortBranchesBy.enumDescriptions.date:desc%",
						"%gitlens.sortBranchesBy.enumDescriptions.date:asc%"
					],
					"markdownDescription": "%gitlens.sortBranchesBy.markdownDescription%",
					"scope": "window"
				},
				"gitlens.sortTagsBy": {
					"type": "string",
					"default": "name:desc",
					"enum": [
						"name:desc",
						"name:asc",
						"date:desc",
						"date:asc"
					],
					"enumDescriptions": [
						"%gitlens.sortTagsBy.enumDescriptions.name:desc%",
						"%gitlens.sortTagsBy.enumDescriptions.name:asc%",
						"%gitlens.sortTagsBy.enumDescriptions.date:desc%",
						"%gitlens.sortTagsBy.enumDescriptions.date:asc%"
					],
					"markdownDescription": "%gitlens.sortTagsBy.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.alignment": {
					"type": "string",
					"default": "right",
					"enum": [
						"left",
						"right"
					],
					"enumDescriptions": [
						"%gitlens.statusBar.alignment.enumDescriptions.left%",
						"%gitlens.statusBar.alignment.enumDescriptions.right%"
					],
					"markdownDescription": "%gitlens.statusBar.alignment.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.command": {
					"type": "string",
					"default": "gitlens.showQuickCommitDetails",
					"enum": [
						"gitlens.toggleFileBlame",
						"gitlens.diffWithPrevious",
						"gitlens.diffWithWorking",
						"gitlens.toggleCodeLens",
						"gitlens.revealCommitInView",
						"gitlens.showCommitsInView",
						"gitlens.showQuickCommitDetails",
						"gitlens.showQuickCommitFileDetails",
						"gitlens.showQuickFileHistory",
						"gitlens.showQuickRepoHistory"
					],
					"enumDescriptions": [
						"%gitlens.statusBar.command.enumDescriptions.gitlens.toggleFileBlame%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.diffWithPrevious%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.diffWithWorking%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.toggleCodeLens%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.revealCommitInView%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.showCommitsInView%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.showQuickCommitDetails%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.showQuickCommitFileDetails%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.showQuickFileHistory%",
						"%gitlens.statusBar.command.enumDescriptions.gitlens.showQuickRepoHistory%"
					],
					"markdownDescription": "%gitlens.statusBar.command.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.dateFormat": {
					"type": [
						"string",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.statusBar.dateFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.statusBar.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.format": {
					"type": "string",
					"default": "${author}, ${agoOrDate}",
					"markdownDescription": "%gitlens.statusBar.format.markdownDescription%",
					"scope": "window"
				},
				"gitlens.statusBar.reduceFlicker": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.statusBar.reduceFlicker.markdownDescription%",
					"scope": "window"
				},
				"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
					"type": "string",
					"default": "Unsaved changes (cannot determine recent change or authors)",
					"markdownDescription": "%gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors.markdownDescription%",
					"scope": "window"
				},
				"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
					"type": "string",
					"default": "Unsaved changes (cannot determine recent change)",
					"markdownDescription": "%gitlens.strings.codeLens.unsavedChanges.recentChangeOnly.markdownDescription%",
					"scope": "window"
				},
				"gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
					"type": "string",
					"default": "Unsaved changes (cannot determine authors)",
					"markdownDescription": "%gitlens.strings.codeLens.unsavedChanges.authorsOnly.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.commitFileFormat": {
					"type": "string",
					"default": "${file}",
					"markdownDescription": "%gitlens.views.commitFileFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.commitFileDescriptionFormat": {
					"type": "string",
					"default": "${directory}${  ←  originalPath}",
					"markdownDescription": "%gitlens.views.commitFileDescriptionFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.commitFormat": {
					"type": "string",
					"default": "${❰ tips ❱➤  }${message}",
					"markdownDescription": "%gitlens.views.commitFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.commitDescriptionFormat": {
					"type": "string",
					"default": "${changes  •  }${author}, ${agoOrDate}",
					"markdownDescription": "%gitlens.views.commitDescriptionFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.compare.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.compare.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.files.compact": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.compare.files.compact.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.files.layout": {
					"type": "string",
					"default": "auto",
					"enum": [
						"auto",
						"list",
						"tree"
					],
					"enumDescriptions": [
						"%gitlens.views.compare.files.layout.enumDescriptions.auto%",
						"%gitlens.views.compare.files.layout.enumDescriptions.list%",
						"%gitlens.views.compare.files.layout.enumDescriptions.tree%"
					],
					"markdownDescription": "%gitlens.views.compare.files.layout.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.files.threshold": {
					"type": "number",
					"default": 5,
					"markdownDescription": "%gitlens.views.compare.files.threshold.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.compare.location": {
					"type": "string",
					"default": "gitlens",
					"enum": [
						"gitlens",
						"explorer",
						"scm"
					],
					"enumDescriptions": [
						"%gitlens.views.compare.location.enumDescriptions.gitlens%",
						"%gitlens.views.compare.location.enumDescriptions.explorer%",
						"%gitlens.views.compare.location.enumDescriptions.scm%"
					],
					"markdownDescription": "%gitlens.views.compare.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.defaultItemLimit": {
					"type": "number",
					"default": 10,
					"markdownDescription": "%gitlens.views.defaultItemLimit.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.pageItemLimit": {
					"type": "number",
					"default": 20,
					"markdownDescription": "%gitlens.views.pageItemLimit.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.fileHistory.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.fileHistory.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.fileHistory.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.fileHistory.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.fileHistory.location": {
					"type": "string",
					"default": "gitlens",
					"enum": [
						"gitlens",
						"explorer",
						"scm"
					],
					"enumDescriptions": [
						"%gitlens.views.fileHistory.location.enumDescriptions.gitlens%",
						"%gitlens.views.fileHistory.location.enumDescriptions.explorer%",
						"%gitlens.views.fileHistory.location.enumDescriptions.scm%"
					],
					"markdownDescription": "%gitlens.views.fileHistory.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.lineHistory.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.lineHistory.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.lineHistory.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.lineHistory.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.lineHistory.location": {
					"type": "string",
					"default": "gitlens",
					"enum": [
						"gitlens",
						"explorer",
						"scm"
					],
					"enumDescriptions": [
						"%gitlens.views.lineHistory.location.enumDescriptions.gitlens%",
						"%gitlens.views.lineHistory.location.enumDescriptions.explorer%",
						"%gitlens.views.lineHistory.location.enumDescriptions.scm%"
					],
					"markdownDescription": "%gitlens.views.lineHistory.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.autoRefresh": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.autoRefresh.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.autoReveal": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.autoReveal.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.branches.layout": {
					"type": "string",
					"default": "tree",
					"enum": [
						"list",
						"tree"
					],
					"enumDescriptions": [
						"%gitlens.views.repositories.branches.layout.enumDescriptions.list%",
						"%gitlens.views.repositories.branches.layout.enumDescriptions.tree%"
					],
					"markdownDescription": "%gitlens.views.repositories.branches.layout.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.compact": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "%gitlens.views.repositories.compact.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.files.compact": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.files.compact.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.files.layout": {
					"type": "string",
					"default": "auto",
					"enum": [
						"auto",
						"list",
						"tree"
					],
					"enumDescriptions": [
						"%gitlens.views.repositories.files.layout.enumDescriptions.auto%",
						"%gitlens.views.repositories.files.layout.enumDescriptions.list%",
						"%gitlens.views.repositories.files.layout.enumDescriptions.tree%"
					],
					"markdownDescription": "%gitlens.views.repositories.files.layout.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.files.threshold": {
					"type": "number",
					"default": 5,
					"markdownDescription": "%gitlens.views.repositories.files.threshold.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.includeWorkingTree": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.includeWorkingTree.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.location": {
					"type": "string",
					"default": "gitlens",
					"enum": [
						"gitlens",
						"explorer",
						"scm"
					],
					"enumDescriptions": [
						"%gitlens.views.repositories.location.enumDescriptions.gitlens%",
						"%gitlens.views.repositories.location.enumDescriptions.explorer%",
						"%gitlens.views.repositories.location.enumDescriptions.scm%"
					],
					"markdownDescription": "%gitlens.views.repositories.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.showBranchComparison": {
					"anyOf": [
						{
							"enum": [
								false
							]
						},
						{
							"type": "string",
							"enum": [
								"branch",
								"working"
							],
							"enumDescriptions": [
								"Compares the current branch to the user-selected reference",
								"Compares the working tree to the user-selected reference"
							]
						}
					],
					"default": "working",
					"markdownDescription": "%gitlens.views.repositories.showBranchComparison.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.repositories.showTrackingBranch": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.repositories.showTrackingBranch.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.avatars": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.search.avatars.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.search.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.files.compact": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.search.files.compact.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.files.layout": {
					"type": "string",
					"default": "auto",
					"enum": [
						"auto",
						"list",
						"tree"
					],
					"enumDescriptions": [
						"%gitlens.views.search.files.layout.enumDescriptions.auto%",
						"%gitlens.views.search.files.layout.enumDescriptions.list%",
						"%gitlens.views.search.files.layout.enumDescriptions.tree%"
					],
					"markdownDescription": "%gitlens.views.search.files.layout.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.files.threshold": {
					"type": "number",
					"default": 5,
					"markdownDescription": "%gitlens.views.search.files.threshold.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.search.location": {
					"type": "string",
					"default": "gitlens",
					"enum": [
						"gitlens",
						"explorer",
						"scm"
					],
					"enumDescriptions": [
						"%gitlens.views.search.location.enumDescriptions.gitlens%",
						"%gitlens.views.search.location.enumDescriptions.explorer%",
						"%gitlens.views.search.location.enumDescriptions.scm%"
					],
					"markdownDescription": "%gitlens.views.search.location.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.showRelativeDateMarkers": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.views.showRelativeDateMarkers.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.stashFileFormat": {
					"type": "string",
					"default": "${file}",
					"markdownDescription": "%gitlens.views.stashFileFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.stashFileDescriptionFormat": {
					"type": "string",
					"default": "${directory}${  ←  originalPath}",
					"markdownDescription": "%gitlens.views.stashFileDescriptionFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.stashFormat": {
					"type": "string",
					"default": "${message}",
					"markdownDescription": "%gitlens.views.stashFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.stashDescriptionFormat": {
					"type": "string",
					"default": "${changes  •  }${agoOrDate}",
					"markdownDescription": "%gitlens.views.stashDescriptionFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.statusFileFormat": {
					"type": "string",
					"default": "${working  }${file}",
					"markdownDescription": "%gitlens.views.statusFileFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.views.statusFileDescriptionFormat": {
					"type": "string",
					"default": "${directory}${  ←  originalPath}",
					"markdownDescription": "%gitlens.views.statusFileDescriptionFormat.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.abbreviatedShaLength": {
					"type": "number",
					"default": "7",
					"markdownDescription": "%gitlens.advanced.abbreviatedShaLength.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.blame.customArguments": {
					"type": [
						"array",
						"null"
					],
					"default": null,
					"items": {
						"type": "string"
					},
					"markdownDescription": "%gitlens.advanced.blame.customArguments.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.advanced.blame.delayAfterEdit": {
					"type": "number",
					"default": 5000,
					"markdownDescription": "%gitlens.advanced.blame.delayAfterEdit.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.blame.sizeThresholdAfterEdit": {
					"type": "number",
					"default": 5000,
					"markdownDescription": "%gitlens.advanced.blame.sizeThresholdAfterEdit.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.caching.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.advanced.caching.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.fileHistoryFollowsRenames": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.advanced.fileHistoryFollowsRenames.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.maxListItems": {
					"type": "number",
					"default": 200,
					"markdownDescription": "%gitlens.advanced.maxListItems.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.maxSearchItems": {
					"type": "number",
					"default": 200,
					"markdownDescription": "%gitlens.advanced.maxSearchItems.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.messages": {
					"type": "object",
					"default": {
						"suppressCommitHasNoPreviousCommitWarning": false,
						"suppressCommitNotFoundWarning": false,
						"suppressFileNotUnderSourceControlWarning": false,
						"suppressGitDisabledWarning": false,
						"suppressGitVersionWarning": false,
						"suppressLineUncommittedWarning": false,
						"suppressNoRepositoryWarning": false,
						"suppressSupportGitLensNotification": false
					},
					"properties": {
						"suppressCommitHasNoPreviousCommitWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressCommitNotFoundWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressFileNotUnderSourceControlWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressGitDisabledWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressGitVersionWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressLineUncommittedWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressNoRepositoryWarning": {
							"type": "boolean",
							"default": false
						},
						"suppressSupportGitLensNotification": {
							"type": "boolean",
							"default": false
						}
					},
					"markdownDescription": "%gitlens.advanced.messages.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.quickPick.closeOnFocusOut": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.advanced.quickPick.closeOnFocusOut.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.repositorySearchDepth": {
					"type": "number",
					"default": 1,
					"markdownDescription": "%gitlens.advanced.repositorySearchDepth.markdownDescription%",
					"scope": "resource"
				},
				"gitlens.advanced.similarityThreshold": {
					"type": [
						"number",
						"null"
					],
					"default": null,
					"markdownDescription": "%gitlens.advanced.similarityThreshold.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.telemetry.enabled": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.advanced.telemetry.enabled.markdownDescription%",
					"scope": "window"
				},
				"gitlens.advanced.useSymmetricDifferenceNotation": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "%gitlens.advanced.useSymmetricDifferenceNotation.markdownDescription%",
					"scope": "window"
				}
			}
		},
		"colors": [
			{
				"id": "gitlens.gutterBackgroundColor",
				"description": "%gitlens.gutterBackgroundColor.description%",
				"defaults": {
					"dark": "#FFFFFF13",
					"light": "#0000000C",
					"highContrast": "#FFFFFF13"
				}
			},
			{
				"id": "gitlens.gutterForegroundColor",
				"description": "%gitlens.gutterForegroundColor.description%",
				"defaults": {
					"dark": "#BEBEBE",
					"light": "#747474",
					"highContrast": "#BEBEBE"
				}
			},
			{
				"id": "gitlens.gutterUncommittedForegroundColor",
				"description": "%gitlens.gutterUncommittedForegroundColor.description%",
				"defaults": {
					"dark": "#00BCF299",
					"light": "#00BCF299",
					"highContrast": "#00BCF2FF"
				}
			},
			{
				"id": "gitlens.trailingLineBackgroundColor",
				"description": "%gitlens.trailingLineBackgroundColor.description%",
				"defaults": {
					"dark": "#00000000",
					"light": "#00000000",
					"highContrast": "#00000000"
				}
			},
			{
				"id": "gitlens.trailingLineForegroundColor",
				"description": "%gitlens.trailingLineForegroundColor.description%",
				"defaults": {
					"dark": "#99999959",
					"light": "#99999959",
					"highContrast": "#99999999"
				}
			},
			{
				"id": "gitlens.lineHighlightBackgroundColor",
				"description": "%gitlens.lineHighlightBackgroundColor.description%",
				"defaults": {
					"dark": "#00BCF233",
					"light": "#00BCF233",
					"highContrast": "#00BCF233"
				}
			},
			{
				"id": "gitlens.lineHighlightOverviewRulerColor",
				"description": "%gitlens.lineHighlightOverviewRulerColor.description%",
				"defaults": {
					"dark": "#00BCF299",
					"light": "#00BCF299",
					"highContrast": "#00BCF299"
				}
			}
		],
		"commands":[
			{
				"command": "gitlens.supportGitLens",
				"title": "%gitlens.supportGitLens.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-heart.svg",
					"light": "images/light/icon-heart.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage",
				"title": "%gitlens.showSettingsPage.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage#repositories-view",
				"title": "%gitlens.showSettingsPage#repositories-view.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage#file-history-view",
				"title": "%gitlens.showSettingsPage#file-history-view.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage#line-history-view",
				"title": "%gitlens.showSettingsPage#line-history-view.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage#search-commits-view",
				"title": "%gitlens.showSettingsPage#search-commits-view.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showSettingsPage#compare-view",
				"title": "%gitlens.showSettingsPage#compare-view.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-gear.svg",
					"light": "images/light/icon-gear.svg"
				}
			},
			{
				"command": "gitlens.showWelcomePage",
				"title": "%gitlens.showWelcomePage.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCompareView",
				"title": "%gitlens.showCompareView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showFileHistoryView",
				"title": "%gitlens.showFileHistoryView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showLineHistoryView",
				"title": "%gitlens.showLineHistoryView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showRepositoriesView",
				"title": "%gitlens.showRepositoriesView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showSearchView",
				"title": "%gitlens.showSearchView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffDirectory",
				"title": "%gitlens.diffDirectory.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffDirectoryWithHead",
				"title": "%gitlens.diffDirectoryWithHead.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffHeadWith",
				"title": "%gitlens.diffHeadWith.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWorkingWith",
				"title": "%gitlens.diffWorkingWith.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWithRef",
				"title": "%gitlens.diffWithRef.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWithNext",
				"title": "%gitlens.diffWithNext.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-next-commit.svg",
					"light": "images/light/icon-next-commit.svg"
				},
				"enablement": "gitlens:activeFileStatus =~ /revision/"
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"title": "%gitlens.diffWithNextInDiffLeft.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-next-commit.svg",
					"light": "images/light/icon-next-commit.svg"
				},
				"enablement": "gitlens:activeFileStatus =~ /revision/"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"title": "%gitlens.diffWithPrevious.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-prev-commit.svg",
					"light": "images/light/icon-prev-commit.svg"
				}
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"title": "%gitlens.diffWithPreviousInDiffRight.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-prev-commit.svg",
					"light": "images/light/icon-prev-commit.svg"
				}
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"title": "%gitlens.diffLineWithPrevious.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWithRevision",
				"title": "%gitlens.diffWithRevision.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-prev-commit-menu.svg",
					"light": "images/light/icon-prev-commit-menu.svg"
				}
			},
			{
				"command": "gitlens.diffWithWorking",
				"title": "%gitlens.diffWithWorking.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-ref-working.svg",
					"light": "images/light/icon-compare-ref-working.svg"
				}
			},
			{
				"command": "gitlens.diffLineWithWorking",
				"title": "%gitlens.diffLineWithWorking.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"title": "%gitlens.toggleFileBlame.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-git.svg",
					"light": "images/light/icon-git.svg"
				}
			},
			{
				"command": "gitlens.clearFileAnnotations",
				"title": "%gitlens.clearFileAnnotations.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-git-orange.svg",
					"light": "images/light/icon-git-orange.svg"
				}
			},
			{
				"command": "gitlens.computingFileAnnotations",
				"title": "%gitlens.computingFileAnnotations.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-git-progress.svg",
					"light": "images/light/icon-git-progress.svg"
				}
			},
			{
				"command": "gitlens.toggleFileHeatmap",
				"title": "%gitlens.toggleFileHeatmap.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-git.svg",
					"light": "images/light/icon-git.svg"
				}
			},
			{
				"command": "gitlens.toggleFileRecentChanges",
				"title": "%gitlens.toggleFileRecentChanges.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-git.svg",
					"light": "images/light/icon-git.svg"
				}
			},
			{
				"command": "gitlens.toggleLineBlame",
				"title": "%gitlens.toggleLineBlame.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"title": "%gitlens.toggleCodeLens.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands",
				"title": "%gitlens.gitCommands.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.switchMode",
				"title": "%gitlens.switchMode.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleReviewMode",
				"title": "%gitlens.toggleReviewMode.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleZenMode",
				"title": "%gitlens.toggleZenMode.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitSearch",
				"title": "%gitlens.showCommitSearch.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-search.svg",
					"light": "images/light/icon-search.svg"
				}
			},
			{
				"command": "gitlens.showLastQuickPick",
				"title": "%gitlens.showLastQuickPick.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.revealCommitInView",
				"title": "%gitlens.revealCommitInView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitInView",
				"title": "%gitlens.showCommitInView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitsInView",
				"title": "%gitlens.showCommitsInView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showFileHistoryInView",
				"title": "%gitlens.showFileHistoryInView.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickCommitDetails",
				"title": "%gitlens.showQuickCommitDetails.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"title": "%gitlens.showQuickCommitFileDetails.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRevisionDetails",
				"title": "%gitlens.showQuickRevisionDetails.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-commit-horizontal.svg",
					"light": "images/light/icon-commit-horizontal.svg"
				},
				"enablement": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"title": "%gitlens.showQuickFileHistory.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickBranchHistory",
				"title": "%gitlens.showQuickBranchHistory.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"title": "%gitlens.showQuickRepoHistory.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"title": "%gitlens.showQuickRepoStatus.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickStashList",
				"title": "%gitlens.showQuickStashList.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.copyMessageToClipboard",
				"title": "%gitlens.copyMessageToClipboard.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-copy-message.svg",
					"light": "images/light/icon-copy-message.svg"
				}
			},
			{
				"command": "gitlens.copyRemoteFileUrlToClipboard",
				"title": "%gitlens.copyRemoteFileUrlToClipboard.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-copy-link.svg",
					"light": "images/light/icon-copy-link.svg"
				}
			},
			{
				"command": "gitlens.copyShaToClipboard",
				"title": "%gitlens.copyShaToClipboard.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-copy.svg",
					"light": "images/light/icon-copy.svg"
				}
			},
			{
				"command": "gitlens.closeUnchangedFiles",
				"title": "%gitlens.closeUnchangedFiles.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openChangedFiles",
				"title": "%gitlens.openChangedFiles.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openBranchesInRemote",
				"title": "%gitlens.openBranchesInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.openBranchInRemote",
				"title": "%gitlens.openBranchInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.openCommitInRemote",
				"title": "%gitlens.openCommitInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.openFileInRemote",
				"title": "%gitlens.openFileInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.openFileRevision",
				"title": "%gitlens.openFileRevision.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openFileRevisionFrom",
				"title": "%gitlens.openFileRevisionFrom.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openRepoInRemote",
				"title": "%gitlens.openRepoInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.openRevisionFile",
				"title": "%gitlens.openRevisionFile.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-revision.svg",
					"light": "images/light/icon-open-revision.svg"
				},
				"enablement": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"
			},
			{
				"command": "gitlens.openWorkingFile",
				"title": "%gitlens.openWorkingFile.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-working-file.svg",
					"light": "images/light/icon-open-working-file.svg"
				}
			},
			{
				"command": "gitlens.stashApply",
				"title": "%gitlens.stashApply.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-stash-pop.svg",
					"light": "images/light/icon-stash-pop.svg"
				}
			},
			{
				"command": "gitlens.stashDelete",
				"title": "%gitlens.stashDelete.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-delete.svg",
					"light": "images/light/icon-delete.svg"
				}
			},
			{
				"command": "gitlens.stashSave",
				"title": "%gitlens.stashSave.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-stash-save.svg",
					"light": "images/light/icon-stash-save.svg"
				}
			},
			{
				"command": "gitlens.stashSaveFiles",
				"title": "%gitlens.stashSaveFiles.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-stash-save.svg",
					"light": "images/light/icon-stash-save.svg"
				}
			},
			{
				"command": "gitlens.externalDiff",
				"title": "%gitlens.externalDiff.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.externalDiffAll",
				"title": "%gitlens.externalDiffAll.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.resetSuppressedWarnings",
				"title": "%gitlens.resetSuppressedWarnings.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.inviteToLiveShare",
				"title": "%gitlens.inviteToLiveShare.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link-color.svg",
					"light": "images/light/icon-link-color.svg"
				}
			},
			{
				"command": "gitlens.exploreRepoAtRevision",
				"title": "%gitlens.exploreRepoAtRevision.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-folder.svg",
					"light": "images/light/icon-open-folder.svg"
				},
				"enablement": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != git"
			},
			{
				"command": "gitlens.views.exploreRepoAtRevision",
				"title": "%gitlens.views.exploreRepoAtRevision.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-folder.svg",
					"light": "images/light/icon-open-folder.svg"
				}
			},
			{
				"command": "gitlens.fetchRepositories",
				"title": "%gitlens.fetchRepositories.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-sync.svg",
					"light": "images/light/icon-sync.svg"
				}
			},
			{
				"command": "gitlens.pullRepositories",
				"title": "%gitlens.pullRepositories.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-pull.svg",
					"light": "images/light/icon-pull.svg"
				}
			},
			{
				"command": "gitlens.pushRepositories",
				"title": "%gitlens.pushRepositories.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-push.svg",
					"light": "images/light/icon-push.svg"
				}
			},
			{
				"command": "gitlens.views.addRemote",
				"title": "%gitlens.views.addRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-add.svg",
					"light": "images/light/icon-add.svg"
				}
			},
			{
				"command": "gitlens.views.highlightChanges",
				"title": "%gitlens.views.highlightChanges.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.highlightRevisionChanges",
				"title": "%gitlens.views.highlightRevisionChanges.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.restore",
				"title": "%gitlens.views.restore.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-checkout.svg",
					"light": "images/light/icon-checkout.svg"
				}
			},
			{
				"command": "gitlens.views.switchToBranch",
				"title": "%gitlens.views.switchToBranch.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-checkout.svg",
					"light": "images/light/icon-checkout.svg"
				}
			},
			{
				"command": "gitlens.views.switchToCommit",
				"title": "%gitlens.views.switchToCommit.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-checkout.svg",
					"light": "images/light/icon-checkout.svg"
				}
			},
			{
				"command": "gitlens.views.switchToTag",
				"title": "%gitlens.views.switchToTag.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-checkout.svg",
					"light": "images/light/icon-checkout.svg"
				}
			},
			{
				"command": "gitlens.views.copy",
				"title": "%gitlens.views.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.repositories.copy",
				"title": "%gitlens.views.repositories.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.fileHistory.copy",
				"title": "%gitlens.views.fileHistory.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.lineHistory.copy",
				"title": "%gitlens.views.lineHistory.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compare.copy",
				"title": "%gitlens.views.compare.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.search.copy",
				"title": "%gitlens.views.search.copy.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.pruneRemote",
				"title": "%gitlens.views.pruneRemote.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.fetch",
				"title": "%gitlens.views.fetch.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-sync.svg",
					"light": "images/light/icon-sync.svg"
				}
			},
			{
				"command": "gitlens.views.pull",
				"title": "%gitlens.views.pull.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-pull.svg",
					"light": "images/light/icon-pull.svg"
				}
			},
			{
				"command": "gitlens.views.push",
				"title": "%gitlens.views.push.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-push.svg",
					"light": "images/light/icon-push.svg"
				}
			},
			{
				"command": "gitlens.views.pushWithForce",
				"title": "%gitlens.views.pushWithForce.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-push-force.svg",
					"light": "images/light/icon-push-force.svg"
				}
			},
			{
				"command": "gitlens.views.openInTerminal",
				"title": "%gitlens.views.openInTerminal.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.setAsDefault",
				"title": "%gitlens.views.setAsDefault.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.unsetAsDefault",
				"title": "%gitlens.views.unsetAsDefault.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.stageDirectory",
				"title": "%gitlens.views.stageDirectory.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-add.svg",
					"light": "images/light/icon-add.svg"
				}
			},
			{
				"command": "gitlens.views.stageFile",
				"title": "%gitlens.views.stageFile.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-add.svg",
					"light": "images/light/icon-add.svg"
				}
			},
			{
				"command": "gitlens.views.unstageDirectory",
				"title": "%gitlens.views.unstageDirectory.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-minus.svg",
					"light": "images/light/icon-minus.svg"
				}
			},
			{
				"command": "gitlens.views.unstageFile",
				"title": "%gitlens.views.unstageFile.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-minus.svg",
					"light": "images/light/icon-minus.svg"
				}
			},
			{
				"command": "gitlens.views.star",
				"title": "%gitlens.views.star.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-star.svg",
					"light": "images/light/icon-star.svg"
				}
			},
			{
				"command": "gitlens.views.unstar",
				"title": "%gitlens.views.unstar.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-star-filled.svg",
					"light": "images/light/icon-star-filled.svg"
				}
			},
			{
				"command": "gitlens.views.openDirectoryDiff",
				"title": "%gitlens.views.openDirectoryDiff.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openDirectoryDiffWithWorking",
				"title": "%gitlens.views.openDirectoryDiffWithWorking.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openChanges",
				"title": "%gitlens.views.openChanges.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openChangesWithWorking",
				"title": "%gitlens.views.openChangesWithWorking.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-ref-working.svg",
					"light": "images/light/icon-compare-ref-working.svg"
				}
			},
			{
				"command": "gitlens.views.openFile",
				"title": "%gitlens.views.openFile.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-file.svg",
					"light": "images/light/icon-open-file.svg"
				}
			},
			{
				"command": "gitlens.views.openFileRevision",
				"title": "%gitlens.views.openFileRevision.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-open-file.svg",
					"light": "images/light/icon-open-file.svg"
				}
			},
			{
				"command": "gitlens.views.openFileRevisionInRemote",
				"title": "%gitlens.views.openFileRevisionInRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-link.svg",
					"light": "images/light/icon-link.svg"
				}
			},
			{
				"command": "gitlens.views.openChangedFiles",
				"title": "%gitlens.views.openChangedFiles.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openChangedFileDiffs",
				"title": "%gitlens.views.openChangedFileDiffs.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openChangedFileDiffsWithWorking",
				"title": "%gitlens.views.openChangedFileDiffsWithWorking.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.openChangedFileRevisions",
				"title": "%gitlens.views.openChangedFileRevisions.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.applyChanges",
				"title": "%gitlens.views.applyChanges.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.closeRepository",
				"title": "%gitlens.views.closeRepository.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compareAncestryWithWorking",
				"title": "%gitlens.views.compareAncestryWithWorking.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compareWithHead",
				"title": "%gitlens.views.compareWithHead.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-refs.svg",
					"light": "images/light/icon-compare-refs.svg"
				}
			},
			{
				"command": "gitlens.views.compareWithRemote",
				"title": "%gitlens.views.compareWithRemote.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-ref-remote.svg",
					"light": "images/light/icon-compare-ref-remote.svg"
				}
			},
			{
				"command": "gitlens.views.compareWithSelected",
				"title": "%gitlens.views.compareWithSelected.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.selectForCompare",
				"title": "%gitlens.views.selectForCompare.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compareFileWithSelected",
				"title": "%gitlens.views.compareFileWithSelected.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.selectFileForCompare",
				"title": "%gitlens.views.selectFileForCompare.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compareWithWorking",
				"title": "%gitlens.views.compareWithWorking.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-ref-working.svg",
					"light": "images/light/icon-compare-ref-working.svg"
				}
			},
			{
				"command": "gitlens.views.contributors.addAuthors",
				"title": "%gitlens.views.contributors.addAuthors.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-person-add.svg",
					"light": "images/light/icon-person-add.svg"
				}
			},
			{
				"command": "gitlens.views.contributor.addAuthor",
				"title": "%gitlens.views.contributor.addAuthor.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-person-add.svg",
					"light": "images/light/icon-person-add.svg"
				}
			},
			{
				"command": "gitlens.views.contributor.copyToClipboard",
				"title": "%gitlens.views.contributor.copyToClipboard.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-copy.svg",
					"light": "images/light/icon-copy.svg"
				}
			},
			{
				"command": "gitlens.views.setComparisonToTwoDot",
				"title": "%gitlens.views.setComparisonToTwoDot.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-twodot.svg",
					"light": "images/light/icon-compare-twodot.svg"
				}
			},
			{
				"command": "gitlens.views.setComparisonToThreeDot",
				"title": "%gitlens.views.setComparisonToThreeDot.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-threedot.svg",
					"light": "images/light/icon-compare-threedot.svg"
				}
			},
			{
				"command": "gitlens.views.cherryPick",
				"title": "%gitlens.views.cherryPick.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.createBranch",
				"title": "%gitlens.views.createBranch.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.deleteBranch",
				"title": "%gitlens.views.deleteBranch.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.renameBranch",
				"title": "%gitlens.views.renameBranch.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.createTag",
				"title": "%gitlens.views.createTag.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.deleteTag",
				"title": "%gitlens.views.deleteTag.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.mergeBranchInto",
				"title": "%gitlens.views.mergeBranchInto.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.rebaseOntoBranch",
				"title": "%gitlens.views.rebaseOntoBranch.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.rebaseOntoCommit",
				"title": "%gitlens.views.rebaseOntoCommit.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.rebaseOntoUpstream",
				"title": "%gitlens.views.rebaseOntoUpstream.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.reset",
				"title": "%gitlens.views.reset.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.revert",
				"title": "%gitlens.views.revert.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.terminalPushCommit",
				"title": "%gitlens.views.terminalPushCommit.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.terminalRemoveRemote",
				"title": "%gitlens.views.terminalRemoveRemote.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.repositories.refresh",
				"title": "%gitlens.views.repositories.refresh.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setBranchComparisonToWorking",
				"title": "%gitlens.views.repositories.setBranchComparisonToWorking.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-ref-working.svg",
					"light": "images/light/icon-compare-ref-working.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setBranchComparisonToBranch",
				"title": "%gitlens.views.repositories.setBranchComparisonToBranch.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-refs.svg",
					"light": "images/light/icon-compare-refs.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setBranchesLayoutToList",
				"title": "%gitlens.views.repositories.setBranchesLayoutToList.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-tree.svg",
					"light": "images/light/icon-view-tree.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setBranchesLayoutToTree",
				"title": "%gitlens.views.repositories.setBranchesLayoutToTree.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-list.svg",
					"light": "images/light/icon-view-list.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToAuto",
				"title": "%gitlens.views.repositories.setFilesLayoutToAuto.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-tree.svg",
					"light": "images/light/icon-view-tree.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToList",
				"title": "%gitlens.views.repositories.setFilesLayoutToList.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-auto.svg",
					"light": "images/light/icon-view-auto.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToTree",
				"title": "%gitlens.views.repositories.setFilesLayoutToTree.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-list.svg",
					"light": "images/light/icon-view-list.svg"
				}
			},
			{
				"command": "gitlens.views.repositories.setAutoRefreshToOn",
				"title": "%gitlens.views.repositories.setAutoRefreshToOn.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.repositories.setAutoRefreshToOff",
				"title": "%gitlens.views.repositories.setAutoRefreshToOff.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.fileHistory.refresh",
				"title": "%gitlens.views.fileHistory.refresh.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.fileHistory.changeBase",
				"title": "%gitlens.views.fileHistory.changeBase.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-history.svg",
					"light": "images/light/icon-history.svg"
				}
			},
			{
				"command": "gitlens.views.fileHistory.setEditorFollowingOn",
				"title": "%gitlens.views.fileHistory.setEditorFollowingOn.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-location.svg",
					"light": "images/light/icon-location.svg"
				}
			},
			{
				"command": "gitlens.views.fileHistory.setEditorFollowingOff",
				"title": "%gitlens.views.fileHistory.setEditorFollowingOff.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-location-filled.svg",
					"light": "images/light/icon-location-filled.svg"
				}
			},
			{
				"command": "gitlens.views.fileHistory.setRenameFollowingOn",
				"title": "%gitlens.views.fileHistory.setRenameFollowingOn.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.fileHistory.setRenameFollowingOff",
				"title": "%gitlens.views.fileHistory.setRenameFollowingOff.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.lineHistory.refresh",
				"title": "%gitlens.views.lineHistory.refresh.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.lineHistory.changeBase",
				"title": "%gitlens.views.lineHistory.changeBase.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-history.svg",
					"light": "images/light/icon-history.svg"
				}
			},
			{
				"command": "gitlens.views.lineHistory.setEditorFollowingOn",
				"title": "%gitlens.views.lineHistory.setEditorFollowingOn.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-location.svg",
					"light": "images/light/icon-location.svg"
				}
			},
			{
				"command": "gitlens.views.lineHistory.setEditorFollowingOff",
				"title": "%gitlens.views.lineHistory.setEditorFollowingOff.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-location-filled.svg",
					"light": "images/light/icon-location-filled.svg"
				}
			},
			{
				"command": "gitlens.views.lineHistory.setRenameFollowingOn",
				"title": "%gitlens.views.lineHistory.setRenameFollowingOn.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.lineHistory.setRenameFollowingOff",
				"title": "%gitlens.views.lineHistory.setRenameFollowingOff.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.compare.selectForCompare",
				"title": "%gitlens.views.compare.selectForCompare.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-compare-refs.svg",
					"light": "images/light/icon-compare-refs.svg"
				}
			},
			{
				"command": "gitlens.views.compare.clear",
				"title": "%gitlens.views.compare.clear.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-clear.svg",
					"light": "images/light/icon-clear.svg"
				}
			},
			{
				"command": "gitlens.views.compare.refresh",
				"title": "%gitlens.views.compare.refresh.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.compare.setFilesLayoutToAuto",
				"title": "%gitlens.views.compare.setFilesLayoutToAuto.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-tree.svg",
					"light": "images/light/icon-view-tree.svg"
				}
			},
			{
				"command": "gitlens.views.compare.setFilesLayoutToList",
				"title": "%gitlens.views.compare.setFilesLayoutToList.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-auto.svg",
					"light": "images/light/icon-view-auto.svg"
				}
			},
			{
				"command": "gitlens.views.compare.setFilesLayoutToTree",
				"title": "%gitlens.views.compare.setFilesLayoutToTree.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-list.svg",
					"light": "images/light/icon-view-list.svg"
				}
			},
			{
				"command": "gitlens.views.compare.setKeepResultsToOn",
				"title": "%gitlens.views.compare.setKeepResultsToOn.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-lock.svg",
					"light": "images/light/icon-lock.svg"
				}
			},
			{
				"command": "gitlens.views.compare.setKeepResultsToOff",
				"title": "%gitlens.views.compare.setKeepResultsToOff.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-locked.svg",
					"light": "images/light/icon-locked.svg"
				}
			},
			{
				"command": "gitlens.views.compare.pinComparison",
				"title": "%gitlens.views.compare.pinComparison.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-pin.svg",
					"light": "images/light/icon-pin.svg"
				}
			},
			{
				"command": "gitlens.views.compare.unpinComparison",
				"title": "%gitlens.views.compare.unpinComparison.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-unpin.svg",
					"light": "images/light/icon-unpin.svg"
				}
			},
			{
				"command": "gitlens.views.compare.swapComparison",
				"title": "%gitlens.views.compare.swapComparison.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-swap.svg",
					"light": "images/light/icon-swap.svg"
				}
			},
			{
				"command": "gitlens.views.search.searchCommits",
				"title": "%gitlens.views.search.searchCommits.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-search.svg",
					"light": "images/light/icon-search.svg"
				}
			},
			{
				"command": "gitlens.views.search.clear",
				"title": "%gitlens.views.search.clear.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-clear.svg",
					"light": "images/light/icon-clear.svg"
				}
			},
			{
				"command": "gitlens.views.search.refresh",
				"title": "%gitlens.views.search.refresh.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.search.setFilesLayoutToAuto",
				"title": "%gitlens.views.search.setFilesLayoutToAuto.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-tree.svg",
					"light": "images/light/icon-view-tree.svg"
				}
			},
			{
				"command": "gitlens.views.search.setFilesLayoutToList",
				"title": "%gitlens.views.search.setFilesLayoutToList.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-auto.svg",
					"light": "images/light/icon-view-auto.svg"
				}
			},
			{
				"command": "gitlens.views.search.setFilesLayoutToTree",
				"title": "%gitlens.views.search.setFilesLayoutToTree.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-view-list.svg",
					"light": "images/light/icon-view-list.svg"
				}
			},
			{
				"command": "gitlens.views.search.setKeepResultsToOn",
				"title": "%gitlens.views.search.setKeepResultsToOn.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-lock.svg",
					"light": "images/light/icon-lock.svg"
				}
			},
			{
				"command": "gitlens.views.search.setKeepResultsToOff",
				"title": "%gitlens.views.search.setKeepResultsToOff.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-locked.svg",
					"light": "images/light/icon-locked.svg"
				}
			},
			{
				"command": "gitlens.views.dismissNode",
				"title": "%gitlens.views.dismissNode.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-close.svg",
					"light": "images/light/icon-close.svg"
				}
			},
			{
				"command": "gitlens.views.expandNode",
				"title": "%gitlens.views.expandNode.title%",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.refreshNode",
				"title": "%gitlens.views.refreshNode.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-refresh.svg",
					"light": "images/light/icon-refresh.svg"
				}
			},
			{
				"command": "gitlens.views.showMoreChildren",
				"title": "%gitlens.views.showMoreChildren.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-unfold.svg",
					"light": "images/light/icon-unfold.svg"
				}
			},
			{
				"command": "gitlens.views.showAllChildren",
				"title": "%gitlens.views.showAllChildren.title%",
				"category": "GitLens",
				"icon": {
					"dark": "images/dark/icon-unfold.svg",
					"light": "images/light/icon-unfold.svg"
				}
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "gitlens.showSettingsPage#repositories-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage#file-history-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage#line-history-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage#search-commits-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage#compare-view",
					"when": "false"
				},
				{
					"command": "gitlens.showCompareView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showFileHistoryView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showLineHistoryView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showRepositoriesView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showSearchView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.diffDirectory",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.diffDirectoryWithHead",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.diffHeadWith",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.diffWorkingWith",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.diffWithRef",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffWithNextInDiffLeft",
					"when": "gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffRight",
					"when": "gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffLineWithPrevious",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "gitlens:activeFileStatus =~ /revision/"
				},
				{
					"command": "gitlens.diffLineWithWorking",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.externalDiffAll",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.clearFileAnnotations",
					"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"
				},
				{
					"command": "gitlens.computingFileAnnotations",
					"when": "false"
				},
				{
					"command": "gitlens.toggleFileHeatmap",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.toggleFileRecentChanges",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.toggleLineBlame",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleCodeLens",
					"when": "gitlens:enabled && gitlens:canToggleCodeLens"
				},
				{
					"command": "gitlens.gitCommands",
					"when": "gitlens:enabled && !gitlens:readonly"
				},
				{
					"command": "gitlens.switchMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleReviewMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleZenMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showLastQuickPick",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.showCommitInView",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.showCommitsInView",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.showQuickCommitDetails",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.showQuickCommitFileDetails",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.showQuickRevisionDetails",
					"when": "gitlens:activeFileStatus =~ /revision/"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.showQuickBranchHistory",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickRepoHistory",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickRepoStatus",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickStashList",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "gitlens:activeFileStatus =~ /blameable/"
				},
				{
					"command": "gitlens.closeUnchangedFiles",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openChangedFiles",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openBranchesInRemote",
					"when": "gitlens:hasRemotes"
				},
				{
					"command": "gitlens.openBranchInRemote",
					"when": "gitlens:hasRemotes"
				},
				{
					"command": "gitlens.openCommitInRemote",
					"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"
				},
				{
					"command": "gitlens.openFileRevision",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.openFileRevisionFrom",
					"when": "gitlens:activeFileStatus =~ /tracked/"
				},
				{
					"command": "gitlens.openRepoInRemote",
					"when": "gitlens:hasRemotes"
				},
				{
					"command": "gitlens.openRevisionFile",
					"when": "gitlens:activeFileStatus =~ /revision/"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "gitlens:activeFileStatus =~ /revision/"
				},
				{
					"command": "gitlens.stashApply",
					"when": "gitlens:enabled && !gitlens:readonly"
				},
				{
					"command": "gitlens.stashDelete",
					"when": "false"
				},
				{
					"command": "gitlens.stashSave",
					"when": "gitlens:enabled && !gitlens:readonly"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "false"
				},
				{
					"command": "gitlens.resetSuppressedWarnings",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "false"
				},
				{
					"command": "gitlens.exploreRepoAtRevision",
					"when": "gitlens:activeFileStatus =~ /revision/"
				},
				{
					"command": "gitlens.views.exploreRepoAtRevision",
					"when": "false"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly"
				},
				{
					"command": "gitlens.pushRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.highlightChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.highlightRevisionChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.restore",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.pruneRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "false"
				},
				{
					"command": "gitlens.views.pull",
					"when": "false"
				},
				{
					"command": "gitlens.views.push",
					"when": "false"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "false"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "false"
				},
				{
					"command": "gitlens.views.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.unsetAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "false"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.star",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.openDirectoryDiff",
					"when": "false"
				},
				{
					"command": "gitlens.views.openDirectoryDiffWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "false"
				},
				{
					"command": "gitlens.views.openFileRevisionInRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFiles",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffs",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileRevisions",
					"when": "false"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.closeRepository",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareAncestryWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithSelected",
					"when": "false"
				},
				{
					"command": "gitlens.views.selectForCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareFileWithSelected",
					"when": "false"
				},
				{
					"command": "gitlens.views.selectFileForCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.addAuthors",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributor.addAuthor",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributor.copyToClipboard",
					"when": "false"
				},
				{
					"command": "gitlens.views.setComparisonToTwoDot",
					"when": "false"
				},
				{
					"command": "gitlens.views.setComparisonToThreeDot",
					"when": "false"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.renameBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.cherryPick",
					"when": "false"
				},
				{
					"command": "gitlens.views.mergeBranchInto",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoUpstream",
					"when": "false"
				},
				{
					"command": "gitlens.views.reset",
					"when": "false"
				},
				{
					"command": "gitlens.views.revert",
					"when": "false"
				},
				{
					"command": "gitlens.views.terminalPushCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.terminalRemoveRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.changeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.changeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setRenameFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setRenameFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.selectForCompare",
					"when": "gitlens:enabled && config.gitlens.views.compare.enabled"
				},
				{
					"command": "gitlens.views.compare.clear",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.setKeepResultsToOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.setKeepResultsToOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.pinComparison",
					"when": "false"
				},
				{
					"command": "gitlens.views.compare.unpinComparison",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.searchCommits",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.clear",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.setKeepResultsToOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.search.setKeepResultsToOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.expandNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.showMoreChildren",
					"when": "false"
				},
				{
					"command": "gitlens.views.showAllChildren",
					"when": "false"
				}
			],
			"editor/context": [
				{
					"command": "gitlens.showQuickCommitFileDetails",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote",
					"group": "2_gitlens_remote@1"
				},
				{
					"command": "gitlens.openCommitInRemote",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote",
					"group": "2_gitlens_remote@2"
				},
				{
					"command": "gitlens.diffLineWithPrevious",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare",
					"group": "3_compare@1"
				},
				{
					"command": "gitlens.diffLineWithWorking",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare",
					"group": "3_compare@2"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history",
					"group": "4_gitlens@1"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history",
					"group": "4_gitlens@2"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
					"group": "9_cutcopypaste_gitlens@1"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
					"group": "9_cutcopypaste_gitlens@2"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard",
					"group": "9_cutcopypaste_gitlens@3"
				}
			],
			"editor/title": [
				{
					"command": "gitlens.exploreRepoAtRevision",
					"when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/",
					"group": "navigation@-100"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/",
					"group": "navigation@-99"
				},
				{
					"command": "gitlens.openRevisionFile",
					"when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/ && isInDiffEditor",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme =~ /^(?!(file|git)$).*$/",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"alt": "gitlens.diffWithRevision",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
					"group": "navigation@97"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"alt": "gitlens.diffWithRevision",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffLeftEditor",
					"group": "navigation@97"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffRight",
					"alt": "gitlens.diffWithRevision",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
					"group": "navigation@97"
				},
				{
					"command": "gitlens.showQuickRevisionDetails",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.diffWithNextInDiffLeft",
					"when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare && isInDiffLeftEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"alt": "gitlens.toggleFileHeatmap",
					"when": "gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
					"group": "navigation@100"
				},
				{
					"command": "gitlens.computingFileAnnotations",
					"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame",
					"group": "navigation@100"
				},
				{
					"command": "gitlens.clearFileAnnotations",
					"when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame",
					"group": "navigation@100"
				}
			],
			"editor/title/context": [
				{
					"command": "gitlens.openRevisionFile",
					"when": "resourceScheme == gitlens",
					"group": "1_co_gitlens@1"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "resourceScheme == gitlens",
					"group": "1_co_gitlens@2"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote",
					"group": "1_co_gitlens@3"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "gitlens:enabled && config.gitlens.menus.editorTab.compare",
					"group": "1_co_gitlens_1@1"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "gitlens:enabled && config.gitlens.menus.editorTab.compare",
					"group": "1_co_gitlens_1@2"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "resourceScheme == gitlens && config.gitlens.menus.editorTab.compare",
					"group": "1_co_gitlens_1@3"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "gitlens:enabled && config.gitlens.menus.editorTab.history",
					"group": "1_co_gitlens_2@1"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "gitlens:enabled && config.gitlens.menus.editorTab.history",
					"group": "1_co_gitlens_2@2"
				},
				{
					"command": "gitlens.exploreRepoAtRevision",
					"when": "resourceScheme == gitlens",
					"group": "1_co_gitlens_3@1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard",
					"group": "1_cutcopypaste@100"
				}
			],
			"explorer/context": [
				{
					"command": "gitlens.openFileInRemote",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote",
					"group": "1_gitlens@100"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare",
					"group": "3_compare@-2"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare",
					"group": "3_compare@-1"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history",
					"group": "4_gitlens@1"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history",
					"group": "4_gitlens@2"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard",
					"group": "6_copypath@100"
				}
			],
			"scm/resourceGroup/context": [
				{
					"command": "gitlens.stashSave",
					"when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline",
					"group": "inline@-1"
				},
				{
					"command": "gitlens.stashSave",
					"when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash",
					"group": "1_modification@100"
				},
				{
					"command": "gitlens.openChangedFiles",
					"when": "gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.closeUnchangedFiles",
					"when": "gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.externalDiffAll",
					"when": "gitlens:enabled && config.gitlens.menus.scmGroup.compare",
					"group": "3_gitlens@3"
				},
				{
					"command": "gitlens.diffDirectoryWithHead",
					"when": "gitlens:enabled && config.gitlens.menus.scmGroup.compare",
					"group": "3_gitlens@4"
				}
			],
			"scm/resourceState/context": [
				{
					"command": "gitlens.openFileInRemote",
					"when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote",
					"group": "navigation"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
					"group": "navigation"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffWithRef",
					"when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "gitlens:enabled && config.gitlens.menus.scmItem.history",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "gitlens:enabled && config.gitlens.menus.scmItem.history",
					"group": "1_gitlens_1@2"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash",
					"group": "1_modification@-1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard",
					"group": "9_gitlens@1"
				}
			],
			"view/title": [
				{
					"command": "gitlens.pushRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == auto",
					"group": "navigation@13"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == list",
					"group": "navigation@13"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.files.layout == tree",
					"group": "navigation@13"
				},
				{
					"command": "gitlens.views.repositories.refresh",
					"when": "view =~ /^gitlens\\.views\\.repositories:/",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOn",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOff",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.fileHistory.changeBase",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.fileHistory.refresh",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOn",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames",
					"group": "1_gitlens"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOff",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames",
					"group": "1_gitlens"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOn",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOff",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.lineHistory.changeBase",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.lineHistory.refresh",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.lineHistory.setRenameFollowingOn",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames",
					"group": "1_gitlens"
				},
				{
					"command": "gitlens.views.lineHistory.setRenameFollowingOff",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames",
					"group": "1_gitlens"
				},
				{
					"command": "gitlens.views.compare.selectForCompare",
					"when": "view =~ /^gitlens\\.views\\.compare:/",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.compare.setKeepResultsToOn",
					"when": "view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.compare.setKeepResultsToOff",
					"when": "view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToList",
					"when": "view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == auto",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToTree",
					"when": "view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == list",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.compare.setFilesLayoutToAuto",
					"when": "view =~ /^gitlens\\.views\\.compare:/ && config.gitlens.views.compare.files.layout == tree",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.compare.clear",
					"when": "view =~ /^gitlens\\.views\\.compare:/",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.compare.refresh",
					"when": "view =~ /^gitlens\\.views\\.compare:/",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.search.searchCommits",
					"when": "view =~ /^gitlens\\.views\\.search:/",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.search.setKeepResultsToOn",
					"when": "view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.search.setKeepResultsToOff",
					"when": "view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToList",
					"when": "view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == auto",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToTree",
					"when": "view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == list",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.search.setFilesLayoutToAuto",
					"when": "view =~ /^gitlens\\.views\\.search:/ && config.gitlens.views.search.files.layout == tree",
					"group": "navigation@12"
				},
				{
					"command": "gitlens.views.search.clear",
					"when": "view =~ /^gitlens\\.views\\.search:/",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.search.refresh",
					"when": "view =~ /^gitlens\\.views\\.search:/",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.supportGitLens",
					"when": "view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.showSettingsPage#repositories-view",
					"when": "view =~ /^gitlens\\.views\\.repositories:/",
					"group": "9_gitlens"
				},
				{
					"command": "gitlens.showSettingsPage#file-history-view",
					"when": "view =~ /^gitlens\\.views\\.fileHistory:/",
					"group": "9_gitlens"
				},
				{
					"command": "gitlens.showSettingsPage#line-history-view",
					"when": "view =~ /^gitlens\\.views\\.lineHistory:/",
					"group": "9_gitlens"
				},
				{
					"command": "gitlens.showSettingsPage#search-commits-view",
					"when": "view =~ /^gitlens\\.views\\.search:/",
					"group": "9_gitlens"
				},
				{
					"command": "gitlens.showSettingsPage",
					"when": "view =~ /^gitlens\\.views\\.compare:/",
					"group": "9_gitlens"
				}
			],
			"view/item/context": [
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToList",
					"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToTree",
					"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list",
					"group": "inline@1"
				},
				{
					"command": "gitlens.openBranchesInRemote",
					"when": "viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.openBranchesInRemote",
					"when": "viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+ahead\\b)/",
					"group": "inline@8",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+behind\\b)/",
					"group": "inline@9"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b/",
					"group": "inline@10"
				},
				{
					"command": "gitlens.views.compareWithRemote",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/",
					"group": "inline@98",
					"alt": "gitlens.views.compareWithWorking"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.mergeBranchInto",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.rebaseOntoBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.views.rebaseOntoUpstream",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.views.deleteBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@5"
				},
				{
					"command": "gitlens.views.renameBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b/",
					"group": "1_gitlens_actions@6"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b/",
					"group": "1_gitlens_actions@7"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b/",
					"group": "1_gitlens_actions@8"
				},
				{
					"command": "gitlens.views.openDirectoryDiffWithWorking",
					"when": "viewItem =~ /gitlens:(branch|tag)\\b/",
					"group": "3_gitlens_explore@20"
				},
				{
					"command": "gitlens.views.compareWithRemote",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/",
					"group": "4_gitlens_compare@1"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "viewItem =~ /gitlens:(branch\\b(?!.*?\\b\\+current\\b)|commit\\b|stash\\b|tag\\b)/",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
					"group": "4_gitlens_compare@3"
				},
				{
					"command": "gitlens.views.compareAncestryWithWorking",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "4_gitlens_compare@4"
				},
				{
					"command": "gitlens.views.compareWithSelected",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare",
					"group": "4_gitlens_compare@98"
				},
				{
					"command": "gitlens.views.selectForCompare",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
					"group": "4_gitlens_compare@99"
				},
				{
					"command": "gitlens.views.compareFileWithSelected",
					"when": "viewItem =~ /gitlens:file\\b/ && gitlens:views:canCompare:file",
					"group": "4_gitlens_compare@98"
				},
				{
					"command": "gitlens.views.selectFileForCompare",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "4_gitlens_compare@99"
				},
				{
					"command": "gitlens.openBranchInRemote",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.contributors.addAuthors",
					"when": "viewItem =~ /gitlens:contributors\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.contributors.addAuthors",
					"when": "viewItem =~ /gitlens:contributors\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.contributor.addAuthor",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.contributor.copyToClipboard",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "gitlens:vsls && gitlens:vsls != guest && viewItem =~ /gitlens:contributor\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.contributor.addAuthor",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.contributor.copyToClipboard",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:commit\\b/",
					"group": "inline@98",
					"alt": "gitlens.copyMessageToClipboard"
				},
				{
					"command": "gitlens.openCommitInRemote",
					"when": "viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.cherryPick",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.revert",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.reset",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.switchToCommit",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.views.rebaseOntoCommit",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
					"group": "1_gitlens_actions@5"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.views.openChangedFileDiffs",
					"when": "viewItem =~ /gitlens:(commit|stash|results:files)\\b/",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorking",
					"when": "viewItem =~ /gitlens:(commit|stash|results:files)\\b/",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.openChangedFiles",
					"when": "viewItem =~ /gitlens:(commit|stash|results:files)\\b/",
					"group": "2_gitlens_quickopen_@1"
				},
				{
					"command": "gitlens.views.openChangedFileRevisions",
					"when": "viewItem =~ /gitlens:(commit|stash|results:files)\\b/",
					"group": "2_gitlens_quickopen_@2"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "viewItem =~ /gitlens:commit\\b/",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.showCommitInView",
					"when": "viewItem =~ /gitlens:commit\\b/",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.openCommitInRemote",
					"when": "viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.views.terminalPushCommit",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/",
					"group": "6_gitlens_terminal@1"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))\\b/",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "viewItem =~ /gitlens:(commit|stash|file\\b(?=.*?\\b\\+committed\\b))\\b/",
					"group": "7_gitlens_cutcopypaste@2"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+history\\b)/",
					"group": "inline@1",
					"alt": "gitlens.views.openFileRevision"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+history\\b)/",
					"group": "inline@1",
					"alt": "gitlens.views.openFile"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/",
					"group": "inline@98",
					"alt": "gitlens.copyMessageToClipboard"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "viewItem =~ /gitlens:(file\\b(?!.*?\\b\\+(un)?staged\\b)|history:(file|line))\\b/ && gitlens:hasRemotes",
					"group": "inline@99",
					"alt": "gitlens.copyRemoteFileUrlToClipboard"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.openChanges",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "2_gitlens_quickopen@3"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/",
					"group": "2_gitlens_quickopen_@1"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/",
					"group": "2_gitlens_quickopen_@2"
				},
				{
					"command": "gitlens.views.highlightChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.views.highlightRevisionChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.showFileHistoryInView",
					"when": "viewItem =~ /gitlens:file\\b/",
					"group": "3_gitlens_explore@4"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "viewItem =~ /gitlens:file\\b(?!(:stash|:status))/",
					"group": "3_gitlens_explore@3"
				},
				{
					"command": "gitlens.showCommitInView",
					"when": "viewItem =~ /gitlens:file\\b(?!(:stash|:status))/",
					"group": "3_gitlens_explore@4"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.views.openFileRevisionInRemote",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && gitlens:hasRemotes",
					"group": "5_gitlens_open@2"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes",
					"group": "7_gitlens_cutcopypaste@3"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.restore",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/",
					"group": "8_gitlens_actions@2"
				},
				{
					"command": "gitlens.openFileInRemote",
					"when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes",
					"group": "5_gitlens_open@2"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "!gitlens:readonly && viewItem == gitlens:file:stash",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.restore",
					"when": "!gitlens:readonly && viewItem == gitlens:file:stash",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remotes\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remotes\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.openRepoInRemote",
					"when": "viewItem =~ /gitlens:remote\\b/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pruneRemote",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.openRepoInRemote",
					"when": "viewItem =~ /gitlens:remote\\b/",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.openBranchesInRemote",
					"when": "viewItem =~ /gitlens:remote\\b/",
					"group": "5_gitlens_open@2"
				},
				{
					"command": "gitlens.views.terminalRemoveRemote",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
					"group": "6_gitlens_terminal@1"
				},
				{
					"command": "gitlens.views.setAsDefault",
					"when": "viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unsetAsDefault",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.exploreRepoAtRevision",
					"when": "viewItem =~ /gitlens:(branch|commit|file\\b((?=.*?\\b\\+committed\\b)|:results)|stash|tag)\\b/",
					"group": "3_gitlens_explore@10"
				},
				{
					"command": "gitlens.views.push",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "inline@95",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "viewItem =~ /gitlens:repository\\b/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pull",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "viewItem =~ /gitlens:repository\\b/",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.openRepoInRemote",
					"when": "viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "viewItem =~ /gitlens:repository\\b/",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.stashSave",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
					"group": "8_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+starred\\b)/",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.closeRepository",
					"when": "viewItem =~ /gitlens:repository\\b/",
					"group": "8_gitlens_actions_@2"
				},
				{
					"command": "gitlens.views.push",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
					"group": "inline@1",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.pull",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.setComparisonToTwoDot",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.setComparisonToThreeDot",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToWorking",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToBranch",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.setComparisonToTwoDot",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+threedot\\b)/",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.setComparisonToThreeDot",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+twodot\\b)/",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToWorking",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+branch\\b)/",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.repositories.setBranchComparisonToBranch",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)(?=.*?\\b\\+working\\b)/",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.setComparisonToTwoDot",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.setComparisonToThreeDot",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.compare.swapComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b/",
					"group": "inline@3"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results)\\b/",
					"group": "inline@4"
				},
				{
					"command": "gitlens.views.compare.pinComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.compare.unpinComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.openDirectoryDiff",
					"when": "viewItem =~ /gitlens:compare:results\\b/",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.setComparisonToTwoDot",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+threedot\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.setComparisonToThreeDot",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+twodot\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.compare.swapComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.compare.pinComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b(?!.*?\\b\\+pinned\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.compare.unpinComparison",
					"when": "viewItem =~ /gitlens:compare:results\\b(?=.*?\\b\\+pinned\\b)/",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.search.searchCommits",
					"when": "viewItem == gitlens:search:results",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem == gitlens:search:results",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.search.searchCommits",
					"when": "viewItem == gitlens:search:results",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashSave",
					"when": "!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.stashApply",
					"when": "!gitlens:readonly && viewItem == gitlens:stashes",
					"group": "inline@99"
				},
				{
					"command": "gitlens.stashSave",
					"when": "!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "!gitlens:readonly && viewItem == gitlens:stashes",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.stashApply",
					"when": "!gitlens:readonly && viewItem == gitlens:stash",
					"group": "inline@98"
				},
				{
					"command": "gitlens.stashDelete",
					"when": "!gitlens:readonly && viewItem == gitlens:stash",
					"group": "inline@99"
				},
				{
					"command": "gitlens.stashApply",
					"when": "!gitlens:readonly && viewItem == gitlens:stash",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashDelete",
					"when": "!gitlens:readonly && viewItem == gitlens:stash",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:tag\\b/",
					"group": "inline@10"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:tag\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.deleteTag",
					"when": "!gitlens:readonly && viewItem == gitlens:tag",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "!gitlens:readonly && viewItem =~ /gitlens:tag\\b/",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\b\\+pinned\\b)|search)\\b(?!:(commits|files))/",
					"group": "8_gitlens_actions@98"
				},
				{
					"command": "gitlens.views.expandNode",
					"when": "viewItem =~ /gitlens:(branch|compare|folder|results|search|status)\\b/",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem =~ /gitlens:(?!file\\b)/",
					"group": "9_gitlens@99"
				},
				{
					"command": "gitlens.views.showAllChildren",
					"when": "viewItem =~ /gitlens:pager\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.showAllChildren",
					"when": "viewItem =~ /gitlens:pager\\b/",
					"group": "1_gitlens_actions@1"
				}
			]
		},
		"keybindings": [
			{
				"command": "gitlens.key.left",
				"key": "left",
				"when": "gitlens:key:left"
			},
			{
				"command": "gitlens.key.alt+left",
				"key": "alt+left",
				"when": "gitlens:key:alt+left"
			},
			{
				"command": "gitlens.key.ctrl+left",
				"key": "ctrl+left",
				"mac": "cmd+left",
				"when": "gitlens:key:ctrl+left"
			},
			{
				"command": "gitlens.key.right",
				"key": "right",
				"when": "gitlens:key:right"
			},
			{
				"command": "gitlens.key.alt+right",
				"key": "alt+right",
				"when": "gitlens:key:alt+right"
			},
			{
				"command": "gitlens.key.ctrl+right",
				"key": "ctrl+right",
				"mac": "cmd+right",
				"when": "gitlens:key:ctrl+right"
			},
			{
				"command": "gitlens.key.alt+,",
				"key": "alt+,",
				"when": "gitlens:key:,"
			},
			{
				"command": "gitlens.key.alt+.",
				"key": "alt+.",
				"when": "gitlens:key:."
			},
			{
				"command": "gitlens.key.escape",
				"key": "escape",
				"when": "gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"key": "alt+b",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"key": "shift+alt+b",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"
			},
			{
				"command": "gitlens.showLastQuickPick",
				"key": "alt+-",
				"when": "config.gitlens.keymap == alternate && gitlens:enabled"
			},
			{
				"command": "gitlens.showCommitSearch",
				"key": "alt+/",
				"when": "config.gitlens.keymap == alternate && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"key": "alt+h",
				"when": "config.gitlens.keymap == alternate && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"key": "shift+alt+h",
				"when": "config.gitlens.keymap == alternate && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"key": "alt+s",
				"when": "config.gitlens.keymap == alternate && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"key": "alt+c",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"key": "shift+alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
			},
			{
				"command": "gitlens.diffWithWorking",
				"key": "shift+alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /revision/"
			},
			{
				"command": "gitlens.diffLineWithWorking",
				"key": "alt+w",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"key": "ctrl+shift+g b",
				"mac": "cmd+alt+g b",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"key": "ctrl+shift+g shift+b",
				"mac": "cmd+alt+g shift+b",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"
			},
			{
				"command": "gitlens.showLastQuickPick",
				"key": "ctrl+shift+g -",
				"mac": "cmd+alt+g -",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.showCommitSearch",
				"key": "ctrl+shift+g /",
				"mac": "cmd+alt+g /",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"key": "ctrl+shift+g h",
				"mac": "cmd+alt+g h",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"key": "ctrl+shift+g shift+h",
				"mac": "cmd+alt+g shift+h",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"key": "ctrl+shift+g s",
				"mac": "cmd+alt+g s",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"key": "ctrl+shift+g c",
				"mac": "cmd+alt+g c",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "ctrl+shift+g .",
				"mac": "cmd+alt+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "ctrl+shift+g .",
				"mac": "cmd+alt+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"key": "ctrl+shift+g .",
				"mac": "cmd+alt+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/ && isInDiffLeftEditor"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "ctrl+shift+g ,",
				"mac": "cmd+alt+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "ctrl+shift+g ,",
				"mac": "cmd+alt+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffLeftEditor"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"key": "ctrl+shift+g ,",
				"mac": "cmd+alt+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/ && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"key": "ctrl+shift+g shift+,",
				"mac": "cmd+alt+g shift+,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
			},
			{
				"command": "gitlens.diffWithWorking",
				"key": "ctrl+shift+g shift+.",
				"mac": "cmd+alt+g shift+.",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /revision/"
			},
			{
				"command": "gitlens.diffLineWithWorking",
				"key": "ctrl+shift+g w",
				"mac": "cmd+alt+g w",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
			},
			{
				"command": "workbench.view.scm",
				"key": "ctrl+shift+g g",
				"mac": "ctrl+shift+g",
				"when": "config.gitlens.keymap == chorded && gitlens:enabled"
			},
			{
				"command": "gitlens.views.repositories.copy",
				"key": "ctrl+c",
				"mac": "cmd+c",
				"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
			},
			{
				"command": "gitlens.views.fileHistory.copy",
				"key": "ctrl+c",
				"mac": "cmd+c",
				"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
			},
			{
				"command": "gitlens.views.lineHistory.copy",
				"key": "ctrl+c",
				"mac": "cmd+c",
				"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
			},
			{
				"command": "gitlens.views.compare.copy",
				"key": "ctrl+c",
				"mac": "cmd+c",
				"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.compare/"
			},
			{
				"command": "gitlens.views.search.copy",
				"key": "ctrl+c",
				"mac": "cmd+c",
				"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.search/"
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "gitlens",
				"authority": "*",
				"formatting": {
					"label": "${path} (${authority})",
					"separator": "/"
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gitlens",
					"title": "GitLens",
					"icon": "images/gitlens-activitybar.svg"
				}
			]
		},
		"views": {
			"gitlens": [
				{
					"id": "gitlens.views.repositories:gitlens",
					"name": "%gitlens.views.repositories:gitlens.name%",
					"when": "config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens",
					"contextualTitle": "GitLens",
					"icon": "images/views/repositories.svg"
				},
				{
					"id": "gitlens.views.fileHistory:gitlens",
					"name": "%gitlens.views.fileHistory:gitlens.name%",
					"when": "config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.lineHistory:gitlens",
					"name": "%gitlens.views.lineHistory:gitlens.name%",
					"when": "config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.compare:gitlens",
					"name": "%gitlens.views.compare:gitlens.name%",
					"when": "config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens",
					"contextualTitle": "GitLens",
					"icon": "images/views/compare.svg"
				},
				{
					"id": "gitlens.views.search:gitlens",
					"name": "%gitlens.views.search:gitlens.name%",
					"when": "config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens",
					"contextualTitle": "GitLens",
					"icon": "images/views/search.svg"
				}
			],
			"explorer": [
				{
					"id": "gitlens.views.repositories:explorer",
					"name": "%gitlens.views.repositories:explorer.name%",
					"when": "gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer",
					"contextualTitle": "GitLens",
					"icon": "images/views/repositories.svg"
				},
				{
					"id": "gitlens.views.fileHistory:explorer",
					"name": "%gitlens.views.fileHistory:explorer.name%",
					"when": "gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.lineHistory:explorer",
					"name": "%gitlens.views.lineHistory:explorer.name%",
					"when": "gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.compare:explorer",
					"name": "%gitlens.views.compare:explorer.name%",
					"when": "gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer",
					"contextualTitle": "GitLens",
					"icon": "images/views/compare.svg"
				},
				{
					"id": "gitlens.views.search:explorer",
					"name": "%gitlens.views.search:explorer.name%",
					"when": "gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer",
					"contextualTitle": "GitLens",
					"icon": "images/views/search.svg"
				}
			],
			"scm": [
				{
					"id": "gitlens.views.repositories:scm",
					"name": "%gitlens.views.repositories:scm.name%",
					"when": "gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm",
					"contextualTitle": "GitLens",
					"icon": "images/views/repositories.svg"
				},
				{
					"id": "gitlens.views.fileHistory:scm",
					"name": "%gitlens.views.fileHistory:scm.name%",
					"when": "gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.lineHistory:scm",
					"name": "%gitlens.views.lineHistory:scm.name%",
					"when": "gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm",
					"contextualTitle": "GitLens",
					"icon": "images/views/history.svg"
				},
				{
					"id": "gitlens.views.compare:scm",
					"name": "%gitlens.views.compare:scm.name%",
					"when": "gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm",
					"contextualTitle": "GitLens",
					"icon": "images/views/compare.svg"
				},
				{
					"id": "gitlens.views.search:scm",
					"name": "%gitlens.views.search:scm.name%",
					"when": "gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm",
					"contextualTitle": "GitLens",
					"icon": "images/views/search.svg"
				}
			]
		}
	},
	"scripts": {
		"analyze:bundle": "webpack --env.analyzeBundle",
		"analyze:deps": "webpack --env.analyzeDeps",
		"build": "webpack --env.development",
		"bundle": "webpack --env.production",
		"clean": "git clean -Xdf -e !node_modules -e !node_modules/**/*",
		"lint": "eslint src/**/*.ts --fix",
		"pack": "vsce package --yarn",
		"pretty": "prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\"",
		"pub": "vsce publish --yarn",
		"rebuild": "yarn run reset && yarn run build",
		"reset": "yarn run clean && yarn --frozen-lockfile",
		"watch": "webpack --watch --env.development --info-verbosity verbose",
		"webviews:optimize": "webpack --config-name webviews --env.optimizeImages",
		"webviews:watch": "webpack --watch --config-name webviews --env.development --info-verbosity verbose",
		"update:emoji": "pushd emoji && node ./shortcodeToEmoji.js && popd",
		"vscode:prepublish": "yarn run bundle"
	},
	"dependencies": {
		"dayjs": "1.8.17",
		"iconv-lite": "0.5.0",
		"lodash-es": "4.17.15",
		"vsls": "0.3.1291"
	},
	"devDependencies": {
		"@types/lodash-es": "4.17.3",
		"@types/node": "10.14.22",
		"@types/vscode": "1.37.0",
		"@typescript-eslint/eslint-plugin": "2.7.0",
		"@typescript-eslint/parser": "2.7.0",
		"circular-dependency-plugin": "5.2.0",
		"clean-webpack-plugin": "3.0.0",
		"csp-html-webpack-plugin": "3.0.4",
		"css-loader": "3.2.0",
		"eslint": "6.6.0",
		"eslint-cli": "1.1.1",
		"eslint-config-prettier": "6.6.0",
		"eslint-plugin-import": "2.18.2",
		"fork-ts-checker-webpack-plugin": "3.1.0",
		"html-webpack-exclude-assets-plugin": "0.0.7",
		"html-webpack-inline-source-plugin": "0.0.10",
		"html-webpack-plugin": "3.2.0",
		"imagemin-webpack-plugin": "2.4.2",
		"mini-css-extract-plugin": "0.8.0",
		"node-sass": "4.13.0",
		"prettier": "1.19.1",
		"sass-loader": "8.0.0",
		"terser-webpack-plugin": "2.2.1",
		"ts-loader": "6.2.1",
		"typescript": "3.7.2",
		"vsce": "1.69.0",
		"webpack": "4.41.2",
		"webpack-bundle-analyzer": "3.6.0",
		"webpack-cli": "3.3.10"
	}
}
