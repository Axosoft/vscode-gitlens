{
    "name": "gitlens",
    "displayName": "GitLens — Git supercharged",
    "description": "Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more",
    "version": "9.5.1",
    "author": {
        "name": "Eric Amodio",
        "email": "eamodio@gmail.com"
    },
    "publisher": "eamodio",
    "license": "SEE LICENSE IN LICENSE",
    "homepage": "https://github.com/eamodio/vscode-gitlens/blob/master/README.md",
    "bugs": {
        "url": "https://github.com/eamodio/vscode-gitlens/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/eamodio/vscode-gitlens.git"
    },
    "engines": {
        "vscode": "^1.30.0"
    },
    "main": "./dist/extension",
    "icon": "images/gitlens-icon.png",
    "preview": false,
    "badges": [
        {
            "url": "https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack",
            "href": "https://join.slack.com/t/vscode-dev-community/shared_invite/enQtMjIxOTgxNDE3NzM0LWU5M2ZiZDU1YjBlMzdlZjA2YjBjYzRhYTM5NTgzMTAxMjdiNWU0ZmQzYWI3MWU5N2Q1YjBiYmQ4MzY0NDE1MzY",
            "description": "Join us in the #gitlens channel"
        }
    ],
    "categories": [
        "Other"
    ],
    "galleryBanner": {
        "color": "#8647ae",
        "theme": "dark"
    },
    "keywords": [
        "gitlens",
        "git",
        "blame",
        "log",
        "annotation",
        "multi-root ready"
    ],
    "activationEvents": [
        "*"
    ],
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "GitLens",
            "properties": {
                "gitlens.blame.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.blame.avatars%",
                    "scope": "window"
                },
                "gitlens.blame.compact": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.blame.compact%",
                    "scope": "window"
                },
                "gitlens.blame.dateFormat": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "%ext.configuration.blame.dateFormat%",
                    "scope": "window"
                },
                "gitlens.blame.format": {
                    "type": "string",
                    "default": "${message|40?} ${agoOrDate|14-}",
                    "markdownDescription": "%ext.configuration.blame.format%",
                    "scope": "window"
                },
                "gitlens.blame.heatmap.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.blame.heatmap.enabled%",
                    "scope": "window"
                },
                "gitlens.blame.heatmap.location": {
                    "type": "string",
                    "default": "right",
                    "enum": [
                        "left",
                        "right"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.blame.heatmap.location-left%",
                        "%ext.configuration.blame.heatmap.location-right%"
                    ],
                    "markdownDescription": "%ext.configuration.blame.heatmap.location%",
                    "scope": "window"
                },
                "gitlens.blame.highlight.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "Specifies whether to highlight lines associated with the current line",
                    "scope": "window"
                },
                "gitlens.blame.highlight.locations": {
                    "type": "array",
                    "default": [
                        "gutter",
                        "line",
                        "overview"
                    ],
                    "items": {
                        "type": "string",
                        "enum": [
                            "gutter",
                            "line",
                            "overview"
                        ],
                        "enumDescriptions": [
                            "%ext.configuration.blame.highlight.locations-gutter%",
                            "%ext.configuration.blame.highlight.locations-line%",
                            "%ext.configuration.blame.highlight.locations-overview%"
                        ]
                    },
                    "minItems": 1,
                    "maxItems": 3,
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.blame.highlight.locations%",
                    "scope": "window"
                },
                "gitlens.blame.ignoreWhitespace": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.blame.ignoreWhitespace%",
                    "scope": "resource"
                },
                "gitlens.blame.separateLines": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.blame.separateLines%",
                    "scope": "window"
                },
                "gitlens.blame.toggleMode": {
                    "type": "string",
                    "default": "file",
                    "enum": [
                        "file",
                        "window"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.blame.toggleMode-file%",
                        "%ext.configuration.blame.toggleMode-window%"
                    ],
                    "markdownDescription": "%ext.configuration.blame.toggleMode%",
                    "scope": "window"
                },
                "gitlens.codeLens.authors.command": {
                    "type": "string",
                    "default": "gitlens.toggleFileBlame",
                    "enum": [
                        "gitlens.toggleFileBlame",
                        "gitlens.diffWithPrevious",
                        "gitlens.showQuickCommitDetails",
                        "gitlens.showQuickCommitFileDetails",
                        "gitlens.showQuickFileHistory",
                        "gitlens.showQuickRepoHistory"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.codeLens.authors.command-toggleFileBlame%",
                        "%ext.configuration.codeLens.authors.command-diffWithPrevious%",
                        "%ext.configuration.codeLens.authors.command-showQuickCommitDetails%",
                        "%ext.configuration.codeLens.authors.command-showQuickCommitFileDetails%",
                        "%ext.configuration.codeLens.authors.command-showQuickFileHistory%",
                        "%ext.configuration.codeLens.authors.command-showQuickRepoHistory%"
                    ],
                    "markdownDescription": "%ext.configuration.codeLens.authors.command%",
                    "scope": "window"
                },
                "gitlens.codeLens.authors.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.codeLens.authors.enabled%",
                    "scope": "window"
                },
                "gitlens.codeLens.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.codeLens.enabled%",
                    "scope": "window"
                },
                "gitlens.codeLens.includeSingleLineSymbols": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.codeLens.includeSingleLineSymbols%",
                    "scope": "window"
                },
                "gitlens.codeLens.recentChange.command": {
                    "type": "string",
                    "default": "gitlens.showQuickCommitFileDetails",
                    "enum": [
                        "gitlens.toggleFileBlame",
                        "gitlens.diffWithPrevious",
                        "gitlens.showQuickCommitDetails",
                        "gitlens.showQuickCommitFileDetails",
                        "gitlens.showQuickFileHistory",
                        "gitlens.showQuickRepoHistory"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.codeLens.recentChange.command-toggleFileBlame%",
                        "%ext.configuration.codeLens.recentChange.command-diffWithPrevious",
                        "%ext.configuration.codeLens.recentChange.command-showQuickCommitDetails",
                        "%ext.configuration.codeLens.recentChange.command-showQuickCommitFileDetails%",
                        "%ext.configuration.codeLens.recentChange.command-showQuickFileHistory%",
                        "%ext.configuration.codeLens.recentChange.command-showQuickRepoHistory%"
                    ],
                    "markdownDescription": "%ext.configuration.codeLens.recentChange.command%",
                    "scope": "window"
                },
                "gitlens.codeLens.recentChange.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.codeLens.recentChange.enabled%",
                    "scope": "window"
                },
                "gitlens.codeLens.scopes": {
                    "type": "array",
                    "default": [
                        "document",
                        "containers"
                    ],
                    "items": {
                        "type": "string",
                        "enum": [
                            "document",
                            "containers",
                            "blocks"
                        ],
                        "enumDescriptions": [
                            "%ext.configuration.codeLens.scopes-document%",
                            "%ext.configuration.codeLens.scopes-containers%",
                            "%ext.configuration.codeLens.scopes-blocks"
                        ]
                    },
                    "minItems": 1,
                    "maxItems": 4,
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.codeLens.scopes%",
                    "scope": "resource"
                },
                "gitlens.codeLens.scopesByLanguage": {
                    "type": "array",
                    "default": [
                        {
                            "language": "azure-pipelines",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "css",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "html",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "json",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "jsonc",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "less",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "postcss",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "python",
                            "symbolScopes": [
                                "!Module"
                            ]
                        },
                        {
                            "language": "scss",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "stylus",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "vue",
                            "scopes": [
                                "document"
                            ]
                        },
                        {
                            "language": "yaml",
                            "scopes": [
                                "document"
                            ]
                        }
                    ],
                    "items": {
                        "type": "object",
                        "required": [
                            "language"
                        ],
                        "properties": {
                            "language": {
                                "type": "string",
                                "description": "%ext.configuration.codeLens.scopesByLanguage-language%"
                            },
                            "scopes": {
                                "type": "array",
                                "default": [
                                    "document",
                                    "containers"
                                ],
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "document",
                                        "containers",
                                        "blocks",
                                        "custom"
                                    ],
                                    "enumDescriptions": [
                                        "%ext.configuration.codeLens.scopesByLanguage-scopes-document%",
                                        "%ext.configuration.codeLens.scopesByLanguage-scopes-containers%",
                                        "%ext.configuration.codeLens.scopesByLanguage-scopes-blocks",
                                        "%ext.configuration.codeLens.scopesByLanguage-scopes-custom%"
                                    ]
                                },
                                "minItems": 1,
                                "maxItems": 4,
                                "uniqueItems": true,
                                "description": "%ext.configuration.codeLens.scopesByLanguage-scopes"
                            },
                            "symbolScopes": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "uniqueItems": true,
                                "description": "%ext.configuration.codeLens.scopesByLanguage-symbolScopes%"
                            }
                        }
                    },
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.codeLens.scopesByLanguage%",
                    "scope": "resource"
                },
                "gitlens.codeLens.symbolScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.codeLens.symbolScopes%",
                    "scope": "resource"
                },
                "gitlens.currentLine.dateFormat": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "%ext.configuration.currentLine.dateFormat%",
                    "scope": "window"
                },
                "gitlens.currentLine.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.currentLine.enabled%",
                    "scope": "window"
                },
                "gitlens.currentLine.format": {
                    "type": "string",
                    "default": "${authorAgoOrDate} • ${message}",
                    "markdownDescription": "%ext.configuration.currentLine.format%",
                    "scope": "window"
                },
                "gitlens.currentLine.scrollable": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.currentLine.scrollable%",
                    "scope": "window"
                },
                "gitlens.debug": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.debug%",
                    "scope": "window"
                },
                "gitlens.defaultDateFormat": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "%ext.configuration.defaultDateFormat%",
                    "scope": "window"
                },
                "gitlens.defaultDateShortFormat": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "%ext.configuration.defaultDateShortFormat%",
                    "scope": "window"
                },
                "gitlens.defaultDateStyle": {
                    "type": "string",
                    "default": "relative",
                    "enum": [
                        "relative",
                        "absolute"
                    ],
                    "enumDescriptions": [
                        "e.g. 1 day ago",
                        "e.g. July 25th, 2018 7:18pm"
                    ],
                    "markdownDescription": "%ext.configuration.defaultDateStyle%",
                    "scope": "window"
                },
                "gitlens.defaultGravatarsStyle": {
                    "type": "string",
                    "default": "robohash",
                    "enum": [
                        "identicon",
                        "mp",
                        "monsterid",
                        "retro",
                        "robohash",
                        "wavatar"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.defaultGravatarsStyle-identicon%",
                        "%ext.configuration.defaultGravatarsStyle-mp%",
                        "%ext.configuration.defaultGravatarsStyle-monsterid%",
                        "%ext.configuration.defaultGravatarsStyle-retro%",
                        "%ext.configuration.defaultGravatarsStyle-robohash%",
                        "%ext.configuration.defaultGravatarsStyle-wavatar%"
                    ],
                    "markdownDescription": "%ext.configuration.defaultGravatarsStyle%",
                    "scope": "window"
                },
                "gitlens.heatmap.ageThreshold": {
                    "type": "string",
                    "default": "90",
                    "markdownDescription": "%ext.configuration.heatmap.ageThreshold%",
                    "scope": "window"
                },
                "gitlens.heatmap.coldColor": {
                    "type": "string",
                    "default": "#0a60f6",
                    "markdownDescription": "%ext.configuration.heatmap.coldColor%",
                    "scope": "window"
                },
                "gitlens.heatmap.hotColor": {
                    "type": "string",
                    "default": "#f66a0a",
                    "markdownDescription": "%ext.configuration.heatmap.hotColor%",
                    "scope": "window"
                },
                "gitlens.heatmap.toggleMode": {
                    "type": "string",
                    "default": "file",
                    "enum": [
                        "file",
                        "window"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.heatmap.toggleMode-file%",
                        "%ext.configuration.heatmap.toggleMode-window%"
                    ],
                    "markdownDescription": "%ext.configuration.heatmap.toggleMode%",
                    "scope": "window"
                },
                "gitlens.hovers.annotations.changes": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.annotations.changes%",
                    "scope": "window"
                },
                "gitlens.hovers.annotations.details": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.annotations.details%",
                    "scope": "window"
                },
                "gitlens.hovers.annotations.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.annotations.enabled%",
                    "scope": "window"
                },
                "gitlens.hovers.annotations.over": {
                    "type": "string",
                    "default": "line",
                    "enum": [
                        "annotation",
                        "line"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.hovers.annotations.over-annotation%",
                        "%ext.configuration.hovers.annotations.over-line%"
                    ],
                    "markdownDescription": "%ext.configuration.hovers.annotations.over%",
                    "scope": "window"
                },
                "gitlens.hovers.currentLine.changes": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.currentLine.changes%",
                    "scope": "window"
                },
                "gitlens.hovers.currentLine.details": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.currentLine.details%",
                    "scope": "window"
                },
                "gitlens.hovers.currentLine.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.currentLine.enabled%",
                    "scope": "window"
                },
                "gitlens.hovers.currentLine.over": {
                    "type": "string",
                    "default": "annotation",
                    "enum": [
                        "annotation",
                        "line"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.hovers.currentLine.over-annotation%",
                        "%ext.configuration.hovers.currentLine.over-line%"
                    ],
                    "markdownDescription": "%ext.configuration.hovers.currentLine.over%",
                    "scope": "window"
                },
                "gitlens.hovers.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.avatars%",
                    "scope": "window"
                },
                "gitlens.hovers.detailsMarkdownFormat": {
                    "type": "string",
                    "default": "[${avatar} &nbsp;__${author}__](mailto:${email}), ${ago} &nbsp; _(${date})_ ${message}\n\n${commands}",
                    "markdownDescription": "%ext.configuration.hovers.detailsMarkdownFormat%",
                    "scope": "window"
                },
                "gitlens.hovers.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.hovers.enabled%",
                    "scope": "window"
                },
                "gitlens.insiders": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.insiders%",
                    "scope": "window"
                },
                "gitlens.keymap": {
                    "type": "string",
                    "default": "chorded",
                    "enum": [
                        "alternate",
                        "chorded",
                        "none"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.keymap-alternate%",
                        "%ext.configuration.keymap-chorded%",
                        "%ext.configuration.keymap-none%"
                    ],
                    "markdownDescription": "%ext.configuration.keymap%",
                    "scope": "window"
                },
                "gitlens.liveshare.allowGuestAccess": {
                    "type": "boolean",
                    "default": true,
                    "description": "%ext.configuration.liveshare.allowGuestAccess%",
                    "scope": "window"
                },
                "gitlens.menus": {
                    "anyOf": [
                        {
                            "enum": [
                                false
                            ]
                        },
                        {
                            "type": "object",
                            "properties": {
                                "editor": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "blame": {
                                                    "type": "boolean"
                                                },
                                                "clipboard": {
                                                    "type": "boolean"
                                                },
                                                "compare": {
                                                    "type": "boolean"
                                                },
                                                "details": {
                                                    "type": "boolean"
                                                },
                                                "history": {
                                                    "type": "boolean"
                                                },
                                                "remote": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "editorGroup": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "blame": {
                                                    "type": "boolean"
                                                },
                                                "compare": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "editorTab": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "clipboard": {
                                                    "type": "boolean"
                                                },
                                                "compare": {
                                                    "type": "boolean"
                                                },
                                                "history": {
                                                    "type": "boolean"
                                                },
                                                "remote": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "explorer": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "clipboard": {
                                                    "type": "boolean"
                                                },
                                                "compare": {
                                                    "type": "boolean"
                                                },
                                                "history": {
                                                    "type": "boolean"
                                                },
                                                "remote": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "scmGroup": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "compare": {
                                                    "type": "boolean"
                                                },
                                                "openClose": {
                                                    "type": "boolean"
                                                },
                                                "stash": {
                                                    "type": "boolean"
                                                },
                                                "stashInline": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "scmItem": {
                                    "anyOf": [
                                        {
                                            "enum": [
                                                false
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "clipboard": {
                                                    "type": "boolean"
                                                },
                                                "compare": {
                                                    "type": "boolean"
                                                },
                                                "history": {
                                                    "type": "boolean"
                                                },
                                                "remote": {
                                                    "type": "boolean"
                                                },
                                                "stash": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "default": {
                        "editor": {
                            "blame": false,
                            "clipboard": true,
                            "compare": true,
                            "details": false,
                            "history": false,
                            "remote": false
                        },
                        "editorGroup": {
                            "blame": true,
                            "compare": true
                        },
                        "editorTab": {
                            "clipboard": true,
                            "compare": true,
                            "history": true,
                            "remote": true
                        },
                        "explorer": {
                            "clipboard": true,
                            "compare": true,
                            "history": true,
                            "remote": true
                        },
                        "scmGroup": {
                            "compare": true,
                            "openClose": true,
                            "stash": true,
                            "stashInline": true
                        },
                        "scmItem": {
                            "clipboard": true,
                            "compare": true,
                            "history": true,
                            "remote": true,
                            "stash": true
                        }
                    },
                    "markdownDescription": "%ext.configuration.menus%",
                    "scope": "window"
                },
                "gitlens.mode.active": {
                    "type": "string",
                    "markdownDescription": "%ext.configuration.mode.active%",
                    "scope": "window"
                },
                "gitlens.mode.statusBar.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.mode.statusBar.enabled%",
                    "scope": "window"
                },
                "gitlens.mode.statusBar.alignment": {
                    "type": "string",
                    "default": "right",
                    "enum": [
                        "left",
                        "right"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.mode.statusBar.alignment-left%",
                        "%ext.configuration.mode.statusBar.alignment-right%"
                    ],
                    "markdownDescription": "%ext.configuration.mode.statusBar.alignment%",
                    "scope": "window"
                },
                "gitlens.modes": {
                    "type": "object",
                    "properties": {
                        "zen": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.zen.name%"
                                },
                                "statusBarItemName": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.zen.statusBarItemName%"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.zen.description%"
                                },
                                "codeLens": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.zen.codeLens%"
                                },
                                "currentLine": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.zen.currentLine%"
                                },
                                "hovers": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.zen.hovers%"
                                },
                                "statusBar": {
                                    "type": "boolean",
                                    "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
                                },
                                "views": {
                                    "type": "boolean",
                                    "description": "Specifies whether to show any GitLens views when this user-defined mode is active"
                                }
                            }
                        },
                        "review": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.review.name%"
                                },
                                "statusBarItemName": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.review.statusBarItemName%"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "%ext.configuration.modes.review.description%"
                                },
                                "codeLens": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.review.codeLens%"
                                },
                                "currentLine": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.review.currentLine%"
                                },
                                "hovers": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.review.hovers%"
                                },
                                "statusBar": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.review.statusBar%"
                                },
                                "views": {
                                    "type": "boolean",
                                    "description": "%ext.configuration.modes.review.views%"
                                }
                            }
                        }
                    },
                    "additionalProperties": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Specifies the friendly name of this user-defined mode"
                            },
                            "statusBarItemName": {
                                "type": "string",
                                "description": "Specifies the name shown in the status bar when this user-defined mode is active"
                            },
                            "description": {
                                "type": "string",
                                "description": "Specifies the description of this user-defined mode"
                            },
                            "annotations": {
                                "type": "string",
                                "enum": [
                                    "blame",
                                    "heatmap",
                                    "recentChanges"
                                ],
                                "enumDescriptions": [
                                    "Shows the gutter blame annotations",
                                    "Shows the gutter heatmap annotations",
                                    "Shows the recently changed lines annotations"
                                ],
                                "description": "Specifies which (if any) file annotations will be shown when this user-defined mode is active"
                            },
                            "codeLens": {
                                "type": "boolean",
                                "description": "Specifies whether to show any Git code lens when this user-defined mode is active"
                            },
                            "currentLine": {
                                "type": "boolean",
                                "description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active"
                            },
                            "hovers": {
                                "type": "boolean",
                                "description": "Specifies whether to show any hovers when this user-defined mode is active"
                            },
                            "statusBar": {
                                "type": "boolean",
                                "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
                            },
                            "views": {
                                "type": "boolean",
                                "description": "Specifies whether to show any GitLens views when this user-defined mode is active"
                            }
                        }
                    },
                    "default": {
                        "zen": {
                            "name": "Zen",
                            "statusBarItemName": "Zen",
                            "description": "for a zen-like experience, disables many visual features",
                            "codeLens": false,
                            "currentLine": false,
                            "hovers": false,
                            "statusBar": false
                        },
                        "review": {
                            "name": "Review",
                            "statusBarItemName": "Reviewing",
                            "description": "for reviewing code, enables many visual features",
                            "codeLens": true,
                            "currentLine": true,
                            "hovers": true
                        }
                    },
                    "markdownDescription": "Specifies the user-defined GitLens modes",
                    "scope": "window"
                },
                "gitlens.outputLevel": {
                    "type": "string",
                    "default": "errors",
                    "enum": [
                        "silent",
                        "errors",
                        "verbose",
                        "debug"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.outputLevel-silent%",
                        "%ext.configuration.outputLevel-errors%",
                        "%ext.configuration.outputLevel-verbose%",
                        "%ext.configuration.outputLevel-debug%"
                    ],
                    "markdownDescription": "%ext.configuration.outputLevel%",
                    "scope": "window"
                },
                "gitlens.recentChanges.highlight.locations": {
                    "type": "array",
                    "default": [
                        "gutter",
                        "line",
                        "overview"
                    ],
                    "items": {
                        "type": "string",
                        "enum": [
                            "gutter",
                            "line",
                            "overview"
                        ],
                        "enumDescriptions": [
                            "%ext.configuration.recentChanges.highlight.locations-gutter%",
                            "%ext.configuration.recentChanges.highlight.locations-line%",
                            "%ext.configuration.recentChanges.highlight.locations-overview%"
                        ]
                    },
                    "minItems": 1,
                    "maxItems": 3,
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.recentChanges.highlight.locations%",
                    "scope": "window"
                },
                "gitlens.recentChanges.toggleMode": {
                    "type": "string",
                    "default": "file",
                    "enum": [
                        "file",
                        "window"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.recentChanges.toggleMode-file%",
                        "%ext.configuration.recentChanges.toggleMode-window%"
                    ],
                    "markdownDescription": "%ext.configuration.recentChanges.toggleMode%",
                    "scope": "window"
                },
                "gitlens.remotes": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "object",
                        "required": [
                            "type",
                            "domain"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": [
                                    "Bitbucket",
                                    "BitbucketServer",
                                    "Custom",
                                    "GitHub",
                                    "GitLab"
                                ],
                                "description": "Specifies the type of the custom remote service"
                            },
                            "domain": {
                                "type": "string",
                                "description": "Specifies the domain name of the custom remote service"
                            },
                            "name": {
                                "type": "string",
                                "description": "Specifies an optional friendly name for the custom remote service"
                            },
                            "protocol": {
                                "type": "string",
                                "default": "https",
                                "description": "Specifies an optional url protocol for the custom remote service"
                            },
                            "urls": {
                                "type": "object",
                                "required": [
                                    "repository",
                                    "branches",
                                    "branch",
                                    "commit",
                                    "file",
                                    "fileInCommit",
                                    "fileInBranch",
                                    "fileLine",
                                    "fileRange"
                                ],
                                "properties": {
                                    "repository": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.repository%"
                                    },
                                    "branches": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.branches%"
                                    },
                                    "branch": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.branch%"
                                    },
                                    "commit": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.commit%"
                                    },
                                    "file": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.file%"
                                    },
                                    "fileInBranch": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.fileInBranch%"
                                    },
                                    "fileInCommit": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.fileInCommit%"
                                    },
                                    "fileLine": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.fileLine%"
                                    },
                                    "fileRange": {
                                        "type": "string",
                                        "description": "%ext.configuration.remotes.urls.fileRange%"
                                    }
                                }
                            },
                            "description": "%ext.configuration.remotes.urls%"
                        }
                    },
                    "uniqueItems": true,
                    "markdownDescription": "%ext.configuration.remotes%",
                    "scope": "resource"
                },
                "gitlens.settings.mode": {
                    "type": "string",
                    "default": "simple",
                    "enum": [
                        "simple",
                        "advanced"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.settings.mode-simple%",
                        "%ext.configuration.settings.mode-advanced%"
                    ],
                    "markdownDescription": "%ext.configuration.settings.mode%",
                    "scope": "window"
                },
                "gitlens.showWhatsNewAfterUpgrades": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.showWhatsNewAfterUpgrades%",
                    "scope": "window"
                },
                "gitlens.statusBar.alignment": {
                    "type": "string",
                    "default": "right",
                    "enum": [
                        "left",
                        "right"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.statusBar.alignment-left%",
                        "%ext.configuration.statusBar.alignment-right%"
                    ],
                    "markdownDescription": "%ext.configuration.statusBar.alignment%",
                    "scope": "window"
                },
                "gitlens.statusBar.command": {
                    "type": "string",
                    "default": "gitlens.showQuickCommitDetails",
                    "enum": [
                        "gitlens.toggleFileBlame",
                        "gitlens.diffWithPrevious",
                        "gitlens.diffWithWorking",
                        "gitlens.toggleCodeLens",
                        "gitlens.showQuickCommitDetails",
                        "gitlens.showQuickCommitFileDetails",
                        "gitlens.showQuickFileHistory",
                        "gitlens.showQuickRepoHistory"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.statusBar.command-toggleFileBlame%",
                        "%ext.configuration.statusBar.command-diffWithPrevious%",
                        "%ext.configuration.statusBar.command-diffWithWorking%",
                        "%ext.configuration.statusBar.command-toggleCodeLens%",
                        "%ext.configuration.statusBar.command-showQuickCommitDetails%",
                        "%ext.configuration.statusBar.command-showQuickCommitFileDetails%",
                        "%ext.configuration.statusBar.command-showQuickFileHistory%",
                        "%ext.configuration.statusBar.command-showQuickRepoHistory%"
                    ],
                    "markdownDescription": "%ext.configuration.statusBar.command%",
                    "scope": "window"
                },
                "gitlens.statusBar.dateFormat": {
                    "type": "string",
                    "default": null,
                    "markdownDescription": "%ext.configuration.statusBar.dateFormat%",
                    "scope": "window"
                },
                "gitlens.statusBar.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.statusBar.enabled%",
                    "scope": "window"
                },
                "gitlens.statusBar.format": {
                    "type": "string",
                    "default": "${authorAgoOrDate}",
                    "markdownDescription": "%ext.configuration.statusBar.format%",
                    "scope": "window"
                },
                "gitlens.statusBar.reduceFlicker": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.statusBar.reduceFlicker%",
                    "scope": "window"
                },
                "gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
                    "type": "string",
                    "default": "Unsaved changes (cannot determine recent change or authors)",
                    "markdownDescription": "%ext.configuration.strings.codeLens.unsavedChanges.recentChangeAndAuthors%",
                    "scope": "window"
                },
                "gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
                    "type": "string",
                    "default": "Unsaved changes (cannot determine recent change)",
                    "markdownDescription": "%ext.configuration.strings.codeLens.unsavedChanges.recentChangeOnly%",
                    "scope": "window"
                },
                "gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
                    "type": "string",
                    "default": "Unsaved changes (cannot determine authors)",
                    "markdownDescription": "%ext.configuration.strings.codeLens.unsavedChanges.authorsOnly%",
                    "scope": "window"
                },
                "gitlens.views.commitFileFormat": {
                    "type": "string",
                    "default": "${file}",
                    "markdownDescription": "%ext.configuration.views.commitFileFormat%",
                    "scope": "window"
                },
                "gitlens.views.commitFileDescriptionFormat": {
                    "type": "string",
                    "default": "${directory}",
                    "markdownDescription": "%ext.configuration.views.commitFileDescriptionFormat%",
                    "scope": "window"
                },
                "gitlens.views.commitFormat": {
                    "type": "string",
                    "default": "${message}",
                    "markdownDescription": "%ext.configuration.views.commitFormat%",
                    "scope": "window"
                },
                "gitlens.views.commitDescriptionFormat": {
                    "type": "string",
                    "default": "${changes  •  }${authorAgoOrDate}",
                    "markdownDescription": "%ext.configuration.views.commitDescriptionFormat%",
                    "scope": "window"
                },
                "gitlens.views.compare.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.compare.avatars%",
                    "scope": "window"
                },
                "gitlens.views.compare.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.compare.enabled%",
                    "scope": "window"
                },
                "gitlens.views.compare.files.compact": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.compare.files.compact%",
                    "scope": "window"
                },
                "gitlens.views.compare.files.layout": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                        "auto",
                        "list",
                        "tree"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.compare.files.layout-auto%",
                        "%ext.configuration.views.compare.files.layout-list%",
                        "%ext.configuration.views.compare.files.layout-tree%"
                    ],
                    "markdownDescription": "%ext.configuration.views.compare.files.layout%",
                    "scope": "window"
                },
                "gitlens.views.compare.files.threshold": {
                    "type": "number",
                    "default": 5,
                    "markdownDescription": "%ext.configuration.views.compare.files.threshold%",
                    "scope": "window"
                },
                "gitlens.views.compare.location": {
                    "type": "string",
                    "default": "gitlens",
                    "enum": [
                        "gitlens",
                        "explorer",
                        "scm"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.compare.location-gitlens%",
                        "%ext.configuration.views.compare.location-explorer%",
                        "%ext.configuration.views.compare.location-scm%"
                    ],
                    "markdownDescription": "%ext.configuration.views.compare.location%",
                    "scope": "window"
                },
                "gitlens.views.defaultItemLimit": {
                    "type": "number",
                    "default": 10,
                    "markdownDescription": "%ext.configuration.views.defaultItemLimit%",
                    "scope": "window"
                },
                "gitlens.views.fileHistory.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.fileHistory.avatars%",
                    "scope": "window"
                },
                "gitlens.views.fileHistory.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.fileHistory.enabled%",
                    "scope": "window"
                },
                "gitlens.views.fileHistory.location": {
                    "type": "string",
                    "default": "gitlens",
                    "enum": [
                        "gitlens",
                        "explorer",
                        "scm"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.fileHistory.location-gitlens%",
                        "%ext.configuration.views.fileHistory.location-explorer%",
                        "%ext.configuration.views.fileHistory.location-scm%"
                    ],
                    "markdownDescription": "%ext.configuration.views.fileHistory.location%",
                    "scope": "window"
                },
                "gitlens.views.lineHistory.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.lineHistory.avatars%",
                    "scope": "window"
                },
                "gitlens.views.lineHistory.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.lineHistory.enabled%",
                    "scope": "window"
                },
                "gitlens.views.lineHistory.location": {
                    "type": "string",
                    "default": "gitlens",
                    "enum": [
                        "gitlens",
                        "explorer",
                        "scm"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.lineHistory.location-gitlens%",
                        "%ext.configuration.views.lineHistory.location-explorer%",
                        "%ext.configuration.views.lineHistory.location-scm%"
                    ],
                    "markdownDescription": "%ext.configuration.views.lineHistory.location%",
                    "scope": "window"
                },
                "gitlens.views.repositories.autoRefresh": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.autoRefresh%",
                    "scope": "window"
                },
                "gitlens.views.repositories.autoReveal": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.autoReveal%",
                    "scope": "window"
                },
                "gitlens.views.repositories.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.avatars%",
                    "scope": "window"
                },
                "gitlens.views.repositories.branches.layout": {
                    "type": "string",
                    "default": "tree",
                    "enum": [
                        "list",
                        "tree"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.repositories.branches.layout-list%",
                        "%ext.configuration.views.repositories.branches.layout-tree%"
                    ],
                    "markdownDescription": "%ext.configuration.views.repositories.branches.layout%",
                    "scope": "window"
                },
                "gitlens.views.repositories.compact": {
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "%ext.configuration.views.repositories.compact%",
                    "scope": "window"
                },
                "gitlens.views.repositories.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.enabled%",
                    "scope": "window"
                },
                "gitlens.views.repositories.files.compact": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.files.compact%",
                    "scope": "window"
                },
                "gitlens.views.repositories.files.layout": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                        "auto",
                        "list",
                        "tree"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.repositories.files.layout-list%",
                        "%ext.configuration.views.repositories.files.layout-list%",
                        "%ext.configuration.views.repositories.files.layout-tree%"
                    ],
                    "markdownDescription": "%ext.configuration.views.repositories.files.layout%",
                    "scope": "window"
                },
                "gitlens.views.repositories.files.threshold": {
                    "type": "number",
                    "default": 5,
                    "markdownDescription": "%ext.configuration.views.repositories.files.threshold%",
                    "scope": "window"
                },
                "gitlens.views.repositories.includeWorkingTree": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.includeWorkingTree%",
                    "scope": "window"
                },
                "gitlens.views.repositories.location": {
                    "type": "string",
                    "default": "gitlens",
                    "enum": [
                        "gitlens",
                        "explorer",
                        "scm"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.repositories.location-gitlens%",
                        "%ext.configuration.views.repositories.location-explorer%",
                        "%ext.configuration.views.repositories.location-scm%"
                    ],
                    "markdownDescription": "%ext.configuration.views.repositories.location%",
                    "scope": "window"
                },
                "gitlens.views.repositories.showTrackingBranch": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.repositories.showTrackingBranch%",
                    "scope": "window"
                },
                "gitlens.views.search.avatars": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.search.avatars%",
                    "scope": "window"
                },
                "gitlens.views.search.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.search.enabled%",
                    "scope": "window"
                },
                "gitlens.views.search.files.compact": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.search.files.compact%",
                    "scope": "window"
                },
                "gitlens.views.search.files.layout": {
                    "type": "string",
                    "default": "auto",
                    "enum": [
                        "auto",
                        "list",
                        "tree"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.search.files.layout-auto%",
                        "%ext.configuration.views.search.files.layout-list%",
                        "%ext.configuration.views.search.files.layout-tree%"
                    ],
                    "markdownDescription": "%ext.configuration.views.search.files.layout%",
                    "scope": "window"
                },
                "gitlens.views.search.files.threshold": {
                    "type": "number",
                    "default": 5,
                    "markdownDescription": "%ext.configuration.views.search.files.threshold%",
                    "scope": "window"
                },
                "gitlens.views.search.location": {
                    "type": "string",
                    "default": "gitlens",
                    "enum": [
                        "gitlens",
                        "explorer",
                        "scm"
                    ],
                    "enumDescriptions": [
                        "%ext.configuration.views.search.location-gitlens%",
                        "%ext.configuration.views.search.location-explorer%",
                        "%ext.configuration.views.search.location-scm%"
                    ],
                    "markdownDescription": "%ext.configuration.views.search.location%",
                    "scope": "window"
                },
                "gitlens.views.showRelativeDateMarkers": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.views.showRelativeDateMarkers%",
                    "scope": "window"
                },
                "gitlens.views.stashFileFormat": {
                    "type": "string",
                    "default": "${file}",
                    "markdownDescription": "%ext.configuration.views.stashFileFormat%",
                    "scope": "window"
                },
                "gitlens.views.stashFileDescriptionFormat": {
                    "type": "string",
                    "default": "${directory}",
                    "markdownDescription": "%ext.configuration.views.stashFileDescriptionFormat%",
                    "scope": "window"
                },
                "gitlens.views.stashFormat": {
                    "type": "string",
                    "default": "${message}",
                    "markdownDescription": "%ext.configuration.views.stashFormat%",
                    "scope": "window"
                },
                "gitlens.views.stashDescriptionFormat": {
                    "type": "string",
                    "default": "${changes  •  }${agoOrDate}",
                    "markdownDescription": "%ext.configuration.views.stashDescriptionFormat%",
                    "scope": "window"
                },
                "gitlens.views.statusFileFormat": {
                    "type": "string",
                    "default": "${working  }${file}",
                    "markdownDescription": "%ext.configuration.views.statusFileFormat%",
                    "scope": "window"
                },
                "gitlens.views.statusFileDescriptionFormat": {
                    "type": "string",
                    "default": "${directory}",
                    "markdownDescription": "%ext.configuration.views.statusFileDescriptionFormat%",
                    "scope": "window"
                },
                "gitlens.advanced.abbreviatedShaLength": {
                    "type": "number",
                    "default": "7",
                    "markdownDescription": "%ext.configuration.advanced.abbreviatedShaLength%",
                    "scope": "window"
                },
                "gitlens.advanced.blame.customArguments": {
                    "type": "array",
                    "default": null,
                    "items": {
                        "type": "string"
                    },
                    "markdownDescription": "%ext.configuration.advanced.blame.customArguments%",
                    "scope": "resource"
                },
                "gitlens.advanced.blame.delayAfterEdit": {
                    "type": "number",
                    "default": 5000,
                    "markdownDescription": "%ext.configuration.advanced.blame.delayAfterEdit%",
                    "scope": "window"
                },
                "gitlens.advanced.blame.sizeThresholdAfterEdit": {
                    "type": "number",
                    "default": 5000,
                    "markdownDescription": "%ext.configuration.advanced.blame.sizeThresholdAfterEdit%",
                    "scope": "window"
                },
                "gitlens.advanced.caching.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.advanced.caching.enabled%",
                    "scope": "window"
                },
                "gitlens.advanced.fileHistoryFollowsRenames": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.advanced.fileHistoryFollowsRenames%",
                    "scope": "window"
                },
                "gitlens.advanced.maxListItems": {
                    "type": "number",
                    "default": 200,
                    "markdownDescription": "%ext.configuration.advanced.maxListItems%",
                    "scope": "window"
                },
                "gitlens.advanced.messages": {
                    "type": "object",
                    "default": {
                        "suppressCommitHasNoPreviousCommitWarning": false,
                        "suppressCommitNotFoundWarning": false,
                        "suppressFileNotUnderSourceControlWarning": false,
                        "suppressGitDisabledWarning": false,
                        "suppressGitVersionWarning": false,
                        "suppressLineUncommittedWarning": false,
                        "suppressNoRepositoryWarning": false,
                        "suppressSupportGitLensNotification": false
                    },
                    "properties": {
                        "suppressCommitHasNoPreviousCommitWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressCommitNotFoundWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressFileNotUnderSourceControlWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressGitDisabledWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressGitVersionWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressLineUncommittedWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressNoRepositoryWarning": {
                            "type": "boolean",
                            "default": false
                        },
                        "suppressSupportGitLensNotification": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    "markdownDescription": "%ext.configuration.advanced.messages%",
                    "scope": "window"
                },
                "gitlens.advanced.quickPick.closeOnFocusOut": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.advanced.quickPick.closeOnFocusOut%",
                    "scope": "window"
                },
                "gitlens.advanced.repositorySearchDepth": {
                    "type": "number",
                    "default": 1,
                    "markdownDescription": "%ext.configuration.advanced.repositorySearchDepth%",
                    "scope": "resource"
                },
                "gitlens.advanced.telemetry.enabled": {
                    "type": "boolean",
                    "default": true,
                    "markdownDescription": "%ext.configuration.advanced.telemetry.enabled%",
                    "scope": "window"
                }
            }
        },
        "colors": [
            {
                "id": "gitlens.gutterBackgroundColor",
                "description": "%ext.colors.gutterBackgroundColor%",
                "defaults": {
                    "dark": "#FFFFFF13",
                    "light": "#0000000C",
                    "highContrast": "#FFFFFF13"
                }
            },
            {
                "id": "gitlens.gutterForegroundColor",
                "description": "%ext.colors.gutterForegroundColor%",
                "defaults": {
                    "dark": "#BEBEBE",
                    "light": "#747474",
                    "highContrast": "#BEBEBE"
                }
            },
            {
                "id": "gitlens.gutterUncommittedForegroundColor",
                "description": "%ext.colors.gutterUncommittedForegroundColor%",
                "defaults": {
                    "dark": "#00BCF299",
                    "light": "#00BCF299",
                    "highContrast": "#00BCF2FF"
                }
            },
            {
                "id": "gitlens.trailingLineBackgroundColor",
                "description": "%ext.colors.trailingLineBackgroundColor%",
                "defaults": {
                    "dark": "#00000000",
                    "light": "#00000000",
                    "highContrast": "#00000000"
                }
            },
            {
                "id": "gitlens.trailingLineForegroundColor",
                "description": "%ext.colors.trailingLineForegroundColor%",
                "defaults": {
                    "dark": "#99999959",
                    "light": "#99999959",
                    "highContrast": "#99999999"
                }
            },
            {
                "id": "gitlens.lineHighlightBackgroundColor",
                "description": "%ext.colors.lineHighlightBackgroundColor%",
                "defaults": {
                    "dark": "#00BCF233",
                    "light": "#00BCF233",
                    "highContrast": "#00BCF233"
                }
            },
            {
                "id": "gitlens.lineHighlightOverviewRulerColor",
                "description": "%ext.colors.lineHighlightOverviewRulerColor%",
                "defaults": {
                    "dark": "#00BCF299",
                    "light": "#00BCF299",
                    "highContrast": "#00BCF299"
                }
            }
        ],
        "commands": [
            {
                "command": "gitlens.supportGitLens",
                "title": "%ext.commands.supportGitLens%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-heart.svg",
                    "light": "images/light/icon-heart.svg"
                }
            },
            {
                "command": "gitlens.showSettingsPage",
                "title": "%ext.commands.showSettingsPage%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-gear.svg",
                    "light": "images/light/icon-gear.svg"
                }
            },
            {
                "command": "gitlens.showWelcomePage",
                "title": "%ext.commands.showWelcomePage%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showCompareView",
                "title": "%ext.commands.showCompareView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showFileHistoryView",
                "title": "%ext.commands.showFileHistoryView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showLineHistoryView",
                "title": "%ext.commands.showLineHistoryView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showRepositoriesView",
                "title": "%ext.commands.showRepositoriesView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showSearchView",
                "title": "%ext.commands.showSearchView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffDirectory",
                "title": "%ext.commands.diffDirectory%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffDirectoryWithHead",
                "title": "%ext.commands.diffDirectoryWithHead%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffHeadWithBranch",
                "title": "%ext.commands.diffHeadWithBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffWorkingWithBranch",
                "title": "%ext.commands.diffWorkingWithBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffWithBranch",
                "title": "%ext.commands.diffWithBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffWithNext",
                "title": "%ext.commands.diffWithNext%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-next-commit.svg",
                    "light": "images/light/icon-next-commit.svg"
                }
            },
            {
                "command": "gitlens.diffWithPrevious",
                "title": "%ext.commands.diffWithPrevious%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-prev-commit.svg",
                    "light": "images/light/icon-prev-commit.svg"
                }
            },
            {
                "command": "gitlens.diffWithPreviousInDiff",
                "title": "%ext.commands.diffWithPreviousInDiff%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-prev-commit.svg",
                    "light": "images/light/icon-prev-commit.svg"
                }
            },
            {
                "command": "gitlens.diffLineWithPrevious",
                "title": "%ext.commands.diffLineWithPrevious%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.diffWithRevision",
                "title": "%ext.commands.diffWithRevision%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-prev-commit-menu.svg",
                    "light": "images/light/icon-prev-commit-menu.svg"
                }
            },
            {
                "command": "gitlens.diffWithWorking",
                "title": "%ext.commands.diffWithWorking%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-compare-ref-working.svg",
                    "light": "images/light/icon-compare-ref-working.svg"
                }
            },
            {
                "command": "gitlens.diffLineWithWorking",
                "title": "%ext.commands.diffLineWithWorking%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.toggleFileBlame",
                "title": "%ext.commands.toggleFileBlame%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-git.svg",
                    "light": "images/light/icon-git.svg"
                }
            },
            {
                "command": "gitlens.clearFileAnnotations",
                "title": "%ext.commands.clearFileAnnotations%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-git-orange.svg",
                    "light": "images/light/icon-git-orange.svg"
                }
            },
            {
                "command": "gitlens.computingFileAnnotations",
                "title": "%ext.commands.computingFileAnnotations%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-git-progress.svg",
                    "light": "images/light/icon-git-progress.svg"
                }
            },
            {
                "command": "gitlens.toggleFileHeatmap",
                "title": "%ext.commands.toggleFileHeatmap%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-git.svg",
                    "light": "images/light/icon-git.svg"
                }
            },
            {
                "command": "gitlens.toggleFileRecentChanges",
                "title": "%ext.commands.toggleFileRecentChanges%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-git.svg",
                    "light": "images/light/icon-git.svg"
                }
            },
            {
                "command": "gitlens.toggleLineBlame",
                "title": "%ext.commands.toggleLineBlame%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.toggleCodeLens",
                "title": "%ext.commands.toggleCodeLens%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.switchMode",
                "title": "%ext.commands.switchMode%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.toggleReviewMode",
                "title": "%ext.commands.toggleReviewMode%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.toggleZenMode",
                "title": "%ext.commands.toggleZenMode%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showCommitSearch",
                "title": "%ext.commands.showCommitSearch%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-search.svg",
                    "light": "images/light/icon-search.svg"
                }
            },
            {
                "command": "gitlens.showLastQuickPick",
                "title": "%ext.commands.showLastQuickPick%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showCommitInView",
                "title": "%ext.commands.showCommitInView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showFileHistoryInView",
                "title": "%ext.commands.showFileHistoryInView%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickCommitDetails",
                "title": "%ext.commands.showQuickCommitDetails%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickCommitFileDetails",
                "title": "%ext.commands.showQuickCommitFileDetails%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickRevisionDetails",
                "title": "%ext.commands.showQuickRevisionDetails%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-commit.svg",
                    "light": "images/light/icon-commit.svg"
                }
            },
            {
                "command": "gitlens.showQuickFileHistory",
                "title": "%ext.commands.showQuickFileHistory%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickBranchHistory",
                "title": "%ext.commands.showQuickBranchHistory%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickRepoHistory",
                "title": "%ext.commands.showQuickRepoHistory%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickRepoStatus",
                "title": "%ext.commands.showQuickRepoStatus%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.showQuickStashList",
                "title": "%ext.commands.showQuickStashList%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.copyMessageToClipboard",
                "title": "%ext.commands.copyMessageToClipboard%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-clipboard.svg",
                    "light": "images/light/icon-clipboard.svg"
                }
            },
            {
                "command": "gitlens.copyRemoteFileUrlToClipboard",
                "title": "%ext.commands.copyRemoteFileUrlToClipboard%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-copy-remote.svg",
                    "light": "images/light/icon-copy-remote.svg"
                }
            },
            {
                "command": "gitlens.copyShaToClipboard",
                "title": "%ext.commands.copyShaToClipboard%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-copy-commit.svg",
                    "light": "images/light/icon-copy-commit.svg"
                }
            },
            {
                "command": "gitlens.closeUnchangedFiles",
                "title": "%ext.commands.closeUnchangedFiles%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.openChangedFiles",
                "title": "%ext.commands.openChangedFiles%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.openBranchesInRemote",
                "title": "%ext.commands.openBranchesInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.openBranchInRemote",
                "title": "%ext.commands.openBranchInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.openCommitInRemote",
                "title": "%ext.commands.openCommitInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.openFileInRemote",
                "title": "%ext.commands.openFileInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.openFileRevision",
                "title": "%ext.commands.openFileRevision%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.openFileRevisionFromBranch",
                "title": "%ext.commands.openFileRevisionFromBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.openRepoInRemote",
                "title": "%ext.commands.openRepoInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.openWorkingFile",
                "title": "%ext.commands.openWorkingFile%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-open-working-file.svg",
                    "light": "images/light/icon-open-working-file.svg"
                }
            },
            {
                "command": "gitlens.stashApply",
                "title": "%ext.commands.stashApply%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-stash-pop.svg",
                    "light": "images/light/icon-stash-pop.svg"
                }
            },
            {
                "command": "gitlens.stashDelete",
                "title": "%ext.commands.stashDelete%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-delete.svg",
                    "light": "images/light/icon-delete.svg"
                }
            },
            {
                "command": "gitlens.stashSave",
                "title": "%ext.commands.stashSave%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-stash-save.svg",
                    "light": "images/light/icon-stash-save.svg"
                }
            },
            {
                "command": "gitlens.stashSaveFiles",
                "title": "%ext.commands.stashSaveFiles%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-stash-save.svg",
                    "light": "images/light/icon-stash-save.svg"
                }
            },
            {
                "command": "gitlens.externalDiff",
                "title": "%ext.commands.externalDiff%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.externalDiffAll",
                "title": "%ext.commands.externalDiffAll%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.resetSuppressedWarnings",
                "title": "%ext.commands.resetSuppressedWarnings%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.exploreRepoRevision",
                "title": "%ext.commands.exploreRepoRevision%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.fetchRepositories",
                "title": "%ext.commands.fetchRepositories%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-sync.svg",
                    "light": "images/light/icon-sync.svg"
                }
            },
            {
                "command": "gitlens.pullRepositories",
                "title": "%ext.commands.pullRepositories%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-pull.svg",
                    "light": "images/light/icon-pull.svg"
                }
            },
            {
                "command": "gitlens.pushRepositories",
                "title": "%ext.commands.pushRepositories%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-push.svg",
                    "light": "images/light/icon-push.svg"
                }
            },
            {
                "command": "gitlens.views.checkout",
                "title": "%ext.views.checkout%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-checkout.svg",
                    "light": "images/light/icon-checkout.svg"
                }
            },
            {
                "command": "gitlens.views.fetch",
                "title": "%ext.views.fetch%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-sync.svg",
                    "light": "images/light/icon-sync.svg"
                }
            },
            {
                "command": "gitlens.views.pull",
                "title": "%ext.views.pull%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-pull.svg",
                    "light": "images/light/icon-pull.svg"
                }
            },
            {
                "command": "gitlens.views.push",
                "title": "%ext.views.push%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-push.svg",
                    "light": "images/light/icon-push.svg"
                }
            },
            {
                "command": "gitlens.views.pushWithForce",
                "title": "%ext.views.pushWithForce%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-push-force.svg",
                    "light": "images/light/icon-push-force.svg"
                }
            },
            {
                "command": "gitlens.views.openInTerminal",
                "title": "%ext.views.openInTerminal%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.setAsDefault",
                "title": "%ext.views.setAsDefault%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.unsetAsDefault",
                "title": "%ext.views.unsetAsDefault%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.stageDirectory",
                "title": "%ext.views.stageDirectory%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-add.svg",
                    "light": "images/light/icon-add.svg"
                }
            },
            {
                "command": "gitlens.views.stageFile",
                "title": "%ext.views.stageFile%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-add.svg",
                    "light": "images/light/icon-add.svg"
                }
            },
            {
                "command": "gitlens.views.unstageDirectory",
                "title": "%ext.views.unstageDirectory%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-minus.svg",
                    "light": "images/light/icon-minus.svg"
                }
            },
            {
                "command": "gitlens.views.unstageFile",
                "title": "%ext.views.unstageFile%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-minus.svg",
                    "light": "images/light/icon-minus.svg"
                }
            },
            {
                "command": "gitlens.views.star",
                "title": "%ext.views.star%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-star.svg",
                    "light": "images/light/icon-star.svg"
                }
            },
            {
                "command": "gitlens.views.unstar",
                "title": "%ext.views.unstar%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-star-filled.svg",
                    "light": "images/light/icon-star-filled.svg"
                }
            },
            {
                "command": "gitlens.views.openDirectoryDiff",
                "title": "%ext.views.openDirectoryDiff%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openDirectoryDiffWithWorking",
                "title": "%ext.views.openDirectoryDiffWithWorking%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openChanges",
                "title": "%ext.views.openChanges%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openChangesWithWorking",
                "title": "%ext.views.openChangesWithWorking%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openFile",
                "title": "%ext.views.openFile%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-open-file.svg",
                    "light": "images/light/icon-open-file.svg"
                }
            },
            {
                "command": "gitlens.views.openFileRevision",
                "title": "%ext.views.openFileRevision%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openFileRevisionInRemote",
                "title": "%ext.views.openFileRevisionInRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-link.svg",
                    "light": "images/light/icon-link.svg"
                }
            },
            {
                "command": "gitlens.views.openChangedFiles",
                "title": "%ext.views.openChangedFiles%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openChangedFileChanges",
                "title": "%ext.views.openChangedFileChanges%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openChangedFileChangesWithWorking",
                "title": "%ext.views.openChangedFileChangesWithWorking%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.openChangedFileRevisions",
                "title": "%ext.views.openChangedFileRevisions%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.applyChanges",
                "title": "%ext.views.applyChanges%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.closeRepository",
                "title": "%ext.views.closeRepository%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compareAncestryWithWorking",
                "title": "%ext.views.compareAncestryWithWorking%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compareWithHead",
                "title": "%ext.views.compareWithHead%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-compare-refs.svg",
                    "light": "images/light/icon-compare-refs.svg"
                }
            },
            {
                "command": "gitlens.views.compareWithRemote",
                "title": "%ext.views.compareWithRemote%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-compare-ref-remote.svg",
                    "light": "images/light/icon-compare-ref-remote.svg"
                }
            },
            {
                "command": "gitlens.views.compareWithSelected",
                "title": "%ext.views.compareWithSelected%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.selectForCompare",
                "title": "%ext.views.selectForCompare%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compareFileWithSelected",
                "title": "%ext.views.compareFileWithSelected%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.selectFileForCompare",
                "title": "%ext.views.selectFileForCompare%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compareWithWorking",
                "title": "%ext.views.compareWithWorking%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-compare-ref-working.svg",
                    "light": "images/light/icon-compare-ref-working.svg"
                }
            },
            {
                "command": "gitlens.views.terminalCheckoutBranch",
                "title": "%ext.views.terminalCheckoutBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalCreateBranch",
                "title": "%ext.views.terminalCreateBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalDeleteBranch",
                "title": "%ext.views.terminalDeleteBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalMergeBranch",
                "title": "%ext.views.terminalMergeBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalRebaseBranch",
                "title": "%ext.views.terminalRebaseBranch%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalRebaseBranchToRemote",
                "title": "%ext.views.terminalRebaseBranchToRemote%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalSquashBranchIntoCommit",
                "title": "%ext.views.terminalSquashBranchIntoCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalCheckoutCommit",
                "title": "%ext.views.terminalCheckoutCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalCherryPickCommit",
                "title": "%ext.views.terminalCherryPickCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalPushCommit",
                "title": "%ext.views.terminalPushCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalRebaseCommit",
                "title": "%ext.views.terminalRebaseCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalResetCommit",
                "title": "%ext.views.terminalResetCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalRevertCommit",
                "title": "%ext.views.terminalRevertCommit%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalRemoveRemote",
                "title": "%ext.views.terminalRemoveRemote%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalCreateTag",
                "title": "%ext.views.terminalCreateTag%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.terminalDeleteTag",
                "title": "%ext.views.terminalDeleteTag%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.repositories.refresh",
                "title": "%ext.views.repositories.refresh%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            },
            {
                "command": "gitlens.views.repositories.setFilesLayoutToAuto",
                "title": "%ext.views.repositories.setFilesLayoutToAuto%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.repositories.setFilesLayoutToList",
                "title": "%ext.views.repositories.setFilesLayoutToList%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.repositories.setFilesLayoutToTree",
                "title": "%ext.views.repositories.setFilesLayoutToTree%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.repositories.setAutoRefreshToOn",
                "title": "%ext.views.repositories.setAutoRefreshToOn%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.repositories.setAutoRefreshToOff",
                "title": "%ext.views.repositories.setAutoRefreshToOff%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.fileHistory.refresh",
                "title": "%ext.views.fileHistory.refresh%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            },
            {
                "command": "gitlens.views.fileHistory.changeBase",
                "title": "%ext.views.fileHistory.changeBase%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-history.svg",
                    "light": "images/light/icon-history.svg"
                }
            },
            {
                "command": "gitlens.views.fileHistory.setEditorFollowingOn",
                "title": "%ext.views.fileHistory.setEditorFollowingOn%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-location.svg",
                    "light": "images/light/icon-location.svg"
                }
            },
            {
                "command": "gitlens.views.fileHistory.setEditorFollowingOff",
                "title": "%ext.views.fileHistory.setEditorFollowingOff%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-location-filled.svg",
                    "light": "images/light/icon-location-filled.svg"
                }
            },
            {
                "command": "gitlens.views.fileHistory.setRenameFollowingOn",
                "title": "%ext.views.fileHistory.setRenameFollowingOn%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.fileHistory.setRenameFollowingOff",
                "title": "%ext.views.fileHistory.setRenameFollowingOff%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.lineHistory.refresh",
                "title": "%ext.views.lineHistory.refresh%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            },
            {
                "command": "gitlens.views.lineHistory.changeBase",
                "title": "%ext.views.lineHistory.changeBase%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-history.svg",
                    "light": "images/light/icon-history.svg"
                }
            },
            {
                "command": "gitlens.views.lineHistory.setEditorFollowingOn",
                "title": "%ext.views.lineHistory.setEditorFollowingOn%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-location.svg",
                    "light": "images/light/icon-location.svg"
                }
            },
            {
                "command": "gitlens.views.lineHistory.setEditorFollowingOff",
                "title": "%ext.views.lineHistory.setEditorFollowingOff%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-location-filled.svg",
                    "light": "images/light/icon-location-filled.svg"
                }
            },
            {
                "command": "gitlens.views.lineHistory.setRenameFollowingOn",
                "title": "%ext.views.lineHistory.setRenameFollowingOn%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.lineHistory.setRenameFollowingOff",
                "title": "%ext.views.lineHistory.setRenameFollowingOff%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compare.selectForCompare",
                "title": "%ext.views.compare.selectForCompare%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-compare-refs.svg",
                    "light": "images/light/icon-compare-refs.svg"
                }
            },
            {
                "command": "gitlens.views.compare.clear",
                "title": "%ext.views.compare.clear%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-clear.svg",
                    "light": "images/light/icon-clear.svg"
                }
            },
            {
                "command": "gitlens.views.compare.refresh",
                "title": "%ext.views.compare.refresh%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            },
            {
                "command": "gitlens.views.compare.setFilesLayoutToAuto",
                "title": "%ext.views.compare.setFilesLayoutToAuto%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compare.setFilesLayoutToList",
                "title": "%ext.views.compare.setFilesLayoutToList%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compare.setFilesLayoutToTree",
                "title": "%ext.views.compare.setFilesLayoutToTree%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.compare.setKeepResultsToOn",
                "title": "%ext.views.compare.setKeepResultsToOn%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-lock.svg",
                    "light": "images/light/icon-lock.svg"
                }
            },
            {
                "command": "gitlens.views.compare.setKeepResultsToOff",
                "title": "%ext.views.compare.setKeepResultsToOff%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-locked.svg",
                    "light": "images/light/icon-locked.svg"
                }
            },
            {
                "command": "gitlens.views.compare.pinComparison",
                "title": "%ext.views.compare.pinComparison%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-pin-tilted.svg",
                    "light": "images/light/icon-pin-tilted.svg"
                }
            },
            {
                "command": "gitlens.views.compare.unpinComparison",
                "title": "%ext.views.compare.unpinComparison%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-pin-filled.svg",
                    "light": "images/light/icon-pin-filled.svg"
                }
            },
            {
                "command": "gitlens.views.compare.swapComparison",
                "title": "%ext.views.compare.swapComparison%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-swap.svg",
                    "light": "images/light/icon-swap.svg"
                }
            },
            {
                "command": "gitlens.views.search.searchCommits",
                "title": "%ext.views.search.searchCommits%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-search.svg",
                    "light": "images/light/icon-search.svg"
                }
            },
            {
                "command": "gitlens.views.search.clear",
                "title": "%ext.views.search.clear%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-clear.svg",
                    "light": "images/light/icon-clear.svg"
                }
            },
            {
                "command": "gitlens.views.search.refresh",
                "title": "%ext.views.search.refresh%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            },
            {
                "command": "gitlens.views.search.setFilesLayoutToAuto",
                "title": "%ext.views.search.setFilesLayoutToAuto%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.search.setFilesLayoutToList",
                "title": "%ext.views.search.setFilesLayoutToList%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.search.setFilesLayoutToTree",
                "title": "%ext.views.search.setFilesLayoutToTree%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.search.setKeepResultsToOn",
                "title": "%ext.views.search.setKeepResultsToOn%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-lock.svg",
                    "light": "images/light/icon-lock.svg"
                }
            },
            {
                "command": "gitlens.views.search.setKeepResultsToOff",
                "title": "%ext.views.search.setKeepResultsToOff%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-locked.svg",
                    "light": "images/light/icon-locked.svg"
                }
            },
            {
                "command": "gitlens.views.dismissNode",
                "title": "%ext.views.dismissNode%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-close-small.svg",
                    "light": "images/light/icon-close-small.svg"
                }
            },
            {
                "command": "gitlens.views.expandNode",
                "title": "%ext.views.expandNode%",
                "category": "GitLens"
            },
            {
                "command": "gitlens.views.refreshNode",
                "title": "%ext.views.refreshNode%",
                "category": "GitLens",
                "icon": {
                    "dark": "images/dark/icon-refresh.svg",
                    "light": "images/light/icon-refresh.svg"
                }
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "gitlens.showCompareView",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showFileHistoryView",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showLineHistoryView",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showRepositoriesView",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showSearchView",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.diffDirectory",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.diffDirectoryWithHead",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.diffHeadWithBranch",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.diffWorkingWithBranch",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.diffWithBranch",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.diffWithNext",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/"
                },
                {
                    "command": "gitlens.diffWithPrevious",
                    "when": "!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.diffWithPreviousInDiff",
                    "when": "isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.diffLineWithPrevious",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.diffWithRevision",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.diffWithWorking",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.diffLineWithWorking",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.externalDiff",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.externalDiffAll",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.toggleFileBlame",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.clearFileAnnotations",
                    "when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"
                },
                {
                    "command": "gitlens.computingFileAnnotations",
                    "when": "false"
                },
                {
                    "command": "gitlens.toggleFileHeatmap",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.toggleFileRecentChanges",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.toggleLineBlame",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.toggleCodeLens",
                    "when": "gitlens:enabled && gitlens:canToggleCodeLens"
                },
                {
                    "command": "gitlens.switchMode",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.toggleReviewMode",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.toggleZenMode",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showCommitSearch",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showLastQuickPick",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showCommitInView",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.showQuickCommitDetails",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.showQuickCommitFileDetails",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.showQuickRevisionDetails",
                    "when": "gitlens:activeFileStatus =~ /revision/"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.showQuickBranchHistory",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showQuickRepoHistory",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showQuickRepoStatus",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.showQuickStashList",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.copyMessageToClipboard",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"
                },
                {
                    "command": "gitlens.copyShaToClipboard",
                    "when": "gitlens:activeFileStatus =~ /blameable/"
                },
                {
                    "command": "gitlens.closeUnchangedFiles",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.openChangedFiles",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.openBranchesInRemote",
                    "when": "gitlens:hasRemotes"
                },
                {
                    "command": "gitlens.openBranchInRemote",
                    "when": "gitlens:hasRemotes"
                },
                {
                    "command": "gitlens.openCommitInRemote",
                    "when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"
                },
                {
                    "command": "gitlens.openFileRevision",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.openFileRevisionFromBranch",
                    "when": "gitlens:activeFileStatus =~ /tracked/"
                },
                {
                    "command": "gitlens.openRepoInRemote",
                    "when": "gitlens:hasRemotes"
                },
                {
                    "command": "gitlens.openWorkingFile",
                    "when": "gitlens:activeFileStatus =~ /revision/"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "gitlens:enabled && !gitlens:readonly"
                },
                {
                    "command": "gitlens.stashDelete",
                    "when": "false"
                },
                {
                    "command": "gitlens.stashSave",
                    "when": "gitlens:enabled && !gitlens:readonly"
                },
                {
                    "command": "gitlens.stashSaveFiles",
                    "when": "false"
                },
                {
                    "command": "gitlens.resetSuppressedWarnings",
                    "when": "gitlens:enabled"
                },
                {
                    "command": "gitlens.views.exploreRepoRevision",
                    "when": "false"
                },
                {
                    "command": "gitlens.fetchRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly"
                },
                {
                    "command": "gitlens.pullRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly"
                },
                {
                    "command": "gitlens.pushRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly"
                },
                {
                    "command": "gitlens.views.checkout",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fetch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.pull",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.push",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.pushWithForce",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openInTerminal",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.setAsDefault",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.unsetAsDefault",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.stageDirectory",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.stageFile",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.unstageDirectory",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.unstageFile",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.star",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.unstar",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChanges",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openDirectoryDiff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openDirectoryDiffWithWorking",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChangesWithWorking",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openFile",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openFileRevision",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openFileRevisionInRemote",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChangedFiles",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChangedFileChanges",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChangedFileChangesWithWorking",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.openChangedFileRevisions",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.applyChanges",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.closeRepository",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareAncestryWithWorking",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareWithHead",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareWithRemote",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareWithSelected",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.selectForCompare",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareFileWithSelected",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.selectFileForCompare",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compareWithWorking",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalCheckoutBranch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalCreateBranch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalDeleteBranch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalMergeBranch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalRebaseBranch",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalRebaseBranchToRemote",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalSquashBranchIntoCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalCheckoutCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalCherryPickCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalPushCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalRebaseCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalResetCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalRevertCommit",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalRemoveRemote",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalCreateTag",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.terminalDeleteTag",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.refresh",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToAuto",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToList",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToTree",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.setAutoRefreshToOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.repositories.setAutoRefreshToOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.refresh",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.changeBase",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.setEditorFollowingOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.setEditorFollowingOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.setRenameFollowingOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.fileHistory.setRenameFollowingOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.refresh",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.changeBase",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.setEditorFollowingOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.setEditorFollowingOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.setRenameFollowingOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.lineHistory.setRenameFollowingOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.selectForCompare",
                    "when": "gitlens:enabled && gitlens.views.compare.enabled"
                },
                {
                    "command": "gitlens.views.compare.clear",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.refresh",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToAuto",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToList",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToTree",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.setKeepResultsToOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.setKeepResultsToOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.pinComparison",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.unpinComparison",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.compare.swapComparison",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.searchCommits",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.clear",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.refresh",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToAuto",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToList",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToTree",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.setKeepResultsToOn",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.search.setKeepResultsToOff",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.dismissNode",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.expandNode",
                    "when": "false"
                },
                {
                    "command": "gitlens.views.refreshNode",
                    "when": "false"
                }
            ],
            "editor/context": [
                {
                    "command": "gitlens.diffLineWithPrevious",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.diffLineWithWorking",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote",
                    "group": "1_gitlens_1@1"
                },
                {
                    "command": "gitlens.openCommitInRemote",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote",
                    "group": "1_gitlens_1@2"
                },
                {
                    "command": "gitlens.showQuickCommitFileDetails",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details",
                    "group": "1_gitlens_1@3"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history",
                    "group": "3_gitlens@1"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history",
                    "group": "3_gitlens@2"
                },
                {
                    "command": "gitlens.toggleFileBlame",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame",
                    "group": "3_gitlens@3"
                },
                {
                    "command": "gitlens.copyShaToClipboard",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
                    "group": "9_b_gitlens@1"
                },
                {
                    "command": "gitlens.copyMessageToClipboard",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard",
                    "group": "9_b_gitlens@2"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard",
                    "group": "9_b_gitlens@3"
                }
            ],
            "editor/title": [
                {
                    "command": "gitlens.diffWithWorking",
                    "when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git",
                    "group": "navigation@0"
                },
                {
                    "command": "gitlens.openWorkingFile",
                    "when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git",
                    "group": "navigation@0"
                },
                {
                    "command": "gitlens.openWorkingFile",
                    "when": "!gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git && isInDiffEditor",
                    "group": "navigation@0"
                },
                {
                    "command": "gitlens.openWorkingFile",
                    "when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor",
                    "group": "navigation@0"
                },
                {
                    "command": "gitlens.diffWithPrevious",
                    "alt": "gitlens.diffWithRevision",
                    "when": "!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare",
                    "group": "navigation@97"
                },
                {
                    "command": "gitlens.diffWithPreviousInDiff",
                    "alt": "gitlens.diffWithRevision",
                    "when": "isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare",
                    "group": "navigation@97"
                },
                {
                    "command": "gitlens.showQuickRevisionDetails",
                    "when": "gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && config.gitlens.menus.editorGroup.compare",
                    "group": "navigation@98"
                },
                {
                    "command": "gitlens.diffWithNext",
                    "when": "gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.toggleFileBlame",
                    "alt": "gitlens.toggleFileHeatmap",
                    "when": "gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame",
                    "group": "navigation@100"
                },
                {
                    "command": "gitlens.computingFileAnnotations",
                    "when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame",
                    "group": "navigation@100"
                },
                {
                    "command": "gitlens.clearFileAnnotations",
                    "when": "gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame",
                    "group": "navigation@100"
                }
            ],
            "editor/title/context": [
                {
                    "command": "gitlens.openWorkingFile",
                    "when": "resourceScheme == gitlens",
                    "group": "1_co_gitlens@1"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote",
                    "group": "1_co_gitlens@2"
                },
                {
                    "command": "gitlens.diffWithPrevious",
                    "when": "gitlens:enabled && config.gitlens.menus.editorTab.compare",
                    "group": "1_co_gitlens_1@1"
                },
                {
                    "command": "gitlens.diffWithRevision",
                    "when": "gitlens:enabled && config.gitlens.menus.editorTab.compare",
                    "group": "1_co_gitlens_1@2"
                },
                {
                    "command": "gitlens.diffWithWorking",
                    "when": "resourceScheme == gitlens && config.gitlens.menus.editorTab.compare",
                    "group": "1_co_gitlens_1@3"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "gitlens:enabled && config.gitlens.menus.editorTab.history",
                    "group": "1_co_gitlens_2@1"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "gitlens:enabled && config.gitlens.menus.editorTab.history",
                    "group": "1_co_gitlens_2@2"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard",
                    "group": "1_cutcopypaste@100"
                }
            ],
            "explorer/context": [
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote",
                    "group": "navigation@100"
                },
                {
                    "command": "gitlens.diffWithPrevious",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare",
                    "group": "3_compare@1"
                },
                {
                    "command": "gitlens.diffWithRevision",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare",
                    "group": "3_compare@2"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history",
                    "group": "4_gitlens_1@1"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history",
                    "group": "4_gitlens_1@2"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard",
                    "group": "5_cutcopypaste@100"
                }
            ],
            "scm/resourceGroup/context": [
                {
                    "command": "gitlens.stashSave",
                    "when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline",
                    "group": "inline@-1"
                },
                {
                    "command": "gitlens.stashSave",
                    "when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash",
                    "group": "1_modification@100"
                },
                {
                    "command": "gitlens.openChangedFiles",
                    "when": "gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.closeUnchangedFiles",
                    "when": "gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.externalDiffAll",
                    "when": "gitlens:enabled && config.gitlens.menus.scmGroup.compare",
                    "group": "3_gitlens@3"
                },
                {
                    "command": "gitlens.diffDirectoryWithHead",
                    "when": "gitlens:enabled && config.gitlens.menus.scmGroup.compare",
                    "group": "3_gitlens@4"
                }
            ],
            "scm/resourceState/context": [
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote",
                    "group": "navigation"
                },
                {
                    "command": "gitlens.externalDiff",
                    "when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
                    "group": "navigation"
                },
                {
                    "command": "gitlens.diffWithRevision",
                    "when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.diffWithBranch",
                    "when": "gitlens:enabled && config.gitlens.menus.scmItem.compare",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "gitlens:enabled && config.gitlens.menus.scmItem.history",
                    "group": "1_gitlens_1@1"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "gitlens:enabled && config.gitlens.menus.scmItem.history",
                    "group": "1_gitlens_1@2"
                },
                {
                    "command": "gitlens.stashSaveFiles",
                    "when": "gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash",
                    "group": "1_modification@-1"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard",
                    "group": "9_gitlens@1"
                }
            ],
            "view/title": [
                {
                    "command": "gitlens.pushRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.pullRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.fetchRepositories",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "navigation@12"
                },
                {
                    "command": "gitlens.views.repositories.refresh",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToAuto",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToList",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.repositories.setFilesLayoutToTree",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.repositories.setAutoRefreshToOn",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
                    "group": "2_gitlens"
                },
                {
                    "command": "gitlens.views.repositories.setAutoRefreshToOff",
                    "when": "view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
                    "group": "2_gitlens"
                },
                {
                    "command": "gitlens.views.fileHistory.setEditorFollowingOn",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.fileHistory.setEditorFollowingOff",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.fileHistory.changeBase",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.fileHistory.refresh",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.views.fileHistory.setRenameFollowingOn",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.fileHistory.setRenameFollowingOff",
                    "when": "view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.lineHistory.setEditorFollowingOn",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.lineHistory.setEditorFollowingOff",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.lineHistory.changeBase",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.lineHistory.refresh",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.views.lineHistory.setRenameFollowingOn",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.lineHistory.setRenameFollowingOff",
                    "when": "view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.compare.selectForCompare",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.compare.setKeepResultsToOn",
                    "when": "view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.compare.setKeepResultsToOff",
                    "when": "view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.compare.clear",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "navigation@98"
                },
                {
                    "command": "gitlens.views.compare.refresh",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToAuto",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToList",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.compare.setFilesLayoutToTree",
                    "when": "view =~ /^gitlens\\.views\\.compare:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.search.searchCommits",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "navigation@10"
                },
                {
                    "command": "gitlens.views.search.setKeepResultsToOn",
                    "when": "view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.search.setKeepResultsToOff",
                    "when": "view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults",
                    "group": "navigation@11"
                },
                {
                    "command": "gitlens.views.search.clear",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "navigation@98"
                },
                {
                    "command": "gitlens.views.search.refresh",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "navigation@99"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToAuto",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToList",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.views.search.setFilesLayoutToTree",
                    "when": "view =~ /^gitlens\\.views\\.search:/",
                    "group": "1_gitlens"
                },
                {
                    "command": "gitlens.supportGitLens",
                    "when": "view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true",
                    "group": "navigation@1"
                },
                {
                    "command": "gitlens.showSettingsPage",
                    "when": "view =~ /^gitlens\\.views\\..*:/",
                    "group": "9_gitlens"
                }
            ],
            "view/item/context": [
                {
                    "command": "gitlens.openBranchesInRemote",
                    "when": "viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.openBranchesInRemote",
                    "when": "viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.star",
                    "when": "viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.unstar",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/",
                    "group": "inline@2"
                },
                {
                    "command": "gitlens.views.checkout",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "inline@10"
                },
                {
                    "command": "gitlens.views.compareWithRemote",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/",
                    "group": "inline@96"
                },
                {
                    "command": "gitlens.views.compareWithHead",
                    "when": "viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/",
                    "group": "inline@97",
                    "alt": "gitlens.views.compareWithWorking"
                },
                {
                    "command": "gitlens.views.compareWithWorking",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?/",
                    "group": "inline@97"
                },
                {
                    "command": "gitlens.openBranchInRemote",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.views.checkout",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.openBranchInRemote",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.views.compareWithRemote",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/",
                    "group": "7_gitlens@1"
                },
                {
                    "command": "gitlens.views.compareWithHead",
                    "when": "viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/",
                    "group": "7_gitlens@2"
                },
                {
                    "command": "gitlens.views.compareWithWorking",
                    "when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
                    "group": "7_gitlens@3"
                },
                {
                    "command": "gitlens.views.compareAncestryWithWorking",
                    "when": "viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "7_gitlens@4"
                },
                {
                    "command": "gitlens.views.compareWithSelected",
                    "when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare",
                    "group": "7_gitlens_@1"
                },
                {
                    "command": "gitlens.views.selectForCompare",
                    "when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
                    "group": "7_gitlens_@2"
                },
                {
                    "command": "gitlens.views.compareFileWithSelected",
                    "when": "viewItem =~ /gitlens:file:\\b/ && gitlens:views:canCompare:file",
                    "group": "7_gitlens_@1"
                },
                {
                    "command": "gitlens.views.selectFileForCompare",
                    "when": "viewItem =~ /gitlens:file:\\b/",
                    "group": "7_gitlens_@2"
                },
                {
                    "command": "gitlens.views.openDirectoryDiffWithWorking",
                    "when": "viewItem =~ /gitlens:(branch|tag)\\b/",
                    "group": "7_gitlens_more@2"
                },
                {
                    "command": "gitlens.views.terminalCheckoutBranch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)//",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.terminalRebaseBranchToRemote",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?\\+tracking\\b.*?/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.terminalMergeBranch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "8_gitlens@2"
                },
                {
                    "command": "gitlens.views.terminalRebaseBranch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "8_gitlens@3"
                },
                {
                    "command": "gitlens.views.terminalSquashBranchIntoCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "8_gitlens@4"
                },
                {
                    "command": "gitlens.views.terminalCreateBranch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:(branch|commit|tag)\\b/",
                    "group": "8_gitlens@5"
                },
                {
                    "command": "gitlens.views.terminalDeleteBranch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/",
                    "group": "8_gitlens@6"
                },
                {
                    "command": "gitlens.views.terminalCreateTag",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:(branch|commit)\\b/",
                    "group": "8_gitlens@7"
                },
                {
                    "command": "gitlens.views.star",
                    "when": "viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/",
                    "group": "8_gitlens_@1"
                },
                {
                    "command": "gitlens.views.unstar",
                    "when": "viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/",
                    "group": "8_gitlens_@1"
                },
                {
                    "command": "gitlens.openCommitInRemote",
                    "when": "viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.openCommitInRemote",
                    "when": "viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.openChangedFileChanges",
                    "when": "viewItem =~ /gitlens:(commit|stash)\\b/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.views.openChangedFileChangesWithWorking",
                    "when": "viewItem =~ /gitlens:(commit|stash)\\b/",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.views.openChangedFiles",
                    "when": "viewItem =~ /gitlens:(commit|stash)\\b/",
                    "group": "3_gitlens@1"
                },
                {
                    "command": "gitlens.views.openChangedFileRevisions",
                    "when": "viewItem =~ /gitlens:(commit|stash)\\b/",
                    "group": "3_gitlens@2"
                },
                {
                    "command": "gitlens.copyShaToClipboard",
                    "when": "viewItem =~ /gitlens:(file:)?commit\\b/",
                    "group": "inline@98",
                    "alt": "gitlens.copyMessageToClipboard"
                },
                {
                    "command": "gitlens.copyShaToClipboard",
                    "when": "viewItem =~ /gitlens:(file:)?commit\\b/",
                    "group": "5_gitlens@1"
                },
                {
                    "command": "gitlens.copyMessageToClipboard",
                    "when": "viewItem =~ /gitlens:(commit|stash|file:commit)\\b/",
                    "group": "5_gitlens@2"
                },
                {
                    "command": "gitlens.showQuickCommitDetails",
                    "when": "viewItem =~ /gitlens:commit\\b/",
                    "group": "5_gitlens_1@1"
                },
                {
                    "command": "gitlens.showCommitInView",
                    "when": "viewItem =~ /gitlens:commit\\b/",
                    "group": "5_gitlens_1@2"
                },
                {
                    "command": "gitlens.views.terminalCherryPickCommit",
                    "when": "!gitlens:readonly && viewItem == gitlens:commit",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.terminalPushCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/",
                    "group": "8_gitlens@2"
                },
                {
                    "command": "gitlens.views.terminalRevertCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/",
                    "group": "8_gitlens@3"
                },
                {
                    "command": "gitlens.views.terminalCheckoutCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
                    "group": "8_gitlens@4"
                },
                {
                    "command": "gitlens.views.terminalRebaseCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
                    "group": "8_gitlens@5"
                },
                {
                    "command": "gitlens.views.terminalResetCommit",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:commit\\b/",
                    "group": "8_gitlens@6"
                },
                {
                    "command": "gitlens.views.openFile",
                    "when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.stageFile",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.unstageFile",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.stageFile",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.unstageFile",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.stashSaveFiles",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+(un)?staged\\b.*?/",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.views.openChanges",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.externalDiff",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.views.openChangesWithWorking",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "2_gitlens@3"
                },
                {
                    "command": "gitlens.views.openFile",
                    "when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/",
                    "group": "3_gitlens@1"
                },
                {
                    "command": "gitlens.views.openFileRevision",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "3_gitlens@2"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "viewItem =~ /gitlens:(file\\b(?!.*?\\+(un)?staged\\b.*?)|history:(file|line))\\b/ && gitlens:hasRemotes",
                    "group": "inline@99",
                    "alt": "gitlens.copyRemoteFileUrlToClipboard"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes",
                    "group": "4_gitlens@1"
                },
                {
                    "command": "gitlens.copyRemoteFileUrlToClipboard",
                    "when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes",
                    "group": "5_gitlens@3"
                },
                {
                    "command": "gitlens.views.openFileRevisionInRemote",
                    "when": "viewItem == gitlens:file:commit && gitlens:hasRemotes",
                    "group": "4_gitlens@2"
                },
                {
                    "command": "gitlens.openFileInRemote",
                    "when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes",
                    "group": "3_gitlens@2"
                },
                {
                    "command": "gitlens.views.applyChanges",
                    "when": "viewItem =~ /gitlens:file:(commit|results)\\b/",
                    "group": "5_gitlens_1@1"
                },
                {
                    "command": "gitlens.views.applyChanges",
                    "when": "!gitlens:readonly && viewItem == gitlens:file:stash",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.showQuickCommitDetails",
                    "when": "viewItem =~ /gitlens:file\\b(?!(:stash|:status))/",
                    "group": "5_gitlens_2@2"
                },
                {
                    "command": "gitlens.showCommitInView",
                    "when": "viewItem =~ /gitlens:file\\b(?!(:stash|:status))/",
                    "group": "5_gitlens_2@3"
                },
                {
                    "command": "gitlens.showQuickFileHistory",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.showFileHistoryInView",
                    "when": "viewItem =~ /gitlens:file\\b/",
                    "group": "8_gitlens@2"
                },
                {
                    "command": "gitlens.views.fetch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
                    "group": "inline@97"
                },
                {
                    "command": "gitlens.openRepoInRemote",
                    "when": "viewItem =~ /gitlens:remote\\b/",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.views.fetch",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.openRepoInRemote",
                    "when": "viewItem =~ /gitlens:remote\\b/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.openBranchesInRemote",
                    "when": "viewItem =~ /gitlens:remote\\b/",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.views.terminalRemoveRemote",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:remote\\b/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.setAsDefault",
                    "when": "viewItem =~ /gitlens:remote\\b(?!.*?\\+default\\b.*?)/",
                    "group": "8_gitlens_@1"
                },
                {
                    "command": "gitlens.views.unsetAsDefault",
                    "when": "viewItem =~ /gitlens:remote\\b.*?\\+default\\b.*?/",
                    "group": "8_gitlens_@1"
                },
                {
                    "command": "gitlens.views.exploreRepoRevision",
                    "when": "viewItem =~ /gitlens:(branch|commit|file:(commit|results)|stash|tag)\\b/",
                    "group": "7_gitlens_more@1"
                },
                {
                    "command": "gitlens.showCommitSearch",
                    "when": "viewItem =~ /gitlens:repository\\b/",
                    "group": "inline@10"
                },
                {
                    "command": "gitlens.views.star",
                    "when": "viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.unstar",
                    "when": "viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/",
                    "group": "inline@2"
                },
                {
                    "command": "gitlens.views.push",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "inline@97",
                    "alt": "gitlens.views.pushWithForce"
                },
                {
                    "command": "gitlens.views.pull",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.views.fetch",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "inline@99"
                },
                {
                    "command": "gitlens.views.fetch",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.pull",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.push",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.pushWithForce",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.views.openInTerminal",
                    "when": "viewItem =~ /gitlens:repository\\b/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.openRepoInRemote",
                    "when": "viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.showCommitSearch",
                    "when": "viewItem =~ /gitlens:repository\\b/",
                    "group": "3_gitlens@1"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "4_gitlens@1"
                },
                {
                    "command": "gitlens.stashSave",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:repository\\b/",
                    "group": "4_gitlens@2"
                },
                {
                    "command": "gitlens.views.star",
                    "when": "viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.unstar",
                    "when": "viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.closeRepository",
                    "when": "viewItem =~ /gitlens:repository\\b/",
                    "group": "8_gitlens@2"
                },
                {
                    "command": "gitlens.views.pull",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.pull",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.push",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
                    "group": "inline@1",
                    "alt": "gitlens.views.pushWithForce"
                },
                {
                    "command": "gitlens.views.push",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.pushWithForce",
                    "when": "gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.views.dismissNode",
                    "when": "viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/",
                    "group": "inline@99"
                },
                {
                    "command": "gitlens.views.compare.pinComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.compare.unpinComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.compare.swapComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b/",
                    "group": "inline@2"
                },
                {
                    "command": "gitlens.views.refreshNode",
                    "when": "viewItem =~ /gitlens:compare:results\\b/",
                    "group": "inline@3"
                },
                {
                    "command": "gitlens.views.openDirectoryDiff",
                    "when": "viewItem =~ /gitlens:compare:results\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.compare.pinComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.views.compare.unpinComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.views.compare.swapComparison",
                    "when": "viewItem =~ /gitlens:compare:results\\b/",
                    "group": "2_gitlens@2"
                },
                {
                    "command": "gitlens.views.search.searchCommits",
                    "when": "viewItem == gitlens:search:results",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.search.searchCommits",
                    "when": "viewItem == gitlens:search:results",
                    "group": "2_gitlens@1"
                },
                {
                    "command": "gitlens.stashSave",
                    "when": "!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "!gitlens:readonly && viewItem == gitlens:stashes",
                    "group": "inline@99"
                },
                {
                    "command": "gitlens.stashSave",
                    "when": "!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "!gitlens:readonly && viewItem == gitlens:stashes",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "!gitlens:readonly && viewItem == gitlens:stash",
                    "group": "inline@98"
                },
                {
                    "command": "gitlens.stashDelete",
                    "when": "!gitlens:readonly && viewItem == gitlens:stash",
                    "group": "inline@99"
                },
                {
                    "command": "gitlens.stashApply",
                    "when": "!gitlens:readonly && viewItem == gitlens:stash",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.stashDelete",
                    "when": "!gitlens:readonly && viewItem == gitlens:stash",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.views.checkout",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:tag\\b/",
                    "group": "inline@10"
                },
                {
                    "command": "gitlens.views.checkout",
                    "when": "!gitlens:readonly && viewItem =~ /gitlens:tag\\b/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.terminalDeleteTag",
                    "when": "!gitlens:readonly && viewItem == gitlens:tag",
                    "group": "8_gitlens"
                },
                {
                    "command": "gitlens.views.stageDirectory",
                    "when": "viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/",
                    "group": "inline@1"
                },
                {
                    "command": "gitlens.views.unstageDirectory",
                    "when": "viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/",
                    "group": "inline@2"
                },
                {
                    "command": "gitlens.views.stageDirectory",
                    "when": "viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/",
                    "group": "1_gitlens@1"
                },
                {
                    "command": "gitlens.views.unstageDirectory",
                    "when": "viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/",
                    "group": "1_gitlens@2"
                },
                {
                    "command": "gitlens.views.expandNode",
                    "when": "viewItem =~ /gitlens:(compare|folder|results|search|status:files)\\b/",
                    "group": "8_gitlens@1"
                },
                {
                    "command": "gitlens.views.dismissNode",
                    "when": "viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/",
                    "group": "8_gitlens@2"
                },
                {
                    "command": "gitlens.views.refreshNode",
                    "when": "viewItem =~ /gitlens:(?!file\\b)/",
                    "group": "9_gitlens@1"
                }
            ]
        },
        "keybindings": [
            {
                "command": "gitlens.key.left",
                "key": "alt+left",
                "when": "gitlens:key:left"
            },
            {
                "command": "gitlens.key.right",
                "key": "alt+right",
                "when": "gitlens:key:right"
            },
            {
                "command": "gitlens.key.,",
                "key": "alt+,",
                "when": "gitlens:key:,"
            },
            {
                "command": "gitlens.key..",
                "key": "alt+.",
                "when": "gitlens:key:."
            },
            {
                "command": "gitlens.key.escape",
                "key": "escape",
                "when": "gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"
            },
            {
                "command": "gitlens.toggleFileBlame",
                "key": "alt+b",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
            },
            {
                "command": "gitlens.toggleCodeLens",
                "key": "shift+alt+b",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"
            },
            {
                "command": "gitlens.showLastQuickPick",
                "key": "alt+-",
                "when": "config.gitlens.keymap == alternate && gitlens:enabled"
            },
            {
                "command": "gitlens.showCommitSearch",
                "key": "alt+/",
                "when": "config.gitlens.keymap == alternate && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickFileHistory",
                "key": "alt+h",
                "when": "config.gitlens.keymap == alternate && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickRepoHistory",
                "key": "shift+alt+h",
                "when": "config.gitlens.keymap == alternate && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickRepoStatus",
                "key": "alt+s",
                "when": "config.gitlens.keymap == alternate && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickCommitFileDetails",
                "key": "alt+c",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"
            },
            {
                "command": "gitlens.diffWithNext",
                "key": "alt+.",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffLineWithPrevious",
                "key": "shift+alt+,",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithPrevious",
                "key": "alt+,",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithPreviousInDiff",
                "key": "alt+,",
                "when": "config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffLineWithWorking",
                "key": "alt+w",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithWorking",
                "key": "shift+alt+w",
                "when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.toggleFileBlame",
                "key": "ctrl+shift+g b",
                "mac": "cmd+alt+g b",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"
            },
            {
                "command": "gitlens.toggleCodeLens",
                "key": "ctrl+shift+g shift+b",
                "mac": "cmd+alt+g shift+b",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"
            },
            {
                "command": "gitlens.showLastQuickPick",
                "key": "ctrl+shift+g -",
                "mac": "cmd+alt+g -",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            },
            {
                "command": "gitlens.showCommitSearch",
                "key": "ctrl+shift+g /",
                "mac": "cmd+alt+g /",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickFileHistory",
                "key": "ctrl+shift+g h",
                "mac": "cmd+alt+g h",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickRepoHistory",
                "key": "ctrl+shift+g shift+h",
                "mac": "cmd+alt+g shift+h",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickRepoStatus",
                "key": "ctrl+shift+g s",
                "mac": "cmd+alt+g s",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            },
            {
                "command": "gitlens.showQuickCommitFileDetails",
                "key": "ctrl+shift+g c",
                "mac": "cmd+alt+g c",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"
            },
            {
                "command": "gitlens.diffWithNext",
                "key": "ctrl+shift+g .",
                "mac": "cmd+alt+g .",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffLineWithPrevious",
                "key": "ctrl+shift+g shift+,",
                "mac": "cmd+alt+g shift+,",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithPrevious",
                "key": "ctrl+shift+g ,",
                "mac": "cmd+alt+g ,",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithPreviousInDiff",
                "key": "ctrl+shift+g ,",
                "mac": "cmd+alt+g ,",
                "when": "config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffLineWithWorking",
                "key": "ctrl+shift+g w",
                "mac": "cmd+alt+g w",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "gitlens.diffWithWorking",
                "key": "ctrl+shift+g shift+w",
                "mac": "cmd+alt+g shift+w",
                "when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"
            },
            {
                "command": "workbench.view.scm",
                "key": "ctrl+shift+g g",
                "mac": "ctrl+shift+g",
                "when": "config.gitlens.keymap == chorded && gitlens:enabled"
            }
        ],
        "resourceLabelFormatters": [
            {
                "scheme": "gitlens",
                "authority": "*",
                "formatting": {
                    "label": "${path} (${authority})",
                    "separator": "/"
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "gitlens",
                    "title": "GitLens",
                    "icon": "images/gitlens-activitybar.svg"
                }
            ]
        },
        "views": {
            "gitlens": [
                {
                    "id": "gitlens.views.repositories:gitlens",
                    "name": "Repositories",
                    "when": "config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"
                },
                {
                    "id": "gitlens.views.fileHistory:gitlens",
                    "name": "File History",
                    "when": "config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"
                },
                {
                    "id": "gitlens.views.lineHistory:gitlens",
                    "name": "Line History",
                    "when": "config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"
                },
                {
                    "id": "gitlens.views.compare:gitlens",
                    "name": "Compare",
                    "when": "config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"
                },
                {
                    "id": "gitlens.views.search:gitlens",
                    "name": "Search Commits",
                    "when": "config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"
                }
            ],
            "explorer": [
                {
                    "id": "gitlens.views.repositories:explorer",
                    "name": "GitLens: Repositories",
                    "when": "gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"
                },
                {
                    "id": "gitlens.views.fileHistory:explorer",
                    "name": "GitLens: File History",
                    "when": "gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"
                },
                {
                    "id": "gitlens.views.lineHistory:explorer",
                    "name": "GitLens: Line History",
                    "when": "gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"
                },
                {
                    "id": "gitlens.views.compare:explorer",
                    "name": "GitLens: Compare",
                    "when": "gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"
                },
                {
                    "id": "gitlens.views.search:explorer",
                    "name": "GitLens: Search Commits",
                    "when": "gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"
                }
            ],
            "scm": [
                {
                    "id": "gitlens.views.repositories:scm",
                    "name": "%ext.views.scm.repositories%",
                    "when": "gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"
                },
                {
                    "id": "gitlens.views.fileHistory:scm",
                    "name": "%ext.views.scm.fileHistory%",
                    "when": "gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"
                },
                {
                    "id": "gitlens.views.lineHistory:scm",
                    "name": "%ext.views.scm.lineHistory%",
                    "when": "gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"
                },
                {
                    "id": "gitlens.views.compare:scm",
                    "name": "%ext.views.scm.compare%",
                    "when": "gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"
                },
                {
                    "id": "gitlens.views.search:scm",
                    "name": "%ext.views.scm.search%",
                    "when": "gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"
                }
            ]
        }
    },
    "scripts": {
        "build": "webpack --env.development",
        "bundle": "webpack --env.production",
        "clean": "git clean -Xdf -e !.cache-images -e !node_modules -e !node_modules/**/*",
        "lint": "tslint --project tsconfig.json && tslint --project ui.tsconfig.json",
        "pack": "vsce package",
        "pretty": "prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\" && tslint --project tsconfig.json --fix && tslint --project ui.tsconfig.json --fix",
        "pub": "vsce publish",
        "rebuild": "npm run reset && npm run build",
        "reset": "npm run clean && npm install --no-save",
        "watch": "webpack --watch --env.development --info-verbosity verbose",
        "ui:optimize": "webpack --config-name ui --env.optimizeImages",
        "ui:watch": "webpack --watch --config-name ui --env.development --info-verbosity verbose",
        "update:emoji": "pushd emoji && node ./shortcodeToEmoji.js && popd",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "vscode:prepublish": "npm run reset && npm run bundle"
    },
    "dependencies": {
        "date-fns": "1.30.1",
        "iconv-lite": "0.4.24",
        "lodash-es": "4.17.11",
        "tslib": "1.9.3",
        "vsls": "0.3.967"
    },
    "devDependencies": {
        "@types/lodash-es": "4.17.1",
        "@types/node": "10.1.4",
        "clean-webpack-plugin": "1.0.1",
        "css-loader": "2.1.0",
        "html-webpack-inline-source-plugin": "0.0.10",
        "html-webpack-plugin": "3.2.0",
        "imagemin-webpack-plugin": "2.4.2",
        "mini-css-extract-plugin": "0.5.0",
        "node-sass": "4.11.0",
        "prettier": "1.16.4",
        "prettier-tslint": "0.4.2",
        "sass-loader": "7.1.0",
        "terser-webpack-plugin": "1.2.2",
        "tslint": "5.12.1",
        "tslint-loader": "3.5.4",
        "tslint-prettiest": "0.0.1",
        "ts-loader": "5.3.3",
        "typescript": "3.2.4",
        "vsce": "1.57.0",
        "vscode": "1.1.29",
        "webpack": "4.29.3",
        "webpack-cli": "3.2.3"
    }
}
